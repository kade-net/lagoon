
union PublicationRefference = Publication | Quote | Comment
scalar Date
scalar JSON

type AccountStats {
    followers: Int!
    following: Int!
    publications: Int!
    delegates: Int!
    reposts: Int!
    quotes: Int!
    comments: Int!
    reactions: Int!
    
}

type Account {
    id: Int!
    bio: String
    username: String!
    address: String!
    object_address: String!
    followers: [Follow!]
    following: [Follow!]
    publications: [Publication!]
    delegates: [Delegate!]
    reposts: [RePost!]
    quotes: [Quote!]
    comments: [Comment!]
    reactions: [Reaction!]
    stats: AccountStats!
    timestamp: Date!
}

type Delegate {
    id: Int!
    address: String!
    owner_id: Int!
    owner: Account!
    timestamp: Date!
}

type Follow {
    id: Int!
    follower_id: Int!
    follower: Account!
    following_id: Int! 
    following: Account!
    timestamp: Date!
}

type PublicationStats {
    reposts: Int!
    quotes: Int!
    comments: Int!
    reactions: Int!
}

type Publication {
    id: Int!
    content: JSON!
    creator_id: Int!
    creator: Account!
    reposts: [RePost!]
    quotes: [Quote!]
    comments: [Comment!]
    reactions: [Reaction!]
    timestamp: Date!
    stats: PublicationStats!
}


type RePost {
    id: Int!
    publication_id: Int!
    publication: Publication!
    creator_id: Int!
    creator: Account!
    timestamp: Date!
}

type QuoteStats {
    reactions: Int!
    comments: Int!
}

type Quote {
    id: Int!
    publication_id: Int!
    publication: Publication!
    creator_id: Int!
    creator: Account!
    content: JSON!
    reactions: [Reaction!]
    comments: [Comment!]
    stats: QuoteStats!
    timestamp: Date!
}

type CommentStats {
    reactions: Int!
    comments: Int!
}
type Comment {
    id: Int!
    publication_id: Int
    comment_id: Int
    creator_id: Int!
    content: JSON
    creator: Account!
    refference: PublicationRefference
    comments: [Comment!]
    reactions: [Reaction!]
    stats: CommentStats!
    timestamp: Date!
}


type Reaction {
    id: Int!
    publication_id: Int
    comment_id: Int
    quote_id: Int
    creator_id: Int!
    reaction: Int!
    creator: Account!
    refference: PublicationRefference
    timestamp: Date!
}


input Pagination {
    page: Int!
    size: Int!
}

enum SortOrder {
    ASC
    DESC
}

type Query {
    account(id: Int, address: String): Account
    accounts(pagination: Pagination, sort: SortOrder): [Account!]
    publication(id: Int): Publication
    publications(pagination: Pagination, creator: Int, sort: SortOrder): [Publication!]
    repost(id: Int): RePost 
    reposts(pagination: Pagination, creator: Int, publication_id: Int, sort: SortOrder): [RePost!]
    quote(id: Int): Quote
    quotes(pagination: Pagination, creator: Int, publication_id: Int, sort: SortOrder): [Quote!]
    comment(id: Int): Comment
    comments(pagination: Pagination, creator: Int, refference_id: Int, comment_type: Int, sort: SortOrder): [Comment!]
    reaction(id: Int): Reaction
    
}






