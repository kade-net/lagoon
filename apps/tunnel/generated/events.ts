/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.19.1
 * source: events.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as pb_1 from "google-protobuf";
export namespace events {
    export class AccountCreateEvent extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            username?: string;
            creator_address?: string;
            account_object_address?: string;
            kid?: number;
            timestamp?: number;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("username" in data && data.username != undefined) {
                    this.username = data.username;
                }
                if ("creator_address" in data && data.creator_address != undefined) {
                    this.creator_address = data.creator_address;
                }
                if ("account_object_address" in data && data.account_object_address != undefined) {
                    this.account_object_address = data.account_object_address;
                }
                if ("kid" in data && data.kid != undefined) {
                    this.kid = data.kid;
                }
                if ("timestamp" in data && data.timestamp != undefined) {
                    this.timestamp = data.timestamp;
                }
            }
        }
        get username() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set username(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get creator_address() {
            return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
        }
        set creator_address(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        get account_object_address() {
            return pb_1.Message.getFieldWithDefault(this, 3, "") as string;
        }
        set account_object_address(value: string) {
            pb_1.Message.setField(this, 3, value);
        }
        get kid() {
            return pb_1.Message.getFieldWithDefault(this, 4, 0) as number;
        }
        set kid(value: number) {
            pb_1.Message.setField(this, 4, value);
        }
        get timestamp() {
            return pb_1.Message.getFieldWithDefault(this, 5, 0) as number;
        }
        set timestamp(value: number) {
            pb_1.Message.setField(this, 5, value);
        }
        static fromObject(data: {
            username?: string;
            creator_address?: string;
            account_object_address?: string;
            kid?: number;
            timestamp?: number;
        }): AccountCreateEvent {
            const message = new AccountCreateEvent({});
            if (data.username != null) {
                message.username = data.username;
            }
            if (data.creator_address != null) {
                message.creator_address = data.creator_address;
            }
            if (data.account_object_address != null) {
                message.account_object_address = data.account_object_address;
            }
            if (data.kid != null) {
                message.kid = data.kid;
            }
            if (data.timestamp != null) {
                message.timestamp = data.timestamp;
            }
            return message;
        }
        toObject() {
            const data: {
                username?: string;
                creator_address?: string;
                account_object_address?: string;
                kid?: number;
                timestamp?: number;
            } = {};
            if (this.username != null) {
                data.username = this.username;
            }
            if (this.creator_address != null) {
                data.creator_address = this.creator_address;
            }
            if (this.account_object_address != null) {
                data.account_object_address = this.account_object_address;
            }
            if (this.kid != null) {
                data.kid = this.kid;
            }
            if (this.timestamp != null) {
                data.timestamp = this.timestamp;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.username.length)
                writer.writeString(1, this.username);
            if (this.creator_address.length)
                writer.writeString(2, this.creator_address);
            if (this.account_object_address.length)
                writer.writeString(3, this.account_object_address);
            if (this.kid != 0)
                writer.writeInt32(4, this.kid);
            if (this.timestamp != 0)
                writer.writeInt64(5, this.timestamp);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): AccountCreateEvent {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new AccountCreateEvent();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.username = reader.readString();
                        break;
                    case 2:
                        message.creator_address = reader.readString();
                        break;
                    case 3:
                        message.account_object_address = reader.readString();
                        break;
                    case 4:
                        message.kid = reader.readInt32();
                        break;
                    case 5:
                        message.timestamp = reader.readInt64();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): AccountCreateEvent {
            return AccountCreateEvent.deserialize(bytes);
        }
    }
    export class DelegateCreateEvent extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            owner_address?: string;
            object_address?: string;
            delegate_address?: string;
            kid?: number;
            timestamp?: number;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("owner_address" in data && data.owner_address != undefined) {
                    this.owner_address = data.owner_address;
                }
                if ("object_address" in data && data.object_address != undefined) {
                    this.object_address = data.object_address;
                }
                if ("delegate_address" in data && data.delegate_address != undefined) {
                    this.delegate_address = data.delegate_address;
                }
                if ("kid" in data && data.kid != undefined) {
                    this.kid = data.kid;
                }
                if ("timestamp" in data && data.timestamp != undefined) {
                    this.timestamp = data.timestamp;
                }
            }
        }
        get owner_address() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set owner_address(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get object_address() {
            return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
        }
        set object_address(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        get delegate_address() {
            return pb_1.Message.getFieldWithDefault(this, 3, "") as string;
        }
        set delegate_address(value: string) {
            pb_1.Message.setField(this, 3, value);
        }
        get kid() {
            return pb_1.Message.getFieldWithDefault(this, 4, 0) as number;
        }
        set kid(value: number) {
            pb_1.Message.setField(this, 4, value);
        }
        get timestamp() {
            return pb_1.Message.getFieldWithDefault(this, 5, 0) as number;
        }
        set timestamp(value: number) {
            pb_1.Message.setField(this, 5, value);
        }
        static fromObject(data: {
            owner_address?: string;
            object_address?: string;
            delegate_address?: string;
            kid?: number;
            timestamp?: number;
        }): DelegateCreateEvent {
            const message = new DelegateCreateEvent({});
            if (data.owner_address != null) {
                message.owner_address = data.owner_address;
            }
            if (data.object_address != null) {
                message.object_address = data.object_address;
            }
            if (data.delegate_address != null) {
                message.delegate_address = data.delegate_address;
            }
            if (data.kid != null) {
                message.kid = data.kid;
            }
            if (data.timestamp != null) {
                message.timestamp = data.timestamp;
            }
            return message;
        }
        toObject() {
            const data: {
                owner_address?: string;
                object_address?: string;
                delegate_address?: string;
                kid?: number;
                timestamp?: number;
            } = {};
            if (this.owner_address != null) {
                data.owner_address = this.owner_address;
            }
            if (this.object_address != null) {
                data.object_address = this.object_address;
            }
            if (this.delegate_address != null) {
                data.delegate_address = this.delegate_address;
            }
            if (this.kid != null) {
                data.kid = this.kid;
            }
            if (this.timestamp != null) {
                data.timestamp = this.timestamp;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.owner_address.length)
                writer.writeString(1, this.owner_address);
            if (this.object_address.length)
                writer.writeString(2, this.object_address);
            if (this.delegate_address.length)
                writer.writeString(3, this.delegate_address);
            if (this.kid != 0)
                writer.writeInt32(4, this.kid);
            if (this.timestamp != 0)
                writer.writeInt64(5, this.timestamp);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): DelegateCreateEvent {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new DelegateCreateEvent();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.owner_address = reader.readString();
                        break;
                    case 2:
                        message.object_address = reader.readString();
                        break;
                    case 3:
                        message.delegate_address = reader.readString();
                        break;
                    case 4:
                        message.kid = reader.readInt32();
                        break;
                    case 5:
                        message.timestamp = reader.readInt64();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): DelegateCreateEvent {
            return DelegateCreateEvent.deserialize(bytes);
        }
    }
    export class DelegateRemoveEvent extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            owner_address?: string;
            object_address?: string;
            delegate_address?: string;
            kid?: number;
            timestamp?: number;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("owner_address" in data && data.owner_address != undefined) {
                    this.owner_address = data.owner_address;
                }
                if ("object_address" in data && data.object_address != undefined) {
                    this.object_address = data.object_address;
                }
                if ("delegate_address" in data && data.delegate_address != undefined) {
                    this.delegate_address = data.delegate_address;
                }
                if ("kid" in data && data.kid != undefined) {
                    this.kid = data.kid;
                }
                if ("timestamp" in data && data.timestamp != undefined) {
                    this.timestamp = data.timestamp;
                }
            }
        }
        get owner_address() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set owner_address(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get object_address() {
            return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
        }
        set object_address(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        get delegate_address() {
            return pb_1.Message.getFieldWithDefault(this, 3, "") as string;
        }
        set delegate_address(value: string) {
            pb_1.Message.setField(this, 3, value);
        }
        get kid() {
            return pb_1.Message.getFieldWithDefault(this, 4, 0) as number;
        }
        set kid(value: number) {
            pb_1.Message.setField(this, 4, value);
        }
        get timestamp() {
            return pb_1.Message.getFieldWithDefault(this, 5, 0) as number;
        }
        set timestamp(value: number) {
            pb_1.Message.setField(this, 5, value);
        }
        static fromObject(data: {
            owner_address?: string;
            object_address?: string;
            delegate_address?: string;
            kid?: number;
            timestamp?: number;
        }): DelegateRemoveEvent {
            const message = new DelegateRemoveEvent({});
            if (data.owner_address != null) {
                message.owner_address = data.owner_address;
            }
            if (data.object_address != null) {
                message.object_address = data.object_address;
            }
            if (data.delegate_address != null) {
                message.delegate_address = data.delegate_address;
            }
            if (data.kid != null) {
                message.kid = data.kid;
            }
            if (data.timestamp != null) {
                message.timestamp = data.timestamp;
            }
            return message;
        }
        toObject() {
            const data: {
                owner_address?: string;
                object_address?: string;
                delegate_address?: string;
                kid?: number;
                timestamp?: number;
            } = {};
            if (this.owner_address != null) {
                data.owner_address = this.owner_address;
            }
            if (this.object_address != null) {
                data.object_address = this.object_address;
            }
            if (this.delegate_address != null) {
                data.delegate_address = this.delegate_address;
            }
            if (this.kid != null) {
                data.kid = this.kid;
            }
            if (this.timestamp != null) {
                data.timestamp = this.timestamp;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.owner_address.length)
                writer.writeString(1, this.owner_address);
            if (this.object_address.length)
                writer.writeString(2, this.object_address);
            if (this.delegate_address.length)
                writer.writeString(3, this.delegate_address);
            if (this.kid != 0)
                writer.writeInt32(4, this.kid);
            if (this.timestamp != 0)
                writer.writeInt64(5, this.timestamp);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): DelegateRemoveEvent {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new DelegateRemoveEvent();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.owner_address = reader.readString();
                        break;
                    case 2:
                        message.object_address = reader.readString();
                        break;
                    case 3:
                        message.delegate_address = reader.readString();
                        break;
                    case 4:
                        message.kid = reader.readInt32();
                        break;
                    case 5:
                        message.timestamp = reader.readInt64();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): DelegateRemoveEvent {
            return DelegateRemoveEvent.deserialize(bytes);
        }
    }
    export class ReactionCreateEvent extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            kid?: number;
            user_kid?: number;
            delegate?: string;
            reaction?: number;
            reference_kid?: number;
            timestamp?: number;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("kid" in data && data.kid != undefined) {
                    this.kid = data.kid;
                }
                if ("user_kid" in data && data.user_kid != undefined) {
                    this.user_kid = data.user_kid;
                }
                if ("delegate" in data && data.delegate != undefined) {
                    this.delegate = data.delegate;
                }
                if ("reaction" in data && data.reaction != undefined) {
                    this.reaction = data.reaction;
                }
                if ("reference_kid" in data && data.reference_kid != undefined) {
                    this.reference_kid = data.reference_kid;
                }
                if ("timestamp" in data && data.timestamp != undefined) {
                    this.timestamp = data.timestamp;
                }
            }
        }
        get kid() {
            return pb_1.Message.getFieldWithDefault(this, 1, 0) as number;
        }
        set kid(value: number) {
            pb_1.Message.setField(this, 1, value);
        }
        get user_kid() {
            return pb_1.Message.getFieldWithDefault(this, 2, 0) as number;
        }
        set user_kid(value: number) {
            pb_1.Message.setField(this, 2, value);
        }
        get delegate() {
            return pb_1.Message.getFieldWithDefault(this, 3, "") as string;
        }
        set delegate(value: string) {
            pb_1.Message.setField(this, 3, value);
        }
        get reaction() {
            return pb_1.Message.getFieldWithDefault(this, 4, 0) as number;
        }
        set reaction(value: number) {
            pb_1.Message.setField(this, 4, value);
        }
        get reference_kid() {
            return pb_1.Message.getFieldWithDefault(this, 5, 0) as number;
        }
        set reference_kid(value: number) {
            pb_1.Message.setField(this, 5, value);
        }
        get timestamp() {
            return pb_1.Message.getFieldWithDefault(this, 6, 0) as number;
        }
        set timestamp(value: number) {
            pb_1.Message.setField(this, 6, value);
        }
        static fromObject(data: {
            kid?: number;
            user_kid?: number;
            delegate?: string;
            reaction?: number;
            reference_kid?: number;
            timestamp?: number;
        }): ReactionCreateEvent {
            const message = new ReactionCreateEvent({});
            if (data.kid != null) {
                message.kid = data.kid;
            }
            if (data.user_kid != null) {
                message.user_kid = data.user_kid;
            }
            if (data.delegate != null) {
                message.delegate = data.delegate;
            }
            if (data.reaction != null) {
                message.reaction = data.reaction;
            }
            if (data.reference_kid != null) {
                message.reference_kid = data.reference_kid;
            }
            if (data.timestamp != null) {
                message.timestamp = data.timestamp;
            }
            return message;
        }
        toObject() {
            const data: {
                kid?: number;
                user_kid?: number;
                delegate?: string;
                reaction?: number;
                reference_kid?: number;
                timestamp?: number;
            } = {};
            if (this.kid != null) {
                data.kid = this.kid;
            }
            if (this.user_kid != null) {
                data.user_kid = this.user_kid;
            }
            if (this.delegate != null) {
                data.delegate = this.delegate;
            }
            if (this.reaction != null) {
                data.reaction = this.reaction;
            }
            if (this.reference_kid != null) {
                data.reference_kid = this.reference_kid;
            }
            if (this.timestamp != null) {
                data.timestamp = this.timestamp;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.kid != 0)
                writer.writeInt32(1, this.kid);
            if (this.user_kid != 0)
                writer.writeInt32(2, this.user_kid);
            if (this.delegate.length)
                writer.writeString(3, this.delegate);
            if (this.reaction != 0)
                writer.writeInt32(4, this.reaction);
            if (this.reference_kid != 0)
                writer.writeInt32(5, this.reference_kid);
            if (this.timestamp != 0)
                writer.writeInt64(6, this.timestamp);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ReactionCreateEvent {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ReactionCreateEvent();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.kid = reader.readInt32();
                        break;
                    case 2:
                        message.user_kid = reader.readInt32();
                        break;
                    case 3:
                        message.delegate = reader.readString();
                        break;
                    case 4:
                        message.reaction = reader.readInt32();
                        break;
                    case 5:
                        message.reference_kid = reader.readInt32();
                        break;
                    case 6:
                        message.timestamp = reader.readInt64();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): ReactionCreateEvent {
            return ReactionCreateEvent.deserialize(bytes);
        }
    }
    export class ReactionRemoveEvent extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            kid?: number;
            user_kid?: number;
            delegate?: string;
            timestamp?: number;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("kid" in data && data.kid != undefined) {
                    this.kid = data.kid;
                }
                if ("user_kid" in data && data.user_kid != undefined) {
                    this.user_kid = data.user_kid;
                }
                if ("delegate" in data && data.delegate != undefined) {
                    this.delegate = data.delegate;
                }
                if ("timestamp" in data && data.timestamp != undefined) {
                    this.timestamp = data.timestamp;
                }
            }
        }
        get kid() {
            return pb_1.Message.getFieldWithDefault(this, 1, 0) as number;
        }
        set kid(value: number) {
            pb_1.Message.setField(this, 1, value);
        }
        get user_kid() {
            return pb_1.Message.getFieldWithDefault(this, 2, 0) as number;
        }
        set user_kid(value: number) {
            pb_1.Message.setField(this, 2, value);
        }
        get delegate() {
            return pb_1.Message.getFieldWithDefault(this, 3, "") as string;
        }
        set delegate(value: string) {
            pb_1.Message.setField(this, 3, value);
        }
        get timestamp() {
            return pb_1.Message.getFieldWithDefault(this, 4, 0) as number;
        }
        set timestamp(value: number) {
            pb_1.Message.setField(this, 4, value);
        }
        static fromObject(data: {
            kid?: number;
            user_kid?: number;
            delegate?: string;
            timestamp?: number;
        }): ReactionRemoveEvent {
            const message = new ReactionRemoveEvent({});
            if (data.kid != null) {
                message.kid = data.kid;
            }
            if (data.user_kid != null) {
                message.user_kid = data.user_kid;
            }
            if (data.delegate != null) {
                message.delegate = data.delegate;
            }
            if (data.timestamp != null) {
                message.timestamp = data.timestamp;
            }
            return message;
        }
        toObject() {
            const data: {
                kid?: number;
                user_kid?: number;
                delegate?: string;
                timestamp?: number;
            } = {};
            if (this.kid != null) {
                data.kid = this.kid;
            }
            if (this.user_kid != null) {
                data.user_kid = this.user_kid;
            }
            if (this.delegate != null) {
                data.delegate = this.delegate;
            }
            if (this.timestamp != null) {
                data.timestamp = this.timestamp;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.kid != 0)
                writer.writeInt32(1, this.kid);
            if (this.user_kid != 0)
                writer.writeInt32(2, this.user_kid);
            if (this.delegate.length)
                writer.writeString(3, this.delegate);
            if (this.timestamp != 0)
                writer.writeInt64(4, this.timestamp);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ReactionRemoveEvent {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ReactionRemoveEvent();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.kid = reader.readInt32();
                        break;
                    case 2:
                        message.user_kid = reader.readInt32();
                        break;
                    case 3:
                        message.delegate = reader.readString();
                        break;
                    case 4:
                        message.timestamp = reader.readInt64();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): ReactionRemoveEvent {
            return ReactionRemoveEvent.deserialize(bytes);
        }
    }
    export class ReactionCreateEventWithRef extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            kid?: number;
            user_kid?: number;
            delegate?: string;
            reaction?: number;
            publication_ref?: string;
            timestamp?: number;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("kid" in data && data.kid != undefined) {
                    this.kid = data.kid;
                }
                if ("user_kid" in data && data.user_kid != undefined) {
                    this.user_kid = data.user_kid;
                }
                if ("delegate" in data && data.delegate != undefined) {
                    this.delegate = data.delegate;
                }
                if ("reaction" in data && data.reaction != undefined) {
                    this.reaction = data.reaction;
                }
                if ("publication_ref" in data && data.publication_ref != undefined) {
                    this.publication_ref = data.publication_ref;
                }
                if ("timestamp" in data && data.timestamp != undefined) {
                    this.timestamp = data.timestamp;
                }
            }
        }
        get kid() {
            return pb_1.Message.getFieldWithDefault(this, 1, 0) as number;
        }
        set kid(value: number) {
            pb_1.Message.setField(this, 1, value);
        }
        get user_kid() {
            return pb_1.Message.getFieldWithDefault(this, 2, 0) as number;
        }
        set user_kid(value: number) {
            pb_1.Message.setField(this, 2, value);
        }
        get delegate() {
            return pb_1.Message.getFieldWithDefault(this, 3, "") as string;
        }
        set delegate(value: string) {
            pb_1.Message.setField(this, 3, value);
        }
        get reaction() {
            return pb_1.Message.getFieldWithDefault(this, 4, 0) as number;
        }
        set reaction(value: number) {
            pb_1.Message.setField(this, 4, value);
        }
        get publication_ref() {
            return pb_1.Message.getFieldWithDefault(this, 5, "") as string;
        }
        set publication_ref(value: string) {
            pb_1.Message.setField(this, 5, value);
        }
        get timestamp() {
            return pb_1.Message.getFieldWithDefault(this, 6, 0) as number;
        }
        set timestamp(value: number) {
            pb_1.Message.setField(this, 6, value);
        }
        static fromObject(data: {
            kid?: number;
            user_kid?: number;
            delegate?: string;
            reaction?: number;
            publication_ref?: string;
            timestamp?: number;
        }): ReactionCreateEventWithRef {
            const message = new ReactionCreateEventWithRef({});
            if (data.kid != null) {
                message.kid = data.kid;
            }
            if (data.user_kid != null) {
                message.user_kid = data.user_kid;
            }
            if (data.delegate != null) {
                message.delegate = data.delegate;
            }
            if (data.reaction != null) {
                message.reaction = data.reaction;
            }
            if (data.publication_ref != null) {
                message.publication_ref = data.publication_ref;
            }
            if (data.timestamp != null) {
                message.timestamp = data.timestamp;
            }
            return message;
        }
        toObject() {
            const data: {
                kid?: number;
                user_kid?: number;
                delegate?: string;
                reaction?: number;
                publication_ref?: string;
                timestamp?: number;
            } = {};
            if (this.kid != null) {
                data.kid = this.kid;
            }
            if (this.user_kid != null) {
                data.user_kid = this.user_kid;
            }
            if (this.delegate != null) {
                data.delegate = this.delegate;
            }
            if (this.reaction != null) {
                data.reaction = this.reaction;
            }
            if (this.publication_ref != null) {
                data.publication_ref = this.publication_ref;
            }
            if (this.timestamp != null) {
                data.timestamp = this.timestamp;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.kid != 0)
                writer.writeInt32(1, this.kid);
            if (this.user_kid != 0)
                writer.writeInt32(2, this.user_kid);
            if (this.delegate.length)
                writer.writeString(3, this.delegate);
            if (this.reaction != 0)
                writer.writeInt32(4, this.reaction);
            if (this.publication_ref.length)
                writer.writeString(5, this.publication_ref);
            if (this.timestamp != 0)
                writer.writeInt64(6, this.timestamp);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ReactionCreateEventWithRef {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ReactionCreateEventWithRef();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.kid = reader.readInt32();
                        break;
                    case 2:
                        message.user_kid = reader.readInt32();
                        break;
                    case 3:
                        message.delegate = reader.readString();
                        break;
                    case 4:
                        message.reaction = reader.readInt32();
                        break;
                    case 5:
                        message.publication_ref = reader.readString();
                        break;
                    case 6:
                        message.timestamp = reader.readInt64();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): ReactionCreateEventWithRef {
            return ReactionCreateEventWithRef.deserialize(bytes);
        }
    }
    export class ReactionRemoveEventWithRef extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            user_kid?: number;
            delegate?: string;
            timestamp?: number;
            ref?: string;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("user_kid" in data && data.user_kid != undefined) {
                    this.user_kid = data.user_kid;
                }
                if ("delegate" in data && data.delegate != undefined) {
                    this.delegate = data.delegate;
                }
                if ("timestamp" in data && data.timestamp != undefined) {
                    this.timestamp = data.timestamp;
                }
                if ("ref" in data && data.ref != undefined) {
                    this.ref = data.ref;
                }
            }
        }
        get user_kid() {
            return pb_1.Message.getFieldWithDefault(this, 1, 0) as number;
        }
        set user_kid(value: number) {
            pb_1.Message.setField(this, 1, value);
        }
        get delegate() {
            return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
        }
        set delegate(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        get timestamp() {
            return pb_1.Message.getFieldWithDefault(this, 3, 0) as number;
        }
        set timestamp(value: number) {
            pb_1.Message.setField(this, 3, value);
        }
        get ref() {
            return pb_1.Message.getFieldWithDefault(this, 4, "") as string;
        }
        set ref(value: string) {
            pb_1.Message.setField(this, 4, value);
        }
        static fromObject(data: {
            user_kid?: number;
            delegate?: string;
            timestamp?: number;
            ref?: string;
        }): ReactionRemoveEventWithRef {
            const message = new ReactionRemoveEventWithRef({});
            if (data.user_kid != null) {
                message.user_kid = data.user_kid;
            }
            if (data.delegate != null) {
                message.delegate = data.delegate;
            }
            if (data.timestamp != null) {
                message.timestamp = data.timestamp;
            }
            if (data.ref != null) {
                message.ref = data.ref;
            }
            return message;
        }
        toObject() {
            const data: {
                user_kid?: number;
                delegate?: string;
                timestamp?: number;
                ref?: string;
            } = {};
            if (this.user_kid != null) {
                data.user_kid = this.user_kid;
            }
            if (this.delegate != null) {
                data.delegate = this.delegate;
            }
            if (this.timestamp != null) {
                data.timestamp = this.timestamp;
            }
            if (this.ref != null) {
                data.ref = this.ref;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.user_kid != 0)
                writer.writeInt32(1, this.user_kid);
            if (this.delegate.length)
                writer.writeString(2, this.delegate);
            if (this.timestamp != 0)
                writer.writeInt64(3, this.timestamp);
            if (this.ref.length)
                writer.writeString(4, this.ref);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ReactionRemoveEventWithRef {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ReactionRemoveEventWithRef();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.user_kid = reader.readInt32();
                        break;
                    case 2:
                        message.delegate = reader.readString();
                        break;
                    case 3:
                        message.timestamp = reader.readInt64();
                        break;
                    case 4:
                        message.ref = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): ReactionRemoveEventWithRef {
            return ReactionRemoveEventWithRef.deserialize(bytes);
        }
    }
    export class PublicationCreateEvent extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            kid?: number;
            payload?: string;
            user_kid?: number;
            delegate?: string;
            timestamp?: number;
            type?: number;
            reference_kid?: number;
            publication_ref?: string;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("kid" in data && data.kid != undefined) {
                    this.kid = data.kid;
                }
                if ("payload" in data && data.payload != undefined) {
                    this.payload = data.payload;
                }
                if ("user_kid" in data && data.user_kid != undefined) {
                    this.user_kid = data.user_kid;
                }
                if ("delegate" in data && data.delegate != undefined) {
                    this.delegate = data.delegate;
                }
                if ("timestamp" in data && data.timestamp != undefined) {
                    this.timestamp = data.timestamp;
                }
                if ("type" in data && data.type != undefined) {
                    this.type = data.type;
                }
                if ("reference_kid" in data && data.reference_kid != undefined) {
                    this.reference_kid = data.reference_kid;
                }
                if ("publication_ref" in data && data.publication_ref != undefined) {
                    this.publication_ref = data.publication_ref;
                }
            }
        }
        get kid() {
            return pb_1.Message.getFieldWithDefault(this, 1, 0) as number;
        }
        set kid(value: number) {
            pb_1.Message.setField(this, 1, value);
        }
        get payload() {
            return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
        }
        set payload(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        get user_kid() {
            return pb_1.Message.getFieldWithDefault(this, 3, 0) as number;
        }
        set user_kid(value: number) {
            pb_1.Message.setField(this, 3, value);
        }
        get delegate() {
            return pb_1.Message.getFieldWithDefault(this, 4, "") as string;
        }
        set delegate(value: string) {
            pb_1.Message.setField(this, 4, value);
        }
        get timestamp() {
            return pb_1.Message.getFieldWithDefault(this, 5, 0) as number;
        }
        set timestamp(value: number) {
            pb_1.Message.setField(this, 5, value);
        }
        get type() {
            return pb_1.Message.getFieldWithDefault(this, 6, 0) as number;
        }
        set type(value: number) {
            pb_1.Message.setField(this, 6, value);
        }
        get reference_kid() {
            return pb_1.Message.getFieldWithDefault(this, 7, 0) as number;
        }
        set reference_kid(value: number) {
            pb_1.Message.setField(this, 7, value);
        }
        get publication_ref() {
            return pb_1.Message.getFieldWithDefault(this, 8, "") as string;
        }
        set publication_ref(value: string) {
            pb_1.Message.setField(this, 8, value);
        }
        static fromObject(data: {
            kid?: number;
            payload?: string;
            user_kid?: number;
            delegate?: string;
            timestamp?: number;
            type?: number;
            reference_kid?: number;
            publication_ref?: string;
        }): PublicationCreateEvent {
            const message = new PublicationCreateEvent({});
            if (data.kid != null) {
                message.kid = data.kid;
            }
            if (data.payload != null) {
                message.payload = data.payload;
            }
            if (data.user_kid != null) {
                message.user_kid = data.user_kid;
            }
            if (data.delegate != null) {
                message.delegate = data.delegate;
            }
            if (data.timestamp != null) {
                message.timestamp = data.timestamp;
            }
            if (data.type != null) {
                message.type = data.type;
            }
            if (data.reference_kid != null) {
                message.reference_kid = data.reference_kid;
            }
            if (data.publication_ref != null) {
                message.publication_ref = data.publication_ref;
            }
            return message;
        }
        toObject() {
            const data: {
                kid?: number;
                payload?: string;
                user_kid?: number;
                delegate?: string;
                timestamp?: number;
                type?: number;
                reference_kid?: number;
                publication_ref?: string;
            } = {};
            if (this.kid != null) {
                data.kid = this.kid;
            }
            if (this.payload != null) {
                data.payload = this.payload;
            }
            if (this.user_kid != null) {
                data.user_kid = this.user_kid;
            }
            if (this.delegate != null) {
                data.delegate = this.delegate;
            }
            if (this.timestamp != null) {
                data.timestamp = this.timestamp;
            }
            if (this.type != null) {
                data.type = this.type;
            }
            if (this.reference_kid != null) {
                data.reference_kid = this.reference_kid;
            }
            if (this.publication_ref != null) {
                data.publication_ref = this.publication_ref;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.kid != 0)
                writer.writeInt32(1, this.kid);
            if (this.payload.length)
                writer.writeString(2, this.payload);
            if (this.user_kid != 0)
                writer.writeInt32(3, this.user_kid);
            if (this.delegate.length)
                writer.writeString(4, this.delegate);
            if (this.timestamp != 0)
                writer.writeInt64(5, this.timestamp);
            if (this.type != 0)
                writer.writeInt32(6, this.type);
            if (this.reference_kid != 0)
                writer.writeInt32(7, this.reference_kid);
            if (this.publication_ref.length)
                writer.writeString(8, this.publication_ref);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): PublicationCreateEvent {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new PublicationCreateEvent();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.kid = reader.readInt32();
                        break;
                    case 2:
                        message.payload = reader.readString();
                        break;
                    case 3:
                        message.user_kid = reader.readInt32();
                        break;
                    case 4:
                        message.delegate = reader.readString();
                        break;
                    case 5:
                        message.timestamp = reader.readInt64();
                        break;
                    case 6:
                        message.type = reader.readInt32();
                        break;
                    case 7:
                        message.reference_kid = reader.readInt32();
                        break;
                    case 8:
                        message.publication_ref = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): PublicationCreateEvent {
            return PublicationCreateEvent.deserialize(bytes);
        }
    }
    export class PublicationRemoveEvent extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            kid?: number;
            user_kid?: number;
            delegate?: string;
            timestamp?: number;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("kid" in data && data.kid != undefined) {
                    this.kid = data.kid;
                }
                if ("user_kid" in data && data.user_kid != undefined) {
                    this.user_kid = data.user_kid;
                }
                if ("delegate" in data && data.delegate != undefined) {
                    this.delegate = data.delegate;
                }
                if ("timestamp" in data && data.timestamp != undefined) {
                    this.timestamp = data.timestamp;
                }
            }
        }
        get kid() {
            return pb_1.Message.getFieldWithDefault(this, 1, 0) as number;
        }
        set kid(value: number) {
            pb_1.Message.setField(this, 1, value);
        }
        get user_kid() {
            return pb_1.Message.getFieldWithDefault(this, 2, 0) as number;
        }
        set user_kid(value: number) {
            pb_1.Message.setField(this, 2, value);
        }
        get delegate() {
            return pb_1.Message.getFieldWithDefault(this, 3, "") as string;
        }
        set delegate(value: string) {
            pb_1.Message.setField(this, 3, value);
        }
        get timestamp() {
            return pb_1.Message.getFieldWithDefault(this, 4, 0) as number;
        }
        set timestamp(value: number) {
            pb_1.Message.setField(this, 4, value);
        }
        static fromObject(data: {
            kid?: number;
            user_kid?: number;
            delegate?: string;
            timestamp?: number;
        }): PublicationRemoveEvent {
            const message = new PublicationRemoveEvent({});
            if (data.kid != null) {
                message.kid = data.kid;
            }
            if (data.user_kid != null) {
                message.user_kid = data.user_kid;
            }
            if (data.delegate != null) {
                message.delegate = data.delegate;
            }
            if (data.timestamp != null) {
                message.timestamp = data.timestamp;
            }
            return message;
        }
        toObject() {
            const data: {
                kid?: number;
                user_kid?: number;
                delegate?: string;
                timestamp?: number;
            } = {};
            if (this.kid != null) {
                data.kid = this.kid;
            }
            if (this.user_kid != null) {
                data.user_kid = this.user_kid;
            }
            if (this.delegate != null) {
                data.delegate = this.delegate;
            }
            if (this.timestamp != null) {
                data.timestamp = this.timestamp;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.kid != 0)
                writer.writeInt32(1, this.kid);
            if (this.user_kid != 0)
                writer.writeInt32(2, this.user_kid);
            if (this.delegate.length)
                writer.writeString(3, this.delegate);
            if (this.timestamp != 0)
                writer.writeInt64(4, this.timestamp);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): PublicationRemoveEvent {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new PublicationRemoveEvent();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.kid = reader.readInt32();
                        break;
                    case 2:
                        message.user_kid = reader.readInt32();
                        break;
                    case 3:
                        message.delegate = reader.readString();
                        break;
                    case 4:
                        message.timestamp = reader.readInt64();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): PublicationRemoveEvent {
            return PublicationRemoveEvent.deserialize(bytes);
        }
    }
    export class PublicationCreateWithRefEvent extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            kid?: number;
            payload?: string;
            user_kid?: number;
            delegate?: string;
            timestamp?: number;
            type?: number;
            publication_ref?: string;
            parent_ref?: string;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("kid" in data && data.kid != undefined) {
                    this.kid = data.kid;
                }
                if ("payload" in data && data.payload != undefined) {
                    this.payload = data.payload;
                }
                if ("user_kid" in data && data.user_kid != undefined) {
                    this.user_kid = data.user_kid;
                }
                if ("delegate" in data && data.delegate != undefined) {
                    this.delegate = data.delegate;
                }
                if ("timestamp" in data && data.timestamp != undefined) {
                    this.timestamp = data.timestamp;
                }
                if ("type" in data && data.type != undefined) {
                    this.type = data.type;
                }
                if ("publication_ref" in data && data.publication_ref != undefined) {
                    this.publication_ref = data.publication_ref;
                }
                if ("parent_ref" in data && data.parent_ref != undefined) {
                    this.parent_ref = data.parent_ref;
                }
            }
        }
        get kid() {
            return pb_1.Message.getFieldWithDefault(this, 1, 0) as number;
        }
        set kid(value: number) {
            pb_1.Message.setField(this, 1, value);
        }
        get payload() {
            return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
        }
        set payload(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        get user_kid() {
            return pb_1.Message.getFieldWithDefault(this, 3, 0) as number;
        }
        set user_kid(value: number) {
            pb_1.Message.setField(this, 3, value);
        }
        get delegate() {
            return pb_1.Message.getFieldWithDefault(this, 4, "") as string;
        }
        set delegate(value: string) {
            pb_1.Message.setField(this, 4, value);
        }
        get timestamp() {
            return pb_1.Message.getFieldWithDefault(this, 5, 0) as number;
        }
        set timestamp(value: number) {
            pb_1.Message.setField(this, 5, value);
        }
        get type() {
            return pb_1.Message.getFieldWithDefault(this, 6, 0) as number;
        }
        set type(value: number) {
            pb_1.Message.setField(this, 6, value);
        }
        get publication_ref() {
            return pb_1.Message.getFieldWithDefault(this, 7, "") as string;
        }
        set publication_ref(value: string) {
            pb_1.Message.setField(this, 7, value);
        }
        get parent_ref() {
            return pb_1.Message.getFieldWithDefault(this, 8, "") as string;
        }
        set parent_ref(value: string) {
            pb_1.Message.setField(this, 8, value);
        }
        static fromObject(data: {
            kid?: number;
            payload?: string;
            user_kid?: number;
            delegate?: string;
            timestamp?: number;
            type?: number;
            publication_ref?: string;
            parent_ref?: string;
        }): PublicationCreateWithRefEvent {
            const message = new PublicationCreateWithRefEvent({});
            if (data.kid != null) {
                message.kid = data.kid;
            }
            if (data.payload != null) {
                message.payload = data.payload;
            }
            if (data.user_kid != null) {
                message.user_kid = data.user_kid;
            }
            if (data.delegate != null) {
                message.delegate = data.delegate;
            }
            if (data.timestamp != null) {
                message.timestamp = data.timestamp;
            }
            if (data.type != null) {
                message.type = data.type;
            }
            if (data.publication_ref != null) {
                message.publication_ref = data.publication_ref;
            }
            if (data.parent_ref != null) {
                message.parent_ref = data.parent_ref;
            }
            return message;
        }
        toObject() {
            const data: {
                kid?: number;
                payload?: string;
                user_kid?: number;
                delegate?: string;
                timestamp?: number;
                type?: number;
                publication_ref?: string;
                parent_ref?: string;
            } = {};
            if (this.kid != null) {
                data.kid = this.kid;
            }
            if (this.payload != null) {
                data.payload = this.payload;
            }
            if (this.user_kid != null) {
                data.user_kid = this.user_kid;
            }
            if (this.delegate != null) {
                data.delegate = this.delegate;
            }
            if (this.timestamp != null) {
                data.timestamp = this.timestamp;
            }
            if (this.type != null) {
                data.type = this.type;
            }
            if (this.publication_ref != null) {
                data.publication_ref = this.publication_ref;
            }
            if (this.parent_ref != null) {
                data.parent_ref = this.parent_ref;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.kid != 0)
                writer.writeInt32(1, this.kid);
            if (this.payload.length)
                writer.writeString(2, this.payload);
            if (this.user_kid != 0)
                writer.writeInt32(3, this.user_kid);
            if (this.delegate.length)
                writer.writeString(4, this.delegate);
            if (this.timestamp != 0)
                writer.writeInt64(5, this.timestamp);
            if (this.type != 0)
                writer.writeInt32(6, this.type);
            if (this.publication_ref.length)
                writer.writeString(7, this.publication_ref);
            if (this.parent_ref.length)
                writer.writeString(8, this.parent_ref);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): PublicationCreateWithRefEvent {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new PublicationCreateWithRefEvent();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.kid = reader.readInt32();
                        break;
                    case 2:
                        message.payload = reader.readString();
                        break;
                    case 3:
                        message.user_kid = reader.readInt32();
                        break;
                    case 4:
                        message.delegate = reader.readString();
                        break;
                    case 5:
                        message.timestamp = reader.readInt64();
                        break;
                    case 6:
                        message.type = reader.readInt32();
                        break;
                    case 7:
                        message.publication_ref = reader.readString();
                        break;
                    case 8:
                        message.parent_ref = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): PublicationCreateWithRefEvent {
            return PublicationCreateWithRefEvent.deserialize(bytes);
        }
    }
    export class PublicationRemoveWithRefEvent extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            user_kid?: number;
            delegate?: string;
            timestamp?: number;
            ref?: string;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("user_kid" in data && data.user_kid != undefined) {
                    this.user_kid = data.user_kid;
                }
                if ("delegate" in data && data.delegate != undefined) {
                    this.delegate = data.delegate;
                }
                if ("timestamp" in data && data.timestamp != undefined) {
                    this.timestamp = data.timestamp;
                }
                if ("ref" in data && data.ref != undefined) {
                    this.ref = data.ref;
                }
            }
        }
        get user_kid() {
            return pb_1.Message.getFieldWithDefault(this, 1, 0) as number;
        }
        set user_kid(value: number) {
            pb_1.Message.setField(this, 1, value);
        }
        get delegate() {
            return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
        }
        set delegate(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        get timestamp() {
            return pb_1.Message.getFieldWithDefault(this, 3, 0) as number;
        }
        set timestamp(value: number) {
            pb_1.Message.setField(this, 3, value);
        }
        get ref() {
            return pb_1.Message.getFieldWithDefault(this, 4, "") as string;
        }
        set ref(value: string) {
            pb_1.Message.setField(this, 4, value);
        }
        static fromObject(data: {
            user_kid?: number;
            delegate?: string;
            timestamp?: number;
            ref?: string;
        }): PublicationRemoveWithRefEvent {
            const message = new PublicationRemoveWithRefEvent({});
            if (data.user_kid != null) {
                message.user_kid = data.user_kid;
            }
            if (data.delegate != null) {
                message.delegate = data.delegate;
            }
            if (data.timestamp != null) {
                message.timestamp = data.timestamp;
            }
            if (data.ref != null) {
                message.ref = data.ref;
            }
            return message;
        }
        toObject() {
            const data: {
                user_kid?: number;
                delegate?: string;
                timestamp?: number;
                ref?: string;
            } = {};
            if (this.user_kid != null) {
                data.user_kid = this.user_kid;
            }
            if (this.delegate != null) {
                data.delegate = this.delegate;
            }
            if (this.timestamp != null) {
                data.timestamp = this.timestamp;
            }
            if (this.ref != null) {
                data.ref = this.ref;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.user_kid != 0)
                writer.writeInt32(1, this.user_kid);
            if (this.delegate.length)
                writer.writeString(2, this.delegate);
            if (this.timestamp != 0)
                writer.writeInt64(3, this.timestamp);
            if (this.ref.length)
                writer.writeString(4, this.ref);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): PublicationRemoveWithRefEvent {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new PublicationRemoveWithRefEvent();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.user_kid = reader.readInt32();
                        break;
                    case 2:
                        message.delegate = reader.readString();
                        break;
                    case 3:
                        message.timestamp = reader.readInt64();
                        break;
                    case 4:
                        message.ref = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): PublicationRemoveWithRefEvent {
            return PublicationRemoveWithRefEvent.deserialize(bytes);
        }
    }
    export class AccountFollowEvent extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            follower_kid?: number;
            following_kid?: number;
            follower?: string;
            following?: string;
            kid?: number;
            delegate?: string;
            user_kid?: number;
            timestamp?: number;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("follower_kid" in data && data.follower_kid != undefined) {
                    this.follower_kid = data.follower_kid;
                }
                if ("following_kid" in data && data.following_kid != undefined) {
                    this.following_kid = data.following_kid;
                }
                if ("follower" in data && data.follower != undefined) {
                    this.follower = data.follower;
                }
                if ("following" in data && data.following != undefined) {
                    this.following = data.following;
                }
                if ("kid" in data && data.kid != undefined) {
                    this.kid = data.kid;
                }
                if ("delegate" in data && data.delegate != undefined) {
                    this.delegate = data.delegate;
                }
                if ("user_kid" in data && data.user_kid != undefined) {
                    this.user_kid = data.user_kid;
                }
                if ("timestamp" in data && data.timestamp != undefined) {
                    this.timestamp = data.timestamp;
                }
            }
        }
        get follower_kid() {
            return pb_1.Message.getFieldWithDefault(this, 1, 0) as number;
        }
        set follower_kid(value: number) {
            pb_1.Message.setField(this, 1, value);
        }
        get following_kid() {
            return pb_1.Message.getFieldWithDefault(this, 2, 0) as number;
        }
        set following_kid(value: number) {
            pb_1.Message.setField(this, 2, value);
        }
        get follower() {
            return pb_1.Message.getFieldWithDefault(this, 3, "") as string;
        }
        set follower(value: string) {
            pb_1.Message.setField(this, 3, value);
        }
        get following() {
            return pb_1.Message.getFieldWithDefault(this, 4, "") as string;
        }
        set following(value: string) {
            pb_1.Message.setField(this, 4, value);
        }
        get kid() {
            return pb_1.Message.getFieldWithDefault(this, 5, 0) as number;
        }
        set kid(value: number) {
            pb_1.Message.setField(this, 5, value);
        }
        get delegate() {
            return pb_1.Message.getFieldWithDefault(this, 6, "") as string;
        }
        set delegate(value: string) {
            pb_1.Message.setField(this, 6, value);
        }
        get user_kid() {
            return pb_1.Message.getFieldWithDefault(this, 7, 0) as number;
        }
        set user_kid(value: number) {
            pb_1.Message.setField(this, 7, value);
        }
        get timestamp() {
            return pb_1.Message.getFieldWithDefault(this, 8, 0) as number;
        }
        set timestamp(value: number) {
            pb_1.Message.setField(this, 8, value);
        }
        static fromObject(data: {
            follower_kid?: number;
            following_kid?: number;
            follower?: string;
            following?: string;
            kid?: number;
            delegate?: string;
            user_kid?: number;
            timestamp?: number;
        }): AccountFollowEvent {
            const message = new AccountFollowEvent({});
            if (data.follower_kid != null) {
                message.follower_kid = data.follower_kid;
            }
            if (data.following_kid != null) {
                message.following_kid = data.following_kid;
            }
            if (data.follower != null) {
                message.follower = data.follower;
            }
            if (data.following != null) {
                message.following = data.following;
            }
            if (data.kid != null) {
                message.kid = data.kid;
            }
            if (data.delegate != null) {
                message.delegate = data.delegate;
            }
            if (data.user_kid != null) {
                message.user_kid = data.user_kid;
            }
            if (data.timestamp != null) {
                message.timestamp = data.timestamp;
            }
            return message;
        }
        toObject() {
            const data: {
                follower_kid?: number;
                following_kid?: number;
                follower?: string;
                following?: string;
                kid?: number;
                delegate?: string;
                user_kid?: number;
                timestamp?: number;
            } = {};
            if (this.follower_kid != null) {
                data.follower_kid = this.follower_kid;
            }
            if (this.following_kid != null) {
                data.following_kid = this.following_kid;
            }
            if (this.follower != null) {
                data.follower = this.follower;
            }
            if (this.following != null) {
                data.following = this.following;
            }
            if (this.kid != null) {
                data.kid = this.kid;
            }
            if (this.delegate != null) {
                data.delegate = this.delegate;
            }
            if (this.user_kid != null) {
                data.user_kid = this.user_kid;
            }
            if (this.timestamp != null) {
                data.timestamp = this.timestamp;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.follower_kid != 0)
                writer.writeInt32(1, this.follower_kid);
            if (this.following_kid != 0)
                writer.writeInt32(2, this.following_kid);
            if (this.follower.length)
                writer.writeString(3, this.follower);
            if (this.following.length)
                writer.writeString(4, this.following);
            if (this.kid != 0)
                writer.writeInt32(5, this.kid);
            if (this.delegate.length)
                writer.writeString(6, this.delegate);
            if (this.user_kid != 0)
                writer.writeInt32(7, this.user_kid);
            if (this.timestamp != 0)
                writer.writeInt64(8, this.timestamp);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): AccountFollowEvent {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new AccountFollowEvent();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.follower_kid = reader.readInt32();
                        break;
                    case 2:
                        message.following_kid = reader.readInt32();
                        break;
                    case 3:
                        message.follower = reader.readString();
                        break;
                    case 4:
                        message.following = reader.readString();
                        break;
                    case 5:
                        message.kid = reader.readInt32();
                        break;
                    case 6:
                        message.delegate = reader.readString();
                        break;
                    case 7:
                        message.user_kid = reader.readInt32();
                        break;
                    case 8:
                        message.timestamp = reader.readInt64();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): AccountFollowEvent {
            return AccountFollowEvent.deserialize(bytes);
        }
    }
    export class AccountUnfollowEvent extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            user_kid?: number;
            unfollowing_kid?: number;
            delegate?: string;
            timestamp?: number;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("user_kid" in data && data.user_kid != undefined) {
                    this.user_kid = data.user_kid;
                }
                if ("unfollowing_kid" in data && data.unfollowing_kid != undefined) {
                    this.unfollowing_kid = data.unfollowing_kid;
                }
                if ("delegate" in data && data.delegate != undefined) {
                    this.delegate = data.delegate;
                }
                if ("timestamp" in data && data.timestamp != undefined) {
                    this.timestamp = data.timestamp;
                }
            }
        }
        get user_kid() {
            return pb_1.Message.getFieldWithDefault(this, 1, 0) as number;
        }
        set user_kid(value: number) {
            pb_1.Message.setField(this, 1, value);
        }
        get unfollowing_kid() {
            return pb_1.Message.getFieldWithDefault(this, 2, 0) as number;
        }
        set unfollowing_kid(value: number) {
            pb_1.Message.setField(this, 2, value);
        }
        get delegate() {
            return pb_1.Message.getFieldWithDefault(this, 3, "") as string;
        }
        set delegate(value: string) {
            pb_1.Message.setField(this, 3, value);
        }
        get timestamp() {
            return pb_1.Message.getFieldWithDefault(this, 4, 0) as number;
        }
        set timestamp(value: number) {
            pb_1.Message.setField(this, 4, value);
        }
        static fromObject(data: {
            user_kid?: number;
            unfollowing_kid?: number;
            delegate?: string;
            timestamp?: number;
        }): AccountUnfollowEvent {
            const message = new AccountUnfollowEvent({});
            if (data.user_kid != null) {
                message.user_kid = data.user_kid;
            }
            if (data.unfollowing_kid != null) {
                message.unfollowing_kid = data.unfollowing_kid;
            }
            if (data.delegate != null) {
                message.delegate = data.delegate;
            }
            if (data.timestamp != null) {
                message.timestamp = data.timestamp;
            }
            return message;
        }
        toObject() {
            const data: {
                user_kid?: number;
                unfollowing_kid?: number;
                delegate?: string;
                timestamp?: number;
            } = {};
            if (this.user_kid != null) {
                data.user_kid = this.user_kid;
            }
            if (this.unfollowing_kid != null) {
                data.unfollowing_kid = this.unfollowing_kid;
            }
            if (this.delegate != null) {
                data.delegate = this.delegate;
            }
            if (this.timestamp != null) {
                data.timestamp = this.timestamp;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.user_kid != 0)
                writer.writeInt32(1, this.user_kid);
            if (this.unfollowing_kid != 0)
                writer.writeInt32(2, this.unfollowing_kid);
            if (this.delegate.length)
                writer.writeString(3, this.delegate);
            if (this.timestamp != 0)
                writer.writeInt64(4, this.timestamp);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): AccountUnfollowEvent {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new AccountUnfollowEvent();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.user_kid = reader.readInt32();
                        break;
                    case 2:
                        message.unfollowing_kid = reader.readInt32();
                        break;
                    case 3:
                        message.delegate = reader.readString();
                        break;
                    case 4:
                        message.timestamp = reader.readInt64();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): AccountUnfollowEvent {
            return AccountUnfollowEvent.deserialize(bytes);
        }
    }
    export class UsernameRegistrationEvent extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            username?: string;
            owner_address?: string;
            token_address?: string;
            timestamp?: number;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("username" in data && data.username != undefined) {
                    this.username = data.username;
                }
                if ("owner_address" in data && data.owner_address != undefined) {
                    this.owner_address = data.owner_address;
                }
                if ("token_address" in data && data.token_address != undefined) {
                    this.token_address = data.token_address;
                }
                if ("timestamp" in data && data.timestamp != undefined) {
                    this.timestamp = data.timestamp;
                }
            }
        }
        get username() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set username(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get owner_address() {
            return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
        }
        set owner_address(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        get token_address() {
            return pb_1.Message.getFieldWithDefault(this, 3, "") as string;
        }
        set token_address(value: string) {
            pb_1.Message.setField(this, 3, value);
        }
        get timestamp() {
            return pb_1.Message.getFieldWithDefault(this, 4, 0) as number;
        }
        set timestamp(value: number) {
            pb_1.Message.setField(this, 4, value);
        }
        static fromObject(data: {
            username?: string;
            owner_address?: string;
            token_address?: string;
            timestamp?: number;
        }): UsernameRegistrationEvent {
            const message = new UsernameRegistrationEvent({});
            if (data.username != null) {
                message.username = data.username;
            }
            if (data.owner_address != null) {
                message.owner_address = data.owner_address;
            }
            if (data.token_address != null) {
                message.token_address = data.token_address;
            }
            if (data.timestamp != null) {
                message.timestamp = data.timestamp;
            }
            return message;
        }
        toObject() {
            const data: {
                username?: string;
                owner_address?: string;
                token_address?: string;
                timestamp?: number;
            } = {};
            if (this.username != null) {
                data.username = this.username;
            }
            if (this.owner_address != null) {
                data.owner_address = this.owner_address;
            }
            if (this.token_address != null) {
                data.token_address = this.token_address;
            }
            if (this.timestamp != null) {
                data.timestamp = this.timestamp;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.username.length)
                writer.writeString(1, this.username);
            if (this.owner_address.length)
                writer.writeString(2, this.owner_address);
            if (this.token_address.length)
                writer.writeString(3, this.token_address);
            if (this.timestamp != 0)
                writer.writeInt64(4, this.timestamp);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): UsernameRegistrationEvent {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new UsernameRegistrationEvent();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.username = reader.readString();
                        break;
                    case 2:
                        message.owner_address = reader.readString();
                        break;
                    case 3:
                        message.token_address = reader.readString();
                        break;
                    case 4:
                        message.timestamp = reader.readInt64();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): UsernameRegistrationEvent {
            return UsernameRegistrationEvent.deserialize(bytes);
        }
    }
    export class ProfileUpdateEvent extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            user_kid?: number;
            delegate?: string;
            timestamp?: number;
            pfp?: string;
            bio?: string;
            display_name?: string;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("user_kid" in data && data.user_kid != undefined) {
                    this.user_kid = data.user_kid;
                }
                if ("delegate" in data && data.delegate != undefined) {
                    this.delegate = data.delegate;
                }
                if ("timestamp" in data && data.timestamp != undefined) {
                    this.timestamp = data.timestamp;
                }
                if ("pfp" in data && data.pfp != undefined) {
                    this.pfp = data.pfp;
                }
                if ("bio" in data && data.bio != undefined) {
                    this.bio = data.bio;
                }
                if ("display_name" in data && data.display_name != undefined) {
                    this.display_name = data.display_name;
                }
            }
        }
        get user_kid() {
            return pb_1.Message.getFieldWithDefault(this, 1, 0) as number;
        }
        set user_kid(value: number) {
            pb_1.Message.setField(this, 1, value);
        }
        get delegate() {
            return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
        }
        set delegate(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        get timestamp() {
            return pb_1.Message.getFieldWithDefault(this, 3, 0) as number;
        }
        set timestamp(value: number) {
            pb_1.Message.setField(this, 3, value);
        }
        get pfp() {
            return pb_1.Message.getFieldWithDefault(this, 4, "") as string;
        }
        set pfp(value: string) {
            pb_1.Message.setField(this, 4, value);
        }
        get bio() {
            return pb_1.Message.getFieldWithDefault(this, 5, "") as string;
        }
        set bio(value: string) {
            pb_1.Message.setField(this, 5, value);
        }
        get display_name() {
            return pb_1.Message.getFieldWithDefault(this, 6, "") as string;
        }
        set display_name(value: string) {
            pb_1.Message.setField(this, 6, value);
        }
        static fromObject(data: {
            user_kid?: number;
            delegate?: string;
            timestamp?: number;
            pfp?: string;
            bio?: string;
            display_name?: string;
        }): ProfileUpdateEvent {
            const message = new ProfileUpdateEvent({});
            if (data.user_kid != null) {
                message.user_kid = data.user_kid;
            }
            if (data.delegate != null) {
                message.delegate = data.delegate;
            }
            if (data.timestamp != null) {
                message.timestamp = data.timestamp;
            }
            if (data.pfp != null) {
                message.pfp = data.pfp;
            }
            if (data.bio != null) {
                message.bio = data.bio;
            }
            if (data.display_name != null) {
                message.display_name = data.display_name;
            }
            return message;
        }
        toObject() {
            const data: {
                user_kid?: number;
                delegate?: string;
                timestamp?: number;
                pfp?: string;
                bio?: string;
                display_name?: string;
            } = {};
            if (this.user_kid != null) {
                data.user_kid = this.user_kid;
            }
            if (this.delegate != null) {
                data.delegate = this.delegate;
            }
            if (this.timestamp != null) {
                data.timestamp = this.timestamp;
            }
            if (this.pfp != null) {
                data.pfp = this.pfp;
            }
            if (this.bio != null) {
                data.bio = this.bio;
            }
            if (this.display_name != null) {
                data.display_name = this.display_name;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.user_kid != 0)
                writer.writeInt32(1, this.user_kid);
            if (this.delegate.length)
                writer.writeString(2, this.delegate);
            if (this.timestamp != 0)
                writer.writeInt64(3, this.timestamp);
            if (this.pfp.length)
                writer.writeString(4, this.pfp);
            if (this.bio.length)
                writer.writeString(5, this.bio);
            if (this.display_name.length)
                writer.writeString(6, this.display_name);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ProfileUpdateEvent {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ProfileUpdateEvent();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.user_kid = reader.readInt32();
                        break;
                    case 2:
                        message.delegate = reader.readString();
                        break;
                    case 3:
                        message.timestamp = reader.readInt64();
                        break;
                    case 4:
                        message.pfp = reader.readString();
                        break;
                    case 5:
                        message.bio = reader.readString();
                        break;
                    case 6:
                        message.display_name = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): ProfileUpdateEvent {
            return ProfileUpdateEvent.deserialize(bytes);
        }
    }
    export class CommunityRegisteredEvent extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            name?: string;
            description?: string;
            image?: string;
            creator?: string;
            bid?: number;
            user_kid?: number;
            timestamp?: number;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("name" in data && data.name != undefined) {
                    this.name = data.name;
                }
                if ("description" in data && data.description != undefined) {
                    this.description = data.description;
                }
                if ("image" in data && data.image != undefined) {
                    this.image = data.image;
                }
                if ("creator" in data && data.creator != undefined) {
                    this.creator = data.creator;
                }
                if ("bid" in data && data.bid != undefined) {
                    this.bid = data.bid;
                }
                if ("user_kid" in data && data.user_kid != undefined) {
                    this.user_kid = data.user_kid;
                }
                if ("timestamp" in data && data.timestamp != undefined) {
                    this.timestamp = data.timestamp;
                }
            }
        }
        get name() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set name(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get description() {
            return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
        }
        set description(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        get image() {
            return pb_1.Message.getFieldWithDefault(this, 3, "") as string;
        }
        set image(value: string) {
            pb_1.Message.setField(this, 3, value);
        }
        get creator() {
            return pb_1.Message.getFieldWithDefault(this, 4, "") as string;
        }
        set creator(value: string) {
            pb_1.Message.setField(this, 4, value);
        }
        get bid() {
            return pb_1.Message.getFieldWithDefault(this, 5, 0) as number;
        }
        set bid(value: number) {
            pb_1.Message.setField(this, 5, value);
        }
        get user_kid() {
            return pb_1.Message.getFieldWithDefault(this, 6, 0) as number;
        }
        set user_kid(value: number) {
            pb_1.Message.setField(this, 6, value);
        }
        get timestamp() {
            return pb_1.Message.getFieldWithDefault(this, 7, 0) as number;
        }
        set timestamp(value: number) {
            pb_1.Message.setField(this, 7, value);
        }
        static fromObject(data: {
            name?: string;
            description?: string;
            image?: string;
            creator?: string;
            bid?: number;
            user_kid?: number;
            timestamp?: number;
        }): CommunityRegisteredEvent {
            const message = new CommunityRegisteredEvent({});
            if (data.name != null) {
                message.name = data.name;
            }
            if (data.description != null) {
                message.description = data.description;
            }
            if (data.image != null) {
                message.image = data.image;
            }
            if (data.creator != null) {
                message.creator = data.creator;
            }
            if (data.bid != null) {
                message.bid = data.bid;
            }
            if (data.user_kid != null) {
                message.user_kid = data.user_kid;
            }
            if (data.timestamp != null) {
                message.timestamp = data.timestamp;
            }
            return message;
        }
        toObject() {
            const data: {
                name?: string;
                description?: string;
                image?: string;
                creator?: string;
                bid?: number;
                user_kid?: number;
                timestamp?: number;
            } = {};
            if (this.name != null) {
                data.name = this.name;
            }
            if (this.description != null) {
                data.description = this.description;
            }
            if (this.image != null) {
                data.image = this.image;
            }
            if (this.creator != null) {
                data.creator = this.creator;
            }
            if (this.bid != null) {
                data.bid = this.bid;
            }
            if (this.user_kid != null) {
                data.user_kid = this.user_kid;
            }
            if (this.timestamp != null) {
                data.timestamp = this.timestamp;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.name.length)
                writer.writeString(1, this.name);
            if (this.description.length)
                writer.writeString(2, this.description);
            if (this.image.length)
                writer.writeString(3, this.image);
            if (this.creator.length)
                writer.writeString(4, this.creator);
            if (this.bid != 0)
                writer.writeInt32(5, this.bid);
            if (this.user_kid != 0)
                writer.writeInt32(6, this.user_kid);
            if (this.timestamp != 0)
                writer.writeInt64(7, this.timestamp);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): CommunityRegisteredEvent {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new CommunityRegisteredEvent();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.name = reader.readString();
                        break;
                    case 2:
                        message.description = reader.readString();
                        break;
                    case 3:
                        message.image = reader.readString();
                        break;
                    case 4:
                        message.creator = reader.readString();
                        break;
                    case 5:
                        message.bid = reader.readInt32();
                        break;
                    case 6:
                        message.user_kid = reader.readInt32();
                        break;
                    case 7:
                        message.timestamp = reader.readInt64();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): CommunityRegisteredEvent {
            return CommunityRegisteredEvent.deserialize(bytes);
        }
    }
    export class MemberJoinEvent extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            owner?: string;
            community_name?: string;
            timestamp?: number;
            bid?: number;
            type?: number;
            user_kid?: number;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("owner" in data && data.owner != undefined) {
                    this.owner = data.owner;
                }
                if ("community_name" in data && data.community_name != undefined) {
                    this.community_name = data.community_name;
                }
                if ("timestamp" in data && data.timestamp != undefined) {
                    this.timestamp = data.timestamp;
                }
                if ("bid" in data && data.bid != undefined) {
                    this.bid = data.bid;
                }
                if ("type" in data && data.type != undefined) {
                    this.type = data.type;
                }
                if ("user_kid" in data && data.user_kid != undefined) {
                    this.user_kid = data.user_kid;
                }
            }
        }
        get owner() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set owner(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get community_name() {
            return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
        }
        set community_name(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        get timestamp() {
            return pb_1.Message.getFieldWithDefault(this, 3, 0) as number;
        }
        set timestamp(value: number) {
            pb_1.Message.setField(this, 3, value);
        }
        get bid() {
            return pb_1.Message.getFieldWithDefault(this, 4, 0) as number;
        }
        set bid(value: number) {
            pb_1.Message.setField(this, 4, value);
        }
        get type() {
            return pb_1.Message.getFieldWithDefault(this, 5, 0) as number;
        }
        set type(value: number) {
            pb_1.Message.setField(this, 5, value);
        }
        get user_kid() {
            return pb_1.Message.getFieldWithDefault(this, 6, 0) as number;
        }
        set user_kid(value: number) {
            pb_1.Message.setField(this, 6, value);
        }
        static fromObject(data: {
            owner?: string;
            community_name?: string;
            timestamp?: number;
            bid?: number;
            type?: number;
            user_kid?: number;
        }): MemberJoinEvent {
            const message = new MemberJoinEvent({});
            if (data.owner != null) {
                message.owner = data.owner;
            }
            if (data.community_name != null) {
                message.community_name = data.community_name;
            }
            if (data.timestamp != null) {
                message.timestamp = data.timestamp;
            }
            if (data.bid != null) {
                message.bid = data.bid;
            }
            if (data.type != null) {
                message.type = data.type;
            }
            if (data.user_kid != null) {
                message.user_kid = data.user_kid;
            }
            return message;
        }
        toObject() {
            const data: {
                owner?: string;
                community_name?: string;
                timestamp?: number;
                bid?: number;
                type?: number;
                user_kid?: number;
            } = {};
            if (this.owner != null) {
                data.owner = this.owner;
            }
            if (this.community_name != null) {
                data.community_name = this.community_name;
            }
            if (this.timestamp != null) {
                data.timestamp = this.timestamp;
            }
            if (this.bid != null) {
                data.bid = this.bid;
            }
            if (this.type != null) {
                data.type = this.type;
            }
            if (this.user_kid != null) {
                data.user_kid = this.user_kid;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.owner.length)
                writer.writeString(1, this.owner);
            if (this.community_name.length)
                writer.writeString(2, this.community_name);
            if (this.timestamp != 0)
                writer.writeInt64(3, this.timestamp);
            if (this.bid != 0)
                writer.writeInt32(4, this.bid);
            if (this.type != 0)
                writer.writeInt32(5, this.type);
            if (this.user_kid != 0)
                writer.writeInt32(6, this.user_kid);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): MemberJoinEvent {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new MemberJoinEvent();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.owner = reader.readString();
                        break;
                    case 2:
                        message.community_name = reader.readString();
                        break;
                    case 3:
                        message.timestamp = reader.readInt64();
                        break;
                    case 4:
                        message.bid = reader.readInt32();
                        break;
                    case 5:
                        message.type = reader.readInt32();
                        break;
                    case 6:
                        message.user_kid = reader.readInt32();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): MemberJoinEvent {
            return MemberJoinEvent.deserialize(bytes);
        }
    }
    export class MembershipChangeEvent extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            type?: number;
            made_by?: string;
            membership_owner?: string;
            community_name?: string;
            community_id?: number;
            membership_id?: number;
            timestamp?: number;
            user_kid?: number;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("type" in data && data.type != undefined) {
                    this.type = data.type;
                }
                if ("made_by" in data && data.made_by != undefined) {
                    this.made_by = data.made_by;
                }
                if ("membership_owner" in data && data.membership_owner != undefined) {
                    this.membership_owner = data.membership_owner;
                }
                if ("community_name" in data && data.community_name != undefined) {
                    this.community_name = data.community_name;
                }
                if ("community_id" in data && data.community_id != undefined) {
                    this.community_id = data.community_id;
                }
                if ("membership_id" in data && data.membership_id != undefined) {
                    this.membership_id = data.membership_id;
                }
                if ("timestamp" in data && data.timestamp != undefined) {
                    this.timestamp = data.timestamp;
                }
                if ("user_kid" in data && data.user_kid != undefined) {
                    this.user_kid = data.user_kid;
                }
            }
        }
        get type() {
            return pb_1.Message.getFieldWithDefault(this, 1, 0) as number;
        }
        set type(value: number) {
            pb_1.Message.setField(this, 1, value);
        }
        get made_by() {
            return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
        }
        set made_by(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        get membership_owner() {
            return pb_1.Message.getFieldWithDefault(this, 3, "") as string;
        }
        set membership_owner(value: string) {
            pb_1.Message.setField(this, 3, value);
        }
        get community_name() {
            return pb_1.Message.getFieldWithDefault(this, 4, "") as string;
        }
        set community_name(value: string) {
            pb_1.Message.setField(this, 4, value);
        }
        get community_id() {
            return pb_1.Message.getFieldWithDefault(this, 5, 0) as number;
        }
        set community_id(value: number) {
            pb_1.Message.setField(this, 5, value);
        }
        get membership_id() {
            return pb_1.Message.getFieldWithDefault(this, 6, 0) as number;
        }
        set membership_id(value: number) {
            pb_1.Message.setField(this, 6, value);
        }
        get timestamp() {
            return pb_1.Message.getFieldWithDefault(this, 7, 0) as number;
        }
        set timestamp(value: number) {
            pb_1.Message.setField(this, 7, value);
        }
        get user_kid() {
            return pb_1.Message.getFieldWithDefault(this, 8, 0) as number;
        }
        set user_kid(value: number) {
            pb_1.Message.setField(this, 8, value);
        }
        static fromObject(data: {
            type?: number;
            made_by?: string;
            membership_owner?: string;
            community_name?: string;
            community_id?: number;
            membership_id?: number;
            timestamp?: number;
            user_kid?: number;
        }): MembershipChangeEvent {
            const message = new MembershipChangeEvent({});
            if (data.type != null) {
                message.type = data.type;
            }
            if (data.made_by != null) {
                message.made_by = data.made_by;
            }
            if (data.membership_owner != null) {
                message.membership_owner = data.membership_owner;
            }
            if (data.community_name != null) {
                message.community_name = data.community_name;
            }
            if (data.community_id != null) {
                message.community_id = data.community_id;
            }
            if (data.membership_id != null) {
                message.membership_id = data.membership_id;
            }
            if (data.timestamp != null) {
                message.timestamp = data.timestamp;
            }
            if (data.user_kid != null) {
                message.user_kid = data.user_kid;
            }
            return message;
        }
        toObject() {
            const data: {
                type?: number;
                made_by?: string;
                membership_owner?: string;
                community_name?: string;
                community_id?: number;
                membership_id?: number;
                timestamp?: number;
                user_kid?: number;
            } = {};
            if (this.type != null) {
                data.type = this.type;
            }
            if (this.made_by != null) {
                data.made_by = this.made_by;
            }
            if (this.membership_owner != null) {
                data.membership_owner = this.membership_owner;
            }
            if (this.community_name != null) {
                data.community_name = this.community_name;
            }
            if (this.community_id != null) {
                data.community_id = this.community_id;
            }
            if (this.membership_id != null) {
                data.membership_id = this.membership_id;
            }
            if (this.timestamp != null) {
                data.timestamp = this.timestamp;
            }
            if (this.user_kid != null) {
                data.user_kid = this.user_kid;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.type != 0)
                writer.writeInt32(1, this.type);
            if (this.made_by.length)
                writer.writeString(2, this.made_by);
            if (this.membership_owner.length)
                writer.writeString(3, this.membership_owner);
            if (this.community_name.length)
                writer.writeString(4, this.community_name);
            if (this.community_id != 0)
                writer.writeInt32(5, this.community_id);
            if (this.membership_id != 0)
                writer.writeInt32(6, this.membership_id);
            if (this.timestamp != 0)
                writer.writeInt64(7, this.timestamp);
            if (this.user_kid != 0)
                writer.writeInt32(8, this.user_kid);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): MembershipChangeEvent {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new MembershipChangeEvent();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.type = reader.readInt32();
                        break;
                    case 2:
                        message.made_by = reader.readString();
                        break;
                    case 3:
                        message.membership_owner = reader.readString();
                        break;
                    case 4:
                        message.community_name = reader.readString();
                        break;
                    case 5:
                        message.community_id = reader.readInt32();
                        break;
                    case 6:
                        message.membership_id = reader.readInt32();
                        break;
                    case 7:
                        message.timestamp = reader.readInt64();
                        break;
                    case 8:
                        message.user_kid = reader.readInt32();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): MembershipChangeEvent {
            return MembershipChangeEvent.deserialize(bytes);
        }
    }
    export class MembershipDeleteEvent extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            community_name?: string;
            community_id?: number;
            membership_id?: number;
            user_kid?: number;
            timestamp?: number;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("community_name" in data && data.community_name != undefined) {
                    this.community_name = data.community_name;
                }
                if ("community_id" in data && data.community_id != undefined) {
                    this.community_id = data.community_id;
                }
                if ("membership_id" in data && data.membership_id != undefined) {
                    this.membership_id = data.membership_id;
                }
                if ("user_kid" in data && data.user_kid != undefined) {
                    this.user_kid = data.user_kid;
                }
                if ("timestamp" in data && data.timestamp != undefined) {
                    this.timestamp = data.timestamp;
                }
            }
        }
        get community_name() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set community_name(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get community_id() {
            return pb_1.Message.getFieldWithDefault(this, 2, 0) as number;
        }
        set community_id(value: number) {
            pb_1.Message.setField(this, 2, value);
        }
        get membership_id() {
            return pb_1.Message.getFieldWithDefault(this, 3, 0) as number;
        }
        set membership_id(value: number) {
            pb_1.Message.setField(this, 3, value);
        }
        get user_kid() {
            return pb_1.Message.getFieldWithDefault(this, 4, 0) as number;
        }
        set user_kid(value: number) {
            pb_1.Message.setField(this, 4, value);
        }
        get timestamp() {
            return pb_1.Message.getFieldWithDefault(this, 5, 0) as number;
        }
        set timestamp(value: number) {
            pb_1.Message.setField(this, 5, value);
        }
        static fromObject(data: {
            community_name?: string;
            community_id?: number;
            membership_id?: number;
            user_kid?: number;
            timestamp?: number;
        }): MembershipDeleteEvent {
            const message = new MembershipDeleteEvent({});
            if (data.community_name != null) {
                message.community_name = data.community_name;
            }
            if (data.community_id != null) {
                message.community_id = data.community_id;
            }
            if (data.membership_id != null) {
                message.membership_id = data.membership_id;
            }
            if (data.user_kid != null) {
                message.user_kid = data.user_kid;
            }
            if (data.timestamp != null) {
                message.timestamp = data.timestamp;
            }
            return message;
        }
        toObject() {
            const data: {
                community_name?: string;
                community_id?: number;
                membership_id?: number;
                user_kid?: number;
                timestamp?: number;
            } = {};
            if (this.community_name != null) {
                data.community_name = this.community_name;
            }
            if (this.community_id != null) {
                data.community_id = this.community_id;
            }
            if (this.membership_id != null) {
                data.membership_id = this.membership_id;
            }
            if (this.user_kid != null) {
                data.user_kid = this.user_kid;
            }
            if (this.timestamp != null) {
                data.timestamp = this.timestamp;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.community_name.length)
                writer.writeString(1, this.community_name);
            if (this.community_id != 0)
                writer.writeInt32(2, this.community_id);
            if (this.membership_id != 0)
                writer.writeInt32(3, this.membership_id);
            if (this.user_kid != 0)
                writer.writeInt32(4, this.user_kid);
            if (this.timestamp != 0)
                writer.writeInt64(5, this.timestamp);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): MembershipDeleteEvent {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new MembershipDeleteEvent();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.community_name = reader.readString();
                        break;
                    case 2:
                        message.community_id = reader.readInt32();
                        break;
                    case 3:
                        message.membership_id = reader.readInt32();
                        break;
                    case 4:
                        message.user_kid = reader.readInt32();
                        break;
                    case 5:
                        message.timestamp = reader.readInt64();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): MembershipDeleteEvent {
            return MembershipDeleteEvent.deserialize(bytes);
        }
    }
    export class MembershipReclaimEvent extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            community_id?: number;
            membership_id?: number;
            user_kid?: number;
            timestamp?: number;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("community_id" in data && data.community_id != undefined) {
                    this.community_id = data.community_id;
                }
                if ("membership_id" in data && data.membership_id != undefined) {
                    this.membership_id = data.membership_id;
                }
                if ("user_kid" in data && data.user_kid != undefined) {
                    this.user_kid = data.user_kid;
                }
                if ("timestamp" in data && data.timestamp != undefined) {
                    this.timestamp = data.timestamp;
                }
            }
        }
        get community_id() {
            return pb_1.Message.getFieldWithDefault(this, 1, 0) as number;
        }
        set community_id(value: number) {
            pb_1.Message.setField(this, 1, value);
        }
        get membership_id() {
            return pb_1.Message.getFieldWithDefault(this, 2, 0) as number;
        }
        set membership_id(value: number) {
            pb_1.Message.setField(this, 2, value);
        }
        get user_kid() {
            return pb_1.Message.getFieldWithDefault(this, 3, 0) as number;
        }
        set user_kid(value: number) {
            pb_1.Message.setField(this, 3, value);
        }
        get timestamp() {
            return pb_1.Message.getFieldWithDefault(this, 4, 0) as number;
        }
        set timestamp(value: number) {
            pb_1.Message.setField(this, 4, value);
        }
        static fromObject(data: {
            community_id?: number;
            membership_id?: number;
            user_kid?: number;
            timestamp?: number;
        }): MembershipReclaimEvent {
            const message = new MembershipReclaimEvent({});
            if (data.community_id != null) {
                message.community_id = data.community_id;
            }
            if (data.membership_id != null) {
                message.membership_id = data.membership_id;
            }
            if (data.user_kid != null) {
                message.user_kid = data.user_kid;
            }
            if (data.timestamp != null) {
                message.timestamp = data.timestamp;
            }
            return message;
        }
        toObject() {
            const data: {
                community_id?: number;
                membership_id?: number;
                user_kid?: number;
                timestamp?: number;
            } = {};
            if (this.community_id != null) {
                data.community_id = this.community_id;
            }
            if (this.membership_id != null) {
                data.membership_id = this.membership_id;
            }
            if (this.user_kid != null) {
                data.user_kid = this.user_kid;
            }
            if (this.timestamp != null) {
                data.timestamp = this.timestamp;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.community_id != 0)
                writer.writeInt32(1, this.community_id);
            if (this.membership_id != 0)
                writer.writeInt32(2, this.membership_id);
            if (this.user_kid != 0)
                writer.writeInt32(3, this.user_kid);
            if (this.timestamp != 0)
                writer.writeInt64(4, this.timestamp);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): MembershipReclaimEvent {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new MembershipReclaimEvent();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.community_id = reader.readInt32();
                        break;
                    case 2:
                        message.membership_id = reader.readInt32();
                        break;
                    case 3:
                        message.user_kid = reader.readInt32();
                        break;
                    case 4:
                        message.timestamp = reader.readInt64();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): MembershipReclaimEvent {
            return MembershipReclaimEvent.deserialize(bytes);
        }
    }
    export class CommunityUpdateEvent extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            name?: string;
            description?: string;
            image?: string;
            display_name?: string;
            bid?: number;
            user_kid?: number;
            timestamp?: number;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("name" in data && data.name != undefined) {
                    this.name = data.name;
                }
                if ("description" in data && data.description != undefined) {
                    this.description = data.description;
                }
                if ("image" in data && data.image != undefined) {
                    this.image = data.image;
                }
                if ("display_name" in data && data.display_name != undefined) {
                    this.display_name = data.display_name;
                }
                if ("bid" in data && data.bid != undefined) {
                    this.bid = data.bid;
                }
                if ("user_kid" in data && data.user_kid != undefined) {
                    this.user_kid = data.user_kid;
                }
                if ("timestamp" in data && data.timestamp != undefined) {
                    this.timestamp = data.timestamp;
                }
            }
        }
        get name() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set name(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get description() {
            return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
        }
        set description(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        get image() {
            return pb_1.Message.getFieldWithDefault(this, 3, "") as string;
        }
        set image(value: string) {
            pb_1.Message.setField(this, 3, value);
        }
        get display_name() {
            return pb_1.Message.getFieldWithDefault(this, 4, "") as string;
        }
        set display_name(value: string) {
            pb_1.Message.setField(this, 4, value);
        }
        get bid() {
            return pb_1.Message.getFieldWithDefault(this, 5, 0) as number;
        }
        set bid(value: number) {
            pb_1.Message.setField(this, 5, value);
        }
        get user_kid() {
            return pb_1.Message.getFieldWithDefault(this, 6, 0) as number;
        }
        set user_kid(value: number) {
            pb_1.Message.setField(this, 6, value);
        }
        get timestamp() {
            return pb_1.Message.getFieldWithDefault(this, 7, 0) as number;
        }
        set timestamp(value: number) {
            pb_1.Message.setField(this, 7, value);
        }
        static fromObject(data: {
            name?: string;
            description?: string;
            image?: string;
            display_name?: string;
            bid?: number;
            user_kid?: number;
            timestamp?: number;
        }): CommunityUpdateEvent {
            const message = new CommunityUpdateEvent({});
            if (data.name != null) {
                message.name = data.name;
            }
            if (data.description != null) {
                message.description = data.description;
            }
            if (data.image != null) {
                message.image = data.image;
            }
            if (data.display_name != null) {
                message.display_name = data.display_name;
            }
            if (data.bid != null) {
                message.bid = data.bid;
            }
            if (data.user_kid != null) {
                message.user_kid = data.user_kid;
            }
            if (data.timestamp != null) {
                message.timestamp = data.timestamp;
            }
            return message;
        }
        toObject() {
            const data: {
                name?: string;
                description?: string;
                image?: string;
                display_name?: string;
                bid?: number;
                user_kid?: number;
                timestamp?: number;
            } = {};
            if (this.name != null) {
                data.name = this.name;
            }
            if (this.description != null) {
                data.description = this.description;
            }
            if (this.image != null) {
                data.image = this.image;
            }
            if (this.display_name != null) {
                data.display_name = this.display_name;
            }
            if (this.bid != null) {
                data.bid = this.bid;
            }
            if (this.user_kid != null) {
                data.user_kid = this.user_kid;
            }
            if (this.timestamp != null) {
                data.timestamp = this.timestamp;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.name.length)
                writer.writeString(1, this.name);
            if (this.description.length)
                writer.writeString(2, this.description);
            if (this.image.length)
                writer.writeString(3, this.image);
            if (this.display_name.length)
                writer.writeString(4, this.display_name);
            if (this.bid != 0)
                writer.writeInt32(5, this.bid);
            if (this.user_kid != 0)
                writer.writeInt32(6, this.user_kid);
            if (this.timestamp != 0)
                writer.writeInt64(7, this.timestamp);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): CommunityUpdateEvent {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new CommunityUpdateEvent();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.name = reader.readString();
                        break;
                    case 2:
                        message.description = reader.readString();
                        break;
                    case 3:
                        message.image = reader.readString();
                        break;
                    case 4:
                        message.display_name = reader.readString();
                        break;
                    case 5:
                        message.bid = reader.readInt32();
                        break;
                    case 6:
                        message.user_kid = reader.readInt32();
                        break;
                    case 7:
                        message.timestamp = reader.readInt64();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): CommunityUpdateEvent {
            return CommunityUpdateEvent.deserialize(bytes);
        }
    }
    export class EventsRequest extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            sequence_number?: number;
            event_type?: string;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("sequence_number" in data && data.sequence_number != undefined) {
                    this.sequence_number = data.sequence_number;
                }
                if ("event_type" in data && data.event_type != undefined) {
                    this.event_type = data.event_type;
                }
            }
        }
        get sequence_number() {
            return pb_1.Message.getFieldWithDefault(this, 1, 0) as number;
        }
        set sequence_number(value: number) {
            pb_1.Message.setField(this, 1, value);
        }
        get event_type() {
            return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
        }
        set event_type(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        static fromObject(data: {
            sequence_number?: number;
            event_type?: string;
        }): EventsRequest {
            const message = new EventsRequest({});
            if (data.sequence_number != null) {
                message.sequence_number = data.sequence_number;
            }
            if (data.event_type != null) {
                message.event_type = data.event_type;
            }
            return message;
        }
        toObject() {
            const data: {
                sequence_number?: number;
                event_type?: string;
            } = {};
            if (this.sequence_number != null) {
                data.sequence_number = this.sequence_number;
            }
            if (this.event_type != null) {
                data.event_type = this.event_type;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.sequence_number != 0)
                writer.writeInt64(1, this.sequence_number);
            if (this.event_type.length)
                writer.writeString(2, this.event_type);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): EventsRequest {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new EventsRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.sequence_number = reader.readInt64();
                        break;
                    case 2:
                        message.event_type = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): EventsRequest {
            return EventsRequest.deserialize(bytes);
        }
    }
    export class Event extends pb_1.Message {
        #one_of_decls: number[][] = [[3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23]];
        constructor(data?: any[] | ({
            event_type?: string;
            sequence_number?: number;
        } & (({
            account_create_event?: AccountCreateEvent;
            delegate_create_event?: never;
            delegate_remove_event?: never;
            reaction_create_event?: never;
            reaction_remove_event?: never;
            reaction_create_event_with_ref?: never;
            reaction_remove_event_with_ref?: never;
            publication_create_event?: never;
            publication_remove_event?: never;
            publication_create_with_ref_event?: never;
            publication_remove_with_ref_event?: never;
            account_follow_event?: never;
            account_unfollow_event?: never;
            username_registration_event?: never;
            profile_update_event?: never;
            community_registered_event?: never;
            member_join_event?: never;
            membership_change_event?: never;
            membership_delete_event?: never;
            membership_reclaim_event?: never;
            community_update_event?: never;
        } | {
            account_create_event?: never;
            delegate_create_event?: DelegateCreateEvent;
            delegate_remove_event?: never;
            reaction_create_event?: never;
            reaction_remove_event?: never;
            reaction_create_event_with_ref?: never;
            reaction_remove_event_with_ref?: never;
            publication_create_event?: never;
            publication_remove_event?: never;
            publication_create_with_ref_event?: never;
            publication_remove_with_ref_event?: never;
            account_follow_event?: never;
            account_unfollow_event?: never;
            username_registration_event?: never;
            profile_update_event?: never;
            community_registered_event?: never;
            member_join_event?: never;
            membership_change_event?: never;
            membership_delete_event?: never;
            membership_reclaim_event?: never;
            community_update_event?: never;
        } | {
            account_create_event?: never;
            delegate_create_event?: never;
            delegate_remove_event?: DelegateRemoveEvent;
            reaction_create_event?: never;
            reaction_remove_event?: never;
            reaction_create_event_with_ref?: never;
            reaction_remove_event_with_ref?: never;
            publication_create_event?: never;
            publication_remove_event?: never;
            publication_create_with_ref_event?: never;
            publication_remove_with_ref_event?: never;
            account_follow_event?: never;
            account_unfollow_event?: never;
            username_registration_event?: never;
            profile_update_event?: never;
            community_registered_event?: never;
            member_join_event?: never;
            membership_change_event?: never;
            membership_delete_event?: never;
            membership_reclaim_event?: never;
            community_update_event?: never;
        } | {
            account_create_event?: never;
            delegate_create_event?: never;
            delegate_remove_event?: never;
            reaction_create_event?: ReactionCreateEvent;
            reaction_remove_event?: never;
            reaction_create_event_with_ref?: never;
            reaction_remove_event_with_ref?: never;
            publication_create_event?: never;
            publication_remove_event?: never;
            publication_create_with_ref_event?: never;
            publication_remove_with_ref_event?: never;
            account_follow_event?: never;
            account_unfollow_event?: never;
            username_registration_event?: never;
            profile_update_event?: never;
            community_registered_event?: never;
            member_join_event?: never;
            membership_change_event?: never;
            membership_delete_event?: never;
            membership_reclaim_event?: never;
            community_update_event?: never;
        } | {
            account_create_event?: never;
            delegate_create_event?: never;
            delegate_remove_event?: never;
            reaction_create_event?: never;
            reaction_remove_event?: ReactionRemoveEvent;
            reaction_create_event_with_ref?: never;
            reaction_remove_event_with_ref?: never;
            publication_create_event?: never;
            publication_remove_event?: never;
            publication_create_with_ref_event?: never;
            publication_remove_with_ref_event?: never;
            account_follow_event?: never;
            account_unfollow_event?: never;
            username_registration_event?: never;
            profile_update_event?: never;
            community_registered_event?: never;
            member_join_event?: never;
            membership_change_event?: never;
            membership_delete_event?: never;
            membership_reclaim_event?: never;
            community_update_event?: never;
        } | {
            account_create_event?: never;
            delegate_create_event?: never;
            delegate_remove_event?: never;
            reaction_create_event?: never;
            reaction_remove_event?: never;
            reaction_create_event_with_ref?: ReactionCreateEventWithRef;
            reaction_remove_event_with_ref?: never;
            publication_create_event?: never;
            publication_remove_event?: never;
            publication_create_with_ref_event?: never;
            publication_remove_with_ref_event?: never;
            account_follow_event?: never;
            account_unfollow_event?: never;
            username_registration_event?: never;
            profile_update_event?: never;
            community_registered_event?: never;
            member_join_event?: never;
            membership_change_event?: never;
            membership_delete_event?: never;
            membership_reclaim_event?: never;
            community_update_event?: never;
        } | {
            account_create_event?: never;
            delegate_create_event?: never;
            delegate_remove_event?: never;
            reaction_create_event?: never;
            reaction_remove_event?: never;
            reaction_create_event_with_ref?: never;
            reaction_remove_event_with_ref?: ReactionRemoveEventWithRef;
            publication_create_event?: never;
            publication_remove_event?: never;
            publication_create_with_ref_event?: never;
            publication_remove_with_ref_event?: never;
            account_follow_event?: never;
            account_unfollow_event?: never;
            username_registration_event?: never;
            profile_update_event?: never;
            community_registered_event?: never;
            member_join_event?: never;
            membership_change_event?: never;
            membership_delete_event?: never;
            membership_reclaim_event?: never;
            community_update_event?: never;
        } | {
            account_create_event?: never;
            delegate_create_event?: never;
            delegate_remove_event?: never;
            reaction_create_event?: never;
            reaction_remove_event?: never;
            reaction_create_event_with_ref?: never;
            reaction_remove_event_with_ref?: never;
            publication_create_event?: PublicationCreateEvent;
            publication_remove_event?: never;
            publication_create_with_ref_event?: never;
            publication_remove_with_ref_event?: never;
            account_follow_event?: never;
            account_unfollow_event?: never;
            username_registration_event?: never;
            profile_update_event?: never;
            community_registered_event?: never;
            member_join_event?: never;
            membership_change_event?: never;
            membership_delete_event?: never;
            membership_reclaim_event?: never;
            community_update_event?: never;
        } | {
            account_create_event?: never;
            delegate_create_event?: never;
            delegate_remove_event?: never;
            reaction_create_event?: never;
            reaction_remove_event?: never;
            reaction_create_event_with_ref?: never;
            reaction_remove_event_with_ref?: never;
            publication_create_event?: never;
            publication_remove_event?: PublicationRemoveEvent;
            publication_create_with_ref_event?: never;
            publication_remove_with_ref_event?: never;
            account_follow_event?: never;
            account_unfollow_event?: never;
            username_registration_event?: never;
            profile_update_event?: never;
            community_registered_event?: never;
            member_join_event?: never;
            membership_change_event?: never;
            membership_delete_event?: never;
            membership_reclaim_event?: never;
            community_update_event?: never;
        } | {
            account_create_event?: never;
            delegate_create_event?: never;
            delegate_remove_event?: never;
            reaction_create_event?: never;
            reaction_remove_event?: never;
            reaction_create_event_with_ref?: never;
            reaction_remove_event_with_ref?: never;
            publication_create_event?: never;
            publication_remove_event?: never;
            publication_create_with_ref_event?: PublicationCreateWithRefEvent;
            publication_remove_with_ref_event?: never;
            account_follow_event?: never;
            account_unfollow_event?: never;
            username_registration_event?: never;
            profile_update_event?: never;
            community_registered_event?: never;
            member_join_event?: never;
            membership_change_event?: never;
            membership_delete_event?: never;
            membership_reclaim_event?: never;
            community_update_event?: never;
        } | {
            account_create_event?: never;
            delegate_create_event?: never;
            delegate_remove_event?: never;
            reaction_create_event?: never;
            reaction_remove_event?: never;
            reaction_create_event_with_ref?: never;
            reaction_remove_event_with_ref?: never;
            publication_create_event?: never;
            publication_remove_event?: never;
            publication_create_with_ref_event?: never;
            publication_remove_with_ref_event?: PublicationRemoveWithRefEvent;
            account_follow_event?: never;
            account_unfollow_event?: never;
            username_registration_event?: never;
            profile_update_event?: never;
            community_registered_event?: never;
            member_join_event?: never;
            membership_change_event?: never;
            membership_delete_event?: never;
            membership_reclaim_event?: never;
            community_update_event?: never;
        } | {
            account_create_event?: never;
            delegate_create_event?: never;
            delegate_remove_event?: never;
            reaction_create_event?: never;
            reaction_remove_event?: never;
            reaction_create_event_with_ref?: never;
            reaction_remove_event_with_ref?: never;
            publication_create_event?: never;
            publication_remove_event?: never;
            publication_create_with_ref_event?: never;
            publication_remove_with_ref_event?: never;
            account_follow_event?: AccountFollowEvent;
            account_unfollow_event?: never;
            username_registration_event?: never;
            profile_update_event?: never;
            community_registered_event?: never;
            member_join_event?: never;
            membership_change_event?: never;
            membership_delete_event?: never;
            membership_reclaim_event?: never;
            community_update_event?: never;
        } | {
            account_create_event?: never;
            delegate_create_event?: never;
            delegate_remove_event?: never;
            reaction_create_event?: never;
            reaction_remove_event?: never;
            reaction_create_event_with_ref?: never;
            reaction_remove_event_with_ref?: never;
            publication_create_event?: never;
            publication_remove_event?: never;
            publication_create_with_ref_event?: never;
            publication_remove_with_ref_event?: never;
            account_follow_event?: never;
            account_unfollow_event?: AccountUnfollowEvent;
            username_registration_event?: never;
            profile_update_event?: never;
            community_registered_event?: never;
            member_join_event?: never;
            membership_change_event?: never;
            membership_delete_event?: never;
            membership_reclaim_event?: never;
            community_update_event?: never;
        } | {
            account_create_event?: never;
            delegate_create_event?: never;
            delegate_remove_event?: never;
            reaction_create_event?: never;
            reaction_remove_event?: never;
            reaction_create_event_with_ref?: never;
            reaction_remove_event_with_ref?: never;
            publication_create_event?: never;
            publication_remove_event?: never;
            publication_create_with_ref_event?: never;
            publication_remove_with_ref_event?: never;
            account_follow_event?: never;
            account_unfollow_event?: never;
            username_registration_event?: UsernameRegistrationEvent;
            profile_update_event?: never;
            community_registered_event?: never;
            member_join_event?: never;
            membership_change_event?: never;
            membership_delete_event?: never;
            membership_reclaim_event?: never;
            community_update_event?: never;
        } | {
            account_create_event?: never;
            delegate_create_event?: never;
            delegate_remove_event?: never;
            reaction_create_event?: never;
            reaction_remove_event?: never;
            reaction_create_event_with_ref?: never;
            reaction_remove_event_with_ref?: never;
            publication_create_event?: never;
            publication_remove_event?: never;
            publication_create_with_ref_event?: never;
            publication_remove_with_ref_event?: never;
            account_follow_event?: never;
            account_unfollow_event?: never;
            username_registration_event?: never;
            profile_update_event?: ProfileUpdateEvent;
            community_registered_event?: never;
            member_join_event?: never;
            membership_change_event?: never;
            membership_delete_event?: never;
            membership_reclaim_event?: never;
            community_update_event?: never;
        } | {
            account_create_event?: never;
            delegate_create_event?: never;
            delegate_remove_event?: never;
            reaction_create_event?: never;
            reaction_remove_event?: never;
            reaction_create_event_with_ref?: never;
            reaction_remove_event_with_ref?: never;
            publication_create_event?: never;
            publication_remove_event?: never;
            publication_create_with_ref_event?: never;
            publication_remove_with_ref_event?: never;
            account_follow_event?: never;
            account_unfollow_event?: never;
            username_registration_event?: never;
            profile_update_event?: never;
            community_registered_event?: CommunityRegisteredEvent;
            member_join_event?: never;
            membership_change_event?: never;
            membership_delete_event?: never;
            membership_reclaim_event?: never;
            community_update_event?: never;
        } | {
            account_create_event?: never;
            delegate_create_event?: never;
            delegate_remove_event?: never;
            reaction_create_event?: never;
            reaction_remove_event?: never;
            reaction_create_event_with_ref?: never;
            reaction_remove_event_with_ref?: never;
            publication_create_event?: never;
            publication_remove_event?: never;
            publication_create_with_ref_event?: never;
            publication_remove_with_ref_event?: never;
            account_follow_event?: never;
            account_unfollow_event?: never;
            username_registration_event?: never;
            profile_update_event?: never;
            community_registered_event?: never;
            member_join_event?: MemberJoinEvent;
            membership_change_event?: never;
            membership_delete_event?: never;
            membership_reclaim_event?: never;
            community_update_event?: never;
        } | {
            account_create_event?: never;
            delegate_create_event?: never;
            delegate_remove_event?: never;
            reaction_create_event?: never;
            reaction_remove_event?: never;
            reaction_create_event_with_ref?: never;
            reaction_remove_event_with_ref?: never;
            publication_create_event?: never;
            publication_remove_event?: never;
            publication_create_with_ref_event?: never;
            publication_remove_with_ref_event?: never;
            account_follow_event?: never;
            account_unfollow_event?: never;
            username_registration_event?: never;
            profile_update_event?: never;
            community_registered_event?: never;
            member_join_event?: never;
            membership_change_event?: MembershipChangeEvent;
            membership_delete_event?: never;
            membership_reclaim_event?: never;
            community_update_event?: never;
        } | {
            account_create_event?: never;
            delegate_create_event?: never;
            delegate_remove_event?: never;
            reaction_create_event?: never;
            reaction_remove_event?: never;
            reaction_create_event_with_ref?: never;
            reaction_remove_event_with_ref?: never;
            publication_create_event?: never;
            publication_remove_event?: never;
            publication_create_with_ref_event?: never;
            publication_remove_with_ref_event?: never;
            account_follow_event?: never;
            account_unfollow_event?: never;
            username_registration_event?: never;
            profile_update_event?: never;
            community_registered_event?: never;
            member_join_event?: never;
            membership_change_event?: never;
            membership_delete_event?: MembershipDeleteEvent;
            membership_reclaim_event?: never;
            community_update_event?: never;
        } | {
            account_create_event?: never;
            delegate_create_event?: never;
            delegate_remove_event?: never;
            reaction_create_event?: never;
            reaction_remove_event?: never;
            reaction_create_event_with_ref?: never;
            reaction_remove_event_with_ref?: never;
            publication_create_event?: never;
            publication_remove_event?: never;
            publication_create_with_ref_event?: never;
            publication_remove_with_ref_event?: never;
            account_follow_event?: never;
            account_unfollow_event?: never;
            username_registration_event?: never;
            profile_update_event?: never;
            community_registered_event?: never;
            member_join_event?: never;
            membership_change_event?: never;
            membership_delete_event?: never;
            membership_reclaim_event?: MembershipReclaimEvent;
            community_update_event?: never;
        } | {
            account_create_event?: never;
            delegate_create_event?: never;
            delegate_remove_event?: never;
            reaction_create_event?: never;
            reaction_remove_event?: never;
            reaction_create_event_with_ref?: never;
            reaction_remove_event_with_ref?: never;
            publication_create_event?: never;
            publication_remove_event?: never;
            publication_create_with_ref_event?: never;
            publication_remove_with_ref_event?: never;
            account_follow_event?: never;
            account_unfollow_event?: never;
            username_registration_event?: never;
            profile_update_event?: never;
            community_registered_event?: never;
            member_join_event?: never;
            membership_change_event?: never;
            membership_delete_event?: never;
            membership_reclaim_event?: never;
            community_update_event?: CommunityUpdateEvent;
        })))) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("event_type" in data && data.event_type != undefined) {
                    this.event_type = data.event_type;
                }
                if ("sequence_number" in data && data.sequence_number != undefined) {
                    this.sequence_number = data.sequence_number;
                }
                if ("account_create_event" in data && data.account_create_event != undefined) {
                    this.account_create_event = data.account_create_event;
                }
                if ("delegate_create_event" in data && data.delegate_create_event != undefined) {
                    this.delegate_create_event = data.delegate_create_event;
                }
                if ("delegate_remove_event" in data && data.delegate_remove_event != undefined) {
                    this.delegate_remove_event = data.delegate_remove_event;
                }
                if ("reaction_create_event" in data && data.reaction_create_event != undefined) {
                    this.reaction_create_event = data.reaction_create_event;
                }
                if ("reaction_remove_event" in data && data.reaction_remove_event != undefined) {
                    this.reaction_remove_event = data.reaction_remove_event;
                }
                if ("reaction_create_event_with_ref" in data && data.reaction_create_event_with_ref != undefined) {
                    this.reaction_create_event_with_ref = data.reaction_create_event_with_ref;
                }
                if ("reaction_remove_event_with_ref" in data && data.reaction_remove_event_with_ref != undefined) {
                    this.reaction_remove_event_with_ref = data.reaction_remove_event_with_ref;
                }
                if ("publication_create_event" in data && data.publication_create_event != undefined) {
                    this.publication_create_event = data.publication_create_event;
                }
                if ("publication_remove_event" in data && data.publication_remove_event != undefined) {
                    this.publication_remove_event = data.publication_remove_event;
                }
                if ("publication_create_with_ref_event" in data && data.publication_create_with_ref_event != undefined) {
                    this.publication_create_with_ref_event = data.publication_create_with_ref_event;
                }
                if ("publication_remove_with_ref_event" in data && data.publication_remove_with_ref_event != undefined) {
                    this.publication_remove_with_ref_event = data.publication_remove_with_ref_event;
                }
                if ("account_follow_event" in data && data.account_follow_event != undefined) {
                    this.account_follow_event = data.account_follow_event;
                }
                if ("account_unfollow_event" in data && data.account_unfollow_event != undefined) {
                    this.account_unfollow_event = data.account_unfollow_event;
                }
                if ("username_registration_event" in data && data.username_registration_event != undefined) {
                    this.username_registration_event = data.username_registration_event;
                }
                if ("profile_update_event" in data && data.profile_update_event != undefined) {
                    this.profile_update_event = data.profile_update_event;
                }
                if ("community_registered_event" in data && data.community_registered_event != undefined) {
                    this.community_registered_event = data.community_registered_event;
                }
                if ("member_join_event" in data && data.member_join_event != undefined) {
                    this.member_join_event = data.member_join_event;
                }
                if ("membership_change_event" in data && data.membership_change_event != undefined) {
                    this.membership_change_event = data.membership_change_event;
                }
                if ("membership_delete_event" in data && data.membership_delete_event != undefined) {
                    this.membership_delete_event = data.membership_delete_event;
                }
                if ("membership_reclaim_event" in data && data.membership_reclaim_event != undefined) {
                    this.membership_reclaim_event = data.membership_reclaim_event;
                }
                if ("community_update_event" in data && data.community_update_event != undefined) {
                    this.community_update_event = data.community_update_event;
                }
            }
        }
        get event_type() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set event_type(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get sequence_number() {
            return pb_1.Message.getFieldWithDefault(this, 2, 0) as number;
        }
        set sequence_number(value: number) {
            pb_1.Message.setField(this, 2, value);
        }
        get account_create_event() {
            return pb_1.Message.getWrapperField(this, AccountCreateEvent, 3) as AccountCreateEvent;
        }
        set account_create_event(value: AccountCreateEvent) {
            pb_1.Message.setOneofWrapperField(this, 3, this.#one_of_decls[0], value);
        }
        get has_account_create_event() {
            return pb_1.Message.getField(this, 3) != null;
        }
        get delegate_create_event() {
            return pb_1.Message.getWrapperField(this, DelegateCreateEvent, 4) as DelegateCreateEvent;
        }
        set delegate_create_event(value: DelegateCreateEvent) {
            pb_1.Message.setOneofWrapperField(this, 4, this.#one_of_decls[0], value);
        }
        get has_delegate_create_event() {
            return pb_1.Message.getField(this, 4) != null;
        }
        get delegate_remove_event() {
            return pb_1.Message.getWrapperField(this, DelegateRemoveEvent, 5) as DelegateRemoveEvent;
        }
        set delegate_remove_event(value: DelegateRemoveEvent) {
            pb_1.Message.setOneofWrapperField(this, 5, this.#one_of_decls[0], value);
        }
        get has_delegate_remove_event() {
            return pb_1.Message.getField(this, 5) != null;
        }
        get reaction_create_event() {
            return pb_1.Message.getWrapperField(this, ReactionCreateEvent, 6) as ReactionCreateEvent;
        }
        set reaction_create_event(value: ReactionCreateEvent) {
            pb_1.Message.setOneofWrapperField(this, 6, this.#one_of_decls[0], value);
        }
        get has_reaction_create_event() {
            return pb_1.Message.getField(this, 6) != null;
        }
        get reaction_remove_event() {
            return pb_1.Message.getWrapperField(this, ReactionRemoveEvent, 7) as ReactionRemoveEvent;
        }
        set reaction_remove_event(value: ReactionRemoveEvent) {
            pb_1.Message.setOneofWrapperField(this, 7, this.#one_of_decls[0], value);
        }
        get has_reaction_remove_event() {
            return pb_1.Message.getField(this, 7) != null;
        }
        get reaction_create_event_with_ref() {
            return pb_1.Message.getWrapperField(this, ReactionCreateEventWithRef, 8) as ReactionCreateEventWithRef;
        }
        set reaction_create_event_with_ref(value: ReactionCreateEventWithRef) {
            pb_1.Message.setOneofWrapperField(this, 8, this.#one_of_decls[0], value);
        }
        get has_reaction_create_event_with_ref() {
            return pb_1.Message.getField(this, 8) != null;
        }
        get reaction_remove_event_with_ref() {
            return pb_1.Message.getWrapperField(this, ReactionRemoveEventWithRef, 9) as ReactionRemoveEventWithRef;
        }
        set reaction_remove_event_with_ref(value: ReactionRemoveEventWithRef) {
            pb_1.Message.setOneofWrapperField(this, 9, this.#one_of_decls[0], value);
        }
        get has_reaction_remove_event_with_ref() {
            return pb_1.Message.getField(this, 9) != null;
        }
        get publication_create_event() {
            return pb_1.Message.getWrapperField(this, PublicationCreateEvent, 10) as PublicationCreateEvent;
        }
        set publication_create_event(value: PublicationCreateEvent) {
            pb_1.Message.setOneofWrapperField(this, 10, this.#one_of_decls[0], value);
        }
        get has_publication_create_event() {
            return pb_1.Message.getField(this, 10) != null;
        }
        get publication_remove_event() {
            return pb_1.Message.getWrapperField(this, PublicationRemoveEvent, 11) as PublicationRemoveEvent;
        }
        set publication_remove_event(value: PublicationRemoveEvent) {
            pb_1.Message.setOneofWrapperField(this, 11, this.#one_of_decls[0], value);
        }
        get has_publication_remove_event() {
            return pb_1.Message.getField(this, 11) != null;
        }
        get publication_create_with_ref_event() {
            return pb_1.Message.getWrapperField(this, PublicationCreateWithRefEvent, 12) as PublicationCreateWithRefEvent;
        }
        set publication_create_with_ref_event(value: PublicationCreateWithRefEvent) {
            pb_1.Message.setOneofWrapperField(this, 12, this.#one_of_decls[0], value);
        }
        get has_publication_create_with_ref_event() {
            return pb_1.Message.getField(this, 12) != null;
        }
        get publication_remove_with_ref_event() {
            return pb_1.Message.getWrapperField(this, PublicationRemoveWithRefEvent, 13) as PublicationRemoveWithRefEvent;
        }
        set publication_remove_with_ref_event(value: PublicationRemoveWithRefEvent) {
            pb_1.Message.setOneofWrapperField(this, 13, this.#one_of_decls[0], value);
        }
        get has_publication_remove_with_ref_event() {
            return pb_1.Message.getField(this, 13) != null;
        }
        get account_follow_event() {
            return pb_1.Message.getWrapperField(this, AccountFollowEvent, 14) as AccountFollowEvent;
        }
        set account_follow_event(value: AccountFollowEvent) {
            pb_1.Message.setOneofWrapperField(this, 14, this.#one_of_decls[0], value);
        }
        get has_account_follow_event() {
            return pb_1.Message.getField(this, 14) != null;
        }
        get account_unfollow_event() {
            return pb_1.Message.getWrapperField(this, AccountUnfollowEvent, 15) as AccountUnfollowEvent;
        }
        set account_unfollow_event(value: AccountUnfollowEvent) {
            pb_1.Message.setOneofWrapperField(this, 15, this.#one_of_decls[0], value);
        }
        get has_account_unfollow_event() {
            return pb_1.Message.getField(this, 15) != null;
        }
        get username_registration_event() {
            return pb_1.Message.getWrapperField(this, UsernameRegistrationEvent, 16) as UsernameRegistrationEvent;
        }
        set username_registration_event(value: UsernameRegistrationEvent) {
            pb_1.Message.setOneofWrapperField(this, 16, this.#one_of_decls[0], value);
        }
        get has_username_registration_event() {
            return pb_1.Message.getField(this, 16) != null;
        }
        get profile_update_event() {
            return pb_1.Message.getWrapperField(this, ProfileUpdateEvent, 17) as ProfileUpdateEvent;
        }
        set profile_update_event(value: ProfileUpdateEvent) {
            pb_1.Message.setOneofWrapperField(this, 17, this.#one_of_decls[0], value);
        }
        get has_profile_update_event() {
            return pb_1.Message.getField(this, 17) != null;
        }
        get community_registered_event() {
            return pb_1.Message.getWrapperField(this, CommunityRegisteredEvent, 18) as CommunityRegisteredEvent;
        }
        set community_registered_event(value: CommunityRegisteredEvent) {
            pb_1.Message.setOneofWrapperField(this, 18, this.#one_of_decls[0], value);
        }
        get has_community_registered_event() {
            return pb_1.Message.getField(this, 18) != null;
        }
        get member_join_event() {
            return pb_1.Message.getWrapperField(this, MemberJoinEvent, 19) as MemberJoinEvent;
        }
        set member_join_event(value: MemberJoinEvent) {
            pb_1.Message.setOneofWrapperField(this, 19, this.#one_of_decls[0], value);
        }
        get has_member_join_event() {
            return pb_1.Message.getField(this, 19) != null;
        }
        get membership_change_event() {
            return pb_1.Message.getWrapperField(this, MembershipChangeEvent, 20) as MembershipChangeEvent;
        }
        set membership_change_event(value: MembershipChangeEvent) {
            pb_1.Message.setOneofWrapperField(this, 20, this.#one_of_decls[0], value);
        }
        get has_membership_change_event() {
            return pb_1.Message.getField(this, 20) != null;
        }
        get membership_delete_event() {
            return pb_1.Message.getWrapperField(this, MembershipDeleteEvent, 21) as MembershipDeleteEvent;
        }
        set membership_delete_event(value: MembershipDeleteEvent) {
            pb_1.Message.setOneofWrapperField(this, 21, this.#one_of_decls[0], value);
        }
        get has_membership_delete_event() {
            return pb_1.Message.getField(this, 21) != null;
        }
        get membership_reclaim_event() {
            return pb_1.Message.getWrapperField(this, MembershipReclaimEvent, 22) as MembershipReclaimEvent;
        }
        set membership_reclaim_event(value: MembershipReclaimEvent) {
            pb_1.Message.setOneofWrapperField(this, 22, this.#one_of_decls[0], value);
        }
        get has_membership_reclaim_event() {
            return pb_1.Message.getField(this, 22) != null;
        }
        get community_update_event() {
            return pb_1.Message.getWrapperField(this, CommunityUpdateEvent, 23) as CommunityUpdateEvent;
        }
        set community_update_event(value: CommunityUpdateEvent) {
            pb_1.Message.setOneofWrapperField(this, 23, this.#one_of_decls[0], value);
        }
        get has_community_update_event() {
            return pb_1.Message.getField(this, 23) != null;
        }
        get event() {
            const cases: {
                [index: number]: "none" | "account_create_event" | "delegate_create_event" | "delegate_remove_event" | "reaction_create_event" | "reaction_remove_event" | "reaction_create_event_with_ref" | "reaction_remove_event_with_ref" | "publication_create_event" | "publication_remove_event" | "publication_create_with_ref_event" | "publication_remove_with_ref_event" | "account_follow_event" | "account_unfollow_event" | "username_registration_event" | "profile_update_event" | "community_registered_event" | "member_join_event" | "membership_change_event" | "membership_delete_event" | "membership_reclaim_event" | "community_update_event";
            } = {
                0: "none",
                3: "account_create_event",
                4: "delegate_create_event",
                5: "delegate_remove_event",
                6: "reaction_create_event",
                7: "reaction_remove_event",
                8: "reaction_create_event_with_ref",
                9: "reaction_remove_event_with_ref",
                10: "publication_create_event",
                11: "publication_remove_event",
                12: "publication_create_with_ref_event",
                13: "publication_remove_with_ref_event",
                14: "account_follow_event",
                15: "account_unfollow_event",
                16: "username_registration_event",
                17: "profile_update_event",
                18: "community_registered_event",
                19: "member_join_event",
                20: "membership_change_event",
                21: "membership_delete_event",
                22: "membership_reclaim_event",
                23: "community_update_event"
            };
            return cases[pb_1.Message.computeOneofCase(this, [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23])];
        }
        static fromObject(data: {
            event_type?: string;
            sequence_number?: number;
            account_create_event?: ReturnType<typeof AccountCreateEvent.prototype.toObject>;
            delegate_create_event?: ReturnType<typeof DelegateCreateEvent.prototype.toObject>;
            delegate_remove_event?: ReturnType<typeof DelegateRemoveEvent.prototype.toObject>;
            reaction_create_event?: ReturnType<typeof ReactionCreateEvent.prototype.toObject>;
            reaction_remove_event?: ReturnType<typeof ReactionRemoveEvent.prototype.toObject>;
            reaction_create_event_with_ref?: ReturnType<typeof ReactionCreateEventWithRef.prototype.toObject>;
            reaction_remove_event_with_ref?: ReturnType<typeof ReactionRemoveEventWithRef.prototype.toObject>;
            publication_create_event?: ReturnType<typeof PublicationCreateEvent.prototype.toObject>;
            publication_remove_event?: ReturnType<typeof PublicationRemoveEvent.prototype.toObject>;
            publication_create_with_ref_event?: ReturnType<typeof PublicationCreateWithRefEvent.prototype.toObject>;
            publication_remove_with_ref_event?: ReturnType<typeof PublicationRemoveWithRefEvent.prototype.toObject>;
            account_follow_event?: ReturnType<typeof AccountFollowEvent.prototype.toObject>;
            account_unfollow_event?: ReturnType<typeof AccountUnfollowEvent.prototype.toObject>;
            username_registration_event?: ReturnType<typeof UsernameRegistrationEvent.prototype.toObject>;
            profile_update_event?: ReturnType<typeof ProfileUpdateEvent.prototype.toObject>;
            community_registered_event?: ReturnType<typeof CommunityRegisteredEvent.prototype.toObject>;
            member_join_event?: ReturnType<typeof MemberJoinEvent.prototype.toObject>;
            membership_change_event?: ReturnType<typeof MembershipChangeEvent.prototype.toObject>;
            membership_delete_event?: ReturnType<typeof MembershipDeleteEvent.prototype.toObject>;
            membership_reclaim_event?: ReturnType<typeof MembershipReclaimEvent.prototype.toObject>;
            community_update_event?: ReturnType<typeof CommunityUpdateEvent.prototype.toObject>;
        }): Event {
            const message = new Event({});
            if (data.event_type != null) {
                message.event_type = data.event_type;
            }
            if (data.sequence_number != null) {
                message.sequence_number = data.sequence_number;
            }
            if (data.account_create_event != null) {
                message.account_create_event = AccountCreateEvent.fromObject(data.account_create_event);
            }
            if (data.delegate_create_event != null) {
                message.delegate_create_event = DelegateCreateEvent.fromObject(data.delegate_create_event);
            }
            if (data.delegate_remove_event != null) {
                message.delegate_remove_event = DelegateRemoveEvent.fromObject(data.delegate_remove_event);
            }
            if (data.reaction_create_event != null) {
                message.reaction_create_event = ReactionCreateEvent.fromObject(data.reaction_create_event);
            }
            if (data.reaction_remove_event != null) {
                message.reaction_remove_event = ReactionRemoveEvent.fromObject(data.reaction_remove_event);
            }
            if (data.reaction_create_event_with_ref != null) {
                message.reaction_create_event_with_ref = ReactionCreateEventWithRef.fromObject(data.reaction_create_event_with_ref);
            }
            if (data.reaction_remove_event_with_ref != null) {
                message.reaction_remove_event_with_ref = ReactionRemoveEventWithRef.fromObject(data.reaction_remove_event_with_ref);
            }
            if (data.publication_create_event != null) {
                message.publication_create_event = PublicationCreateEvent.fromObject(data.publication_create_event);
            }
            if (data.publication_remove_event != null) {
                message.publication_remove_event = PublicationRemoveEvent.fromObject(data.publication_remove_event);
            }
            if (data.publication_create_with_ref_event != null) {
                message.publication_create_with_ref_event = PublicationCreateWithRefEvent.fromObject(data.publication_create_with_ref_event);
            }
            if (data.publication_remove_with_ref_event != null) {
                message.publication_remove_with_ref_event = PublicationRemoveWithRefEvent.fromObject(data.publication_remove_with_ref_event);
            }
            if (data.account_follow_event != null) {
                message.account_follow_event = AccountFollowEvent.fromObject(data.account_follow_event);
            }
            if (data.account_unfollow_event != null) {
                message.account_unfollow_event = AccountUnfollowEvent.fromObject(data.account_unfollow_event);
            }
            if (data.username_registration_event != null) {
                message.username_registration_event = UsernameRegistrationEvent.fromObject(data.username_registration_event);
            }
            if (data.profile_update_event != null) {
                message.profile_update_event = ProfileUpdateEvent.fromObject(data.profile_update_event);
            }
            if (data.community_registered_event != null) {
                message.community_registered_event = CommunityRegisteredEvent.fromObject(data.community_registered_event);
            }
            if (data.member_join_event != null) {
                message.member_join_event = MemberJoinEvent.fromObject(data.member_join_event);
            }
            if (data.membership_change_event != null) {
                message.membership_change_event = MembershipChangeEvent.fromObject(data.membership_change_event);
            }
            if (data.membership_delete_event != null) {
                message.membership_delete_event = MembershipDeleteEvent.fromObject(data.membership_delete_event);
            }
            if (data.membership_reclaim_event != null) {
                message.membership_reclaim_event = MembershipReclaimEvent.fromObject(data.membership_reclaim_event);
            }
            if (data.community_update_event != null) {
                message.community_update_event = CommunityUpdateEvent.fromObject(data.community_update_event);
            }
            return message;
        }
        toObject() {
            const data: {
                event_type?: string;
                sequence_number?: number;
                account_create_event?: ReturnType<typeof AccountCreateEvent.prototype.toObject>;
                delegate_create_event?: ReturnType<typeof DelegateCreateEvent.prototype.toObject>;
                delegate_remove_event?: ReturnType<typeof DelegateRemoveEvent.prototype.toObject>;
                reaction_create_event?: ReturnType<typeof ReactionCreateEvent.prototype.toObject>;
                reaction_remove_event?: ReturnType<typeof ReactionRemoveEvent.prototype.toObject>;
                reaction_create_event_with_ref?: ReturnType<typeof ReactionCreateEventWithRef.prototype.toObject>;
                reaction_remove_event_with_ref?: ReturnType<typeof ReactionRemoveEventWithRef.prototype.toObject>;
                publication_create_event?: ReturnType<typeof PublicationCreateEvent.prototype.toObject>;
                publication_remove_event?: ReturnType<typeof PublicationRemoveEvent.prototype.toObject>;
                publication_create_with_ref_event?: ReturnType<typeof PublicationCreateWithRefEvent.prototype.toObject>;
                publication_remove_with_ref_event?: ReturnType<typeof PublicationRemoveWithRefEvent.prototype.toObject>;
                account_follow_event?: ReturnType<typeof AccountFollowEvent.prototype.toObject>;
                account_unfollow_event?: ReturnType<typeof AccountUnfollowEvent.prototype.toObject>;
                username_registration_event?: ReturnType<typeof UsernameRegistrationEvent.prototype.toObject>;
                profile_update_event?: ReturnType<typeof ProfileUpdateEvent.prototype.toObject>;
                community_registered_event?: ReturnType<typeof CommunityRegisteredEvent.prototype.toObject>;
                member_join_event?: ReturnType<typeof MemberJoinEvent.prototype.toObject>;
                membership_change_event?: ReturnType<typeof MembershipChangeEvent.prototype.toObject>;
                membership_delete_event?: ReturnType<typeof MembershipDeleteEvent.prototype.toObject>;
                membership_reclaim_event?: ReturnType<typeof MembershipReclaimEvent.prototype.toObject>;
                community_update_event?: ReturnType<typeof CommunityUpdateEvent.prototype.toObject>;
            } = {};
            if (this.event_type != null) {
                data.event_type = this.event_type;
            }
            if (this.sequence_number != null) {
                data.sequence_number = this.sequence_number;
            }
            if (this.account_create_event != null) {
                data.account_create_event = this.account_create_event.toObject();
            }
            if (this.delegate_create_event != null) {
                data.delegate_create_event = this.delegate_create_event.toObject();
            }
            if (this.delegate_remove_event != null) {
                data.delegate_remove_event = this.delegate_remove_event.toObject();
            }
            if (this.reaction_create_event != null) {
                data.reaction_create_event = this.reaction_create_event.toObject();
            }
            if (this.reaction_remove_event != null) {
                data.reaction_remove_event = this.reaction_remove_event.toObject();
            }
            if (this.reaction_create_event_with_ref != null) {
                data.reaction_create_event_with_ref = this.reaction_create_event_with_ref.toObject();
            }
            if (this.reaction_remove_event_with_ref != null) {
                data.reaction_remove_event_with_ref = this.reaction_remove_event_with_ref.toObject();
            }
            if (this.publication_create_event != null) {
                data.publication_create_event = this.publication_create_event.toObject();
            }
            if (this.publication_remove_event != null) {
                data.publication_remove_event = this.publication_remove_event.toObject();
            }
            if (this.publication_create_with_ref_event != null) {
                data.publication_create_with_ref_event = this.publication_create_with_ref_event.toObject();
            }
            if (this.publication_remove_with_ref_event != null) {
                data.publication_remove_with_ref_event = this.publication_remove_with_ref_event.toObject();
            }
            if (this.account_follow_event != null) {
                data.account_follow_event = this.account_follow_event.toObject();
            }
            if (this.account_unfollow_event != null) {
                data.account_unfollow_event = this.account_unfollow_event.toObject();
            }
            if (this.username_registration_event != null) {
                data.username_registration_event = this.username_registration_event.toObject();
            }
            if (this.profile_update_event != null) {
                data.profile_update_event = this.profile_update_event.toObject();
            }
            if (this.community_registered_event != null) {
                data.community_registered_event = this.community_registered_event.toObject();
            }
            if (this.member_join_event != null) {
                data.member_join_event = this.member_join_event.toObject();
            }
            if (this.membership_change_event != null) {
                data.membership_change_event = this.membership_change_event.toObject();
            }
            if (this.membership_delete_event != null) {
                data.membership_delete_event = this.membership_delete_event.toObject();
            }
            if (this.membership_reclaim_event != null) {
                data.membership_reclaim_event = this.membership_reclaim_event.toObject();
            }
            if (this.community_update_event != null) {
                data.community_update_event = this.community_update_event.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.event_type.length)
                writer.writeString(1, this.event_type);
            if (this.sequence_number != 0)
                writer.writeInt64(2, this.sequence_number);
            if (this.has_account_create_event)
                writer.writeMessage(3, this.account_create_event, () => this.account_create_event.serialize(writer));
            if (this.has_delegate_create_event)
                writer.writeMessage(4, this.delegate_create_event, () => this.delegate_create_event.serialize(writer));
            if (this.has_delegate_remove_event)
                writer.writeMessage(5, this.delegate_remove_event, () => this.delegate_remove_event.serialize(writer));
            if (this.has_reaction_create_event)
                writer.writeMessage(6, this.reaction_create_event, () => this.reaction_create_event.serialize(writer));
            if (this.has_reaction_remove_event)
                writer.writeMessage(7, this.reaction_remove_event, () => this.reaction_remove_event.serialize(writer));
            if (this.has_reaction_create_event_with_ref)
                writer.writeMessage(8, this.reaction_create_event_with_ref, () => this.reaction_create_event_with_ref.serialize(writer));
            if (this.has_reaction_remove_event_with_ref)
                writer.writeMessage(9, this.reaction_remove_event_with_ref, () => this.reaction_remove_event_with_ref.serialize(writer));
            if (this.has_publication_create_event)
                writer.writeMessage(10, this.publication_create_event, () => this.publication_create_event.serialize(writer));
            if (this.has_publication_remove_event)
                writer.writeMessage(11, this.publication_remove_event, () => this.publication_remove_event.serialize(writer));
            if (this.has_publication_create_with_ref_event)
                writer.writeMessage(12, this.publication_create_with_ref_event, () => this.publication_create_with_ref_event.serialize(writer));
            if (this.has_publication_remove_with_ref_event)
                writer.writeMessage(13, this.publication_remove_with_ref_event, () => this.publication_remove_with_ref_event.serialize(writer));
            if (this.has_account_follow_event)
                writer.writeMessage(14, this.account_follow_event, () => this.account_follow_event.serialize(writer));
            if (this.has_account_unfollow_event)
                writer.writeMessage(15, this.account_unfollow_event, () => this.account_unfollow_event.serialize(writer));
            if (this.has_username_registration_event)
                writer.writeMessage(16, this.username_registration_event, () => this.username_registration_event.serialize(writer));
            if (this.has_profile_update_event)
                writer.writeMessage(17, this.profile_update_event, () => this.profile_update_event.serialize(writer));
            if (this.has_community_registered_event)
                writer.writeMessage(18, this.community_registered_event, () => this.community_registered_event.serialize(writer));
            if (this.has_member_join_event)
                writer.writeMessage(19, this.member_join_event, () => this.member_join_event.serialize(writer));
            if (this.has_membership_change_event)
                writer.writeMessage(20, this.membership_change_event, () => this.membership_change_event.serialize(writer));
            if (this.has_membership_delete_event)
                writer.writeMessage(21, this.membership_delete_event, () => this.membership_delete_event.serialize(writer));
            if (this.has_membership_reclaim_event)
                writer.writeMessage(22, this.membership_reclaim_event, () => this.membership_reclaim_event.serialize(writer));
            if (this.has_community_update_event)
                writer.writeMessage(23, this.community_update_event, () => this.community_update_event.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): Event {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Event();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.event_type = reader.readString();
                        break;
                    case 2:
                        message.sequence_number = reader.readInt64();
                        break;
                    case 3:
                        reader.readMessage(message.account_create_event, () => message.account_create_event = AccountCreateEvent.deserialize(reader));
                        break;
                    case 4:
                        reader.readMessage(message.delegate_create_event, () => message.delegate_create_event = DelegateCreateEvent.deserialize(reader));
                        break;
                    case 5:
                        reader.readMessage(message.delegate_remove_event, () => message.delegate_remove_event = DelegateRemoveEvent.deserialize(reader));
                        break;
                    case 6:
                        reader.readMessage(message.reaction_create_event, () => message.reaction_create_event = ReactionCreateEvent.deserialize(reader));
                        break;
                    case 7:
                        reader.readMessage(message.reaction_remove_event, () => message.reaction_remove_event = ReactionRemoveEvent.deserialize(reader));
                        break;
                    case 8:
                        reader.readMessage(message.reaction_create_event_with_ref, () => message.reaction_create_event_with_ref = ReactionCreateEventWithRef.deserialize(reader));
                        break;
                    case 9:
                        reader.readMessage(message.reaction_remove_event_with_ref, () => message.reaction_remove_event_with_ref = ReactionRemoveEventWithRef.deserialize(reader));
                        break;
                    case 10:
                        reader.readMessage(message.publication_create_event, () => message.publication_create_event = PublicationCreateEvent.deserialize(reader));
                        break;
                    case 11:
                        reader.readMessage(message.publication_remove_event, () => message.publication_remove_event = PublicationRemoveEvent.deserialize(reader));
                        break;
                    case 12:
                        reader.readMessage(message.publication_create_with_ref_event, () => message.publication_create_with_ref_event = PublicationCreateWithRefEvent.deserialize(reader));
                        break;
                    case 13:
                        reader.readMessage(message.publication_remove_with_ref_event, () => message.publication_remove_with_ref_event = PublicationRemoveWithRefEvent.deserialize(reader));
                        break;
                    case 14:
                        reader.readMessage(message.account_follow_event, () => message.account_follow_event = AccountFollowEvent.deserialize(reader));
                        break;
                    case 15:
                        reader.readMessage(message.account_unfollow_event, () => message.account_unfollow_event = AccountUnfollowEvent.deserialize(reader));
                        break;
                    case 16:
                        reader.readMessage(message.username_registration_event, () => message.username_registration_event = UsernameRegistrationEvent.deserialize(reader));
                        break;
                    case 17:
                        reader.readMessage(message.profile_update_event, () => message.profile_update_event = ProfileUpdateEvent.deserialize(reader));
                        break;
                    case 18:
                        reader.readMessage(message.community_registered_event, () => message.community_registered_event = CommunityRegisteredEvent.deserialize(reader));
                        break;
                    case 19:
                        reader.readMessage(message.member_join_event, () => message.member_join_event = MemberJoinEvent.deserialize(reader));
                        break;
                    case 20:
                        reader.readMessage(message.membership_change_event, () => message.membership_change_event = MembershipChangeEvent.deserialize(reader));
                        break;
                    case 21:
                        reader.readMessage(message.membership_delete_event, () => message.membership_delete_event = MembershipDeleteEvent.deserialize(reader));
                        break;
                    case 22:
                        reader.readMessage(message.membership_reclaim_event, () => message.membership_reclaim_event = MembershipReclaimEvent.deserialize(reader));
                        break;
                    case 23:
                        reader.readMessage(message.community_update_event, () => message.community_update_event = CommunityUpdateEvent.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): Event {
            return Event.deserialize(bytes);
        }
    }
}
