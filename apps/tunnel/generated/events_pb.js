// source: events.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

goog.exportSymbol('proto.events.AccountCreateEvent', null, global);
goog.exportSymbol('proto.events.AccountFollowEvent', null, global);
goog.exportSymbol('proto.events.AccountUnfollowEvent', null, global);
goog.exportSymbol('proto.events.CommunityRegisteredEvent', null, global);
goog.exportSymbol('proto.events.CommunityUpdateEvent', null, global);
goog.exportSymbol('proto.events.DelegateCreateEvent', null, global);
goog.exportSymbol('proto.events.DelegateRemoveEvent', null, global);
goog.exportSymbol('proto.events.Event', null, global);
goog.exportSymbol('proto.events.Event.EventCase', null, global);
goog.exportSymbol('proto.events.EventRequest', null, global);
goog.exportSymbol('proto.events.EventsRequest', null, global);
goog.exportSymbol('proto.events.MemberJoinEvent', null, global);
goog.exportSymbol('proto.events.MembershipChangeEvent', null, global);
goog.exportSymbol('proto.events.MembershipDeleteEvent', null, global);
goog.exportSymbol('proto.events.MembershipReclaimEvent', null, global);
goog.exportSymbol('proto.events.ProfileUpdateEvent', null, global);
goog.exportSymbol('proto.events.PublicationCreateEvent', null, global);
goog.exportSymbol('proto.events.PublicationCreateWithRefEvent', null, global);
goog.exportSymbol('proto.events.PublicationRemoveEvent', null, global);
goog.exportSymbol('proto.events.PublicationRemoveWithRefEvent', null, global);
goog.exportSymbol('proto.events.ReactionCreateEvent', null, global);
goog.exportSymbol('proto.events.ReactionCreateEventWithRef', null, global);
goog.exportSymbol('proto.events.ReactionRemoveEvent', null, global);
goog.exportSymbol('proto.events.ReactionRemoveEventWithRef', null, global);
goog.exportSymbol('proto.events.UsernameRegistrationEvent', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.events.AccountCreateEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.events.AccountCreateEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.events.AccountCreateEvent.displayName = 'proto.events.AccountCreateEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.events.DelegateCreateEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.events.DelegateCreateEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.events.DelegateCreateEvent.displayName = 'proto.events.DelegateCreateEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.events.DelegateRemoveEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.events.DelegateRemoveEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.events.DelegateRemoveEvent.displayName = 'proto.events.DelegateRemoveEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.events.ReactionCreateEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.events.ReactionCreateEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.events.ReactionCreateEvent.displayName = 'proto.events.ReactionCreateEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.events.ReactionRemoveEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.events.ReactionRemoveEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.events.ReactionRemoveEvent.displayName = 'proto.events.ReactionRemoveEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.events.ReactionCreateEventWithRef = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.events.ReactionCreateEventWithRef, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.events.ReactionCreateEventWithRef.displayName = 'proto.events.ReactionCreateEventWithRef';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.events.ReactionRemoveEventWithRef = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.events.ReactionRemoveEventWithRef, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.events.ReactionRemoveEventWithRef.displayName = 'proto.events.ReactionRemoveEventWithRef';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.events.PublicationCreateEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.events.PublicationCreateEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.events.PublicationCreateEvent.displayName = 'proto.events.PublicationCreateEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.events.PublicationRemoveEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.events.PublicationRemoveEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.events.PublicationRemoveEvent.displayName = 'proto.events.PublicationRemoveEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.events.PublicationCreateWithRefEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.events.PublicationCreateWithRefEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.events.PublicationCreateWithRefEvent.displayName = 'proto.events.PublicationCreateWithRefEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.events.PublicationRemoveWithRefEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.events.PublicationRemoveWithRefEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.events.PublicationRemoveWithRefEvent.displayName = 'proto.events.PublicationRemoveWithRefEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.events.AccountFollowEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.events.AccountFollowEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.events.AccountFollowEvent.displayName = 'proto.events.AccountFollowEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.events.AccountUnfollowEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.events.AccountUnfollowEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.events.AccountUnfollowEvent.displayName = 'proto.events.AccountUnfollowEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.events.UsernameRegistrationEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.events.UsernameRegistrationEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.events.UsernameRegistrationEvent.displayName = 'proto.events.UsernameRegistrationEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.events.ProfileUpdateEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.events.ProfileUpdateEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.events.ProfileUpdateEvent.displayName = 'proto.events.ProfileUpdateEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.events.CommunityRegisteredEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.events.CommunityRegisteredEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.events.CommunityRegisteredEvent.displayName = 'proto.events.CommunityRegisteredEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.events.MemberJoinEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.events.MemberJoinEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.events.MemberJoinEvent.displayName = 'proto.events.MemberJoinEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.events.MembershipChangeEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.events.MembershipChangeEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.events.MembershipChangeEvent.displayName = 'proto.events.MembershipChangeEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.events.MembershipDeleteEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.events.MembershipDeleteEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.events.MembershipDeleteEvent.displayName = 'proto.events.MembershipDeleteEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.events.MembershipReclaimEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.events.MembershipReclaimEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.events.MembershipReclaimEvent.displayName = 'proto.events.MembershipReclaimEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.events.CommunityUpdateEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.events.CommunityUpdateEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.events.CommunityUpdateEvent.displayName = 'proto.events.CommunityUpdateEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.events.EventsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.events.EventsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.events.EventsRequest.displayName = 'proto.events.EventsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.events.Event = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.events.Event.oneofGroups_);
};
goog.inherits(proto.events.Event, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.events.Event.displayName = 'proto.events.Event';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.events.EventRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.events.EventRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.events.EventRequest.displayName = 'proto.events.EventRequest';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.events.AccountCreateEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.events.AccountCreateEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.events.AccountCreateEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.events.AccountCreateEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    username: jspb.Message.getFieldWithDefault(msg, 1, ""),
    creatorAddress: jspb.Message.getFieldWithDefault(msg, 2, ""),
    accountObjectAddress: jspb.Message.getFieldWithDefault(msg, 3, ""),
    kid: jspb.Message.getFieldWithDefault(msg, 4, 0),
    timestamp: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.events.AccountCreateEvent}
 */
proto.events.AccountCreateEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.events.AccountCreateEvent;
  return proto.events.AccountCreateEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.events.AccountCreateEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.events.AccountCreateEvent}
 */
proto.events.AccountCreateEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatorAddress(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountObjectAddress(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setKid(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimestamp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.events.AccountCreateEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.events.AccountCreateEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.events.AccountCreateEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.events.AccountCreateEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUsername();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCreatorAddress();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAccountObjectAddress();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getKid();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
};


/**
 * optional string username = 1;
 * @return {string}
 */
proto.events.AccountCreateEvent.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.events.AccountCreateEvent} returns this
 */
proto.events.AccountCreateEvent.prototype.setUsername = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string creator_address = 2;
 * @return {string}
 */
proto.events.AccountCreateEvent.prototype.getCreatorAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.events.AccountCreateEvent} returns this
 */
proto.events.AccountCreateEvent.prototype.setCreatorAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string account_object_address = 3;
 * @return {string}
 */
proto.events.AccountCreateEvent.prototype.getAccountObjectAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.events.AccountCreateEvent} returns this
 */
proto.events.AccountCreateEvent.prototype.setAccountObjectAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 kid = 4;
 * @return {number}
 */
proto.events.AccountCreateEvent.prototype.getKid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.events.AccountCreateEvent} returns this
 */
proto.events.AccountCreateEvent.prototype.setKid = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int64 timestamp = 5;
 * @return {number}
 */
proto.events.AccountCreateEvent.prototype.getTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.events.AccountCreateEvent} returns this
 */
proto.events.AccountCreateEvent.prototype.setTimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.events.DelegateCreateEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.events.DelegateCreateEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.events.DelegateCreateEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.events.DelegateCreateEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    ownerAddress: jspb.Message.getFieldWithDefault(msg, 1, ""),
    objectAddress: jspb.Message.getFieldWithDefault(msg, 2, ""),
    delegateAddress: jspb.Message.getFieldWithDefault(msg, 3, ""),
    kid: jspb.Message.getFieldWithDefault(msg, 4, 0),
    timestamp: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.events.DelegateCreateEvent}
 */
proto.events.DelegateCreateEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.events.DelegateCreateEvent;
  return proto.events.DelegateCreateEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.events.DelegateCreateEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.events.DelegateCreateEvent}
 */
proto.events.DelegateCreateEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOwnerAddress(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setObjectAddress(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDelegateAddress(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setKid(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimestamp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.events.DelegateCreateEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.events.DelegateCreateEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.events.DelegateCreateEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.events.DelegateCreateEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOwnerAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getObjectAddress();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDelegateAddress();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getKid();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
};


/**
 * optional string owner_address = 1;
 * @return {string}
 */
proto.events.DelegateCreateEvent.prototype.getOwnerAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.events.DelegateCreateEvent} returns this
 */
proto.events.DelegateCreateEvent.prototype.setOwnerAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string object_address = 2;
 * @return {string}
 */
proto.events.DelegateCreateEvent.prototype.getObjectAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.events.DelegateCreateEvent} returns this
 */
proto.events.DelegateCreateEvent.prototype.setObjectAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string delegate_address = 3;
 * @return {string}
 */
proto.events.DelegateCreateEvent.prototype.getDelegateAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.events.DelegateCreateEvent} returns this
 */
proto.events.DelegateCreateEvent.prototype.setDelegateAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 kid = 4;
 * @return {number}
 */
proto.events.DelegateCreateEvent.prototype.getKid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.events.DelegateCreateEvent} returns this
 */
proto.events.DelegateCreateEvent.prototype.setKid = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int64 timestamp = 5;
 * @return {number}
 */
proto.events.DelegateCreateEvent.prototype.getTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.events.DelegateCreateEvent} returns this
 */
proto.events.DelegateCreateEvent.prototype.setTimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.events.DelegateRemoveEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.events.DelegateRemoveEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.events.DelegateRemoveEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.events.DelegateRemoveEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    ownerAddress: jspb.Message.getFieldWithDefault(msg, 1, ""),
    objectAddress: jspb.Message.getFieldWithDefault(msg, 2, ""),
    delegateAddress: jspb.Message.getFieldWithDefault(msg, 3, ""),
    kid: jspb.Message.getFieldWithDefault(msg, 4, 0),
    timestamp: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.events.DelegateRemoveEvent}
 */
proto.events.DelegateRemoveEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.events.DelegateRemoveEvent;
  return proto.events.DelegateRemoveEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.events.DelegateRemoveEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.events.DelegateRemoveEvent}
 */
proto.events.DelegateRemoveEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOwnerAddress(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setObjectAddress(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDelegateAddress(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setKid(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimestamp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.events.DelegateRemoveEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.events.DelegateRemoveEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.events.DelegateRemoveEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.events.DelegateRemoveEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOwnerAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getObjectAddress();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDelegateAddress();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getKid();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
};


/**
 * optional string owner_address = 1;
 * @return {string}
 */
proto.events.DelegateRemoveEvent.prototype.getOwnerAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.events.DelegateRemoveEvent} returns this
 */
proto.events.DelegateRemoveEvent.prototype.setOwnerAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string object_address = 2;
 * @return {string}
 */
proto.events.DelegateRemoveEvent.prototype.getObjectAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.events.DelegateRemoveEvent} returns this
 */
proto.events.DelegateRemoveEvent.prototype.setObjectAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string delegate_address = 3;
 * @return {string}
 */
proto.events.DelegateRemoveEvent.prototype.getDelegateAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.events.DelegateRemoveEvent} returns this
 */
proto.events.DelegateRemoveEvent.prototype.setDelegateAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 kid = 4;
 * @return {number}
 */
proto.events.DelegateRemoveEvent.prototype.getKid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.events.DelegateRemoveEvent} returns this
 */
proto.events.DelegateRemoveEvent.prototype.setKid = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int64 timestamp = 5;
 * @return {number}
 */
proto.events.DelegateRemoveEvent.prototype.getTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.events.DelegateRemoveEvent} returns this
 */
proto.events.DelegateRemoveEvent.prototype.setTimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.events.ReactionCreateEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.events.ReactionCreateEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.events.ReactionCreateEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.events.ReactionCreateEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    kid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    userKid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    delegate: jspb.Message.getFieldWithDefault(msg, 3, ""),
    reaction: jspb.Message.getFieldWithDefault(msg, 4, 0),
    referenceKid: jspb.Message.getFieldWithDefault(msg, 5, 0),
    timestamp: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.events.ReactionCreateEvent}
 */
proto.events.ReactionCreateEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.events.ReactionCreateEvent;
  return proto.events.ReactionCreateEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.events.ReactionCreateEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.events.ReactionCreateEvent}
 */
proto.events.ReactionCreateEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setKid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUserKid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDelegate(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setReaction(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setReferenceKid(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimestamp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.events.ReactionCreateEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.events.ReactionCreateEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.events.ReactionCreateEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.events.ReactionCreateEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getUserKid();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getDelegate();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getReaction();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getReferenceKid();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
};


/**
 * optional int32 kid = 1;
 * @return {number}
 */
proto.events.ReactionCreateEvent.prototype.getKid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.events.ReactionCreateEvent} returns this
 */
proto.events.ReactionCreateEvent.prototype.setKid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 user_kid = 2;
 * @return {number}
 */
proto.events.ReactionCreateEvent.prototype.getUserKid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.events.ReactionCreateEvent} returns this
 */
proto.events.ReactionCreateEvent.prototype.setUserKid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string delegate = 3;
 * @return {string}
 */
proto.events.ReactionCreateEvent.prototype.getDelegate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.events.ReactionCreateEvent} returns this
 */
proto.events.ReactionCreateEvent.prototype.setDelegate = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 reaction = 4;
 * @return {number}
 */
proto.events.ReactionCreateEvent.prototype.getReaction = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.events.ReactionCreateEvent} returns this
 */
proto.events.ReactionCreateEvent.prototype.setReaction = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 reference_kid = 5;
 * @return {number}
 */
proto.events.ReactionCreateEvent.prototype.getReferenceKid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.events.ReactionCreateEvent} returns this
 */
proto.events.ReactionCreateEvent.prototype.setReferenceKid = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int64 timestamp = 6;
 * @return {number}
 */
proto.events.ReactionCreateEvent.prototype.getTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.events.ReactionCreateEvent} returns this
 */
proto.events.ReactionCreateEvent.prototype.setTimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.events.ReactionRemoveEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.events.ReactionRemoveEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.events.ReactionRemoveEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.events.ReactionRemoveEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    kid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    userKid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    delegate: jspb.Message.getFieldWithDefault(msg, 3, ""),
    timestamp: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.events.ReactionRemoveEvent}
 */
proto.events.ReactionRemoveEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.events.ReactionRemoveEvent;
  return proto.events.ReactionRemoveEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.events.ReactionRemoveEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.events.ReactionRemoveEvent}
 */
proto.events.ReactionRemoveEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setKid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUserKid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDelegate(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimestamp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.events.ReactionRemoveEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.events.ReactionRemoveEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.events.ReactionRemoveEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.events.ReactionRemoveEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getUserKid();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getDelegate();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
};


/**
 * optional int32 kid = 1;
 * @return {number}
 */
proto.events.ReactionRemoveEvent.prototype.getKid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.events.ReactionRemoveEvent} returns this
 */
proto.events.ReactionRemoveEvent.prototype.setKid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 user_kid = 2;
 * @return {number}
 */
proto.events.ReactionRemoveEvent.prototype.getUserKid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.events.ReactionRemoveEvent} returns this
 */
proto.events.ReactionRemoveEvent.prototype.setUserKid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string delegate = 3;
 * @return {string}
 */
proto.events.ReactionRemoveEvent.prototype.getDelegate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.events.ReactionRemoveEvent} returns this
 */
proto.events.ReactionRemoveEvent.prototype.setDelegate = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int64 timestamp = 4;
 * @return {number}
 */
proto.events.ReactionRemoveEvent.prototype.getTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.events.ReactionRemoveEvent} returns this
 */
proto.events.ReactionRemoveEvent.prototype.setTimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.events.ReactionCreateEventWithRef.prototype.toObject = function(opt_includeInstance) {
  return proto.events.ReactionCreateEventWithRef.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.events.ReactionCreateEventWithRef} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.events.ReactionCreateEventWithRef.toObject = function(includeInstance, msg) {
  var f, obj = {
    kid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    userKid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    delegate: jspb.Message.getFieldWithDefault(msg, 3, ""),
    reaction: jspb.Message.getFieldWithDefault(msg, 4, 0),
    publicationRef: jspb.Message.getFieldWithDefault(msg, 5, ""),
    timestamp: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.events.ReactionCreateEventWithRef}
 */
proto.events.ReactionCreateEventWithRef.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.events.ReactionCreateEventWithRef;
  return proto.events.ReactionCreateEventWithRef.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.events.ReactionCreateEventWithRef} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.events.ReactionCreateEventWithRef}
 */
proto.events.ReactionCreateEventWithRef.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setKid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUserKid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDelegate(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setReaction(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPublicationRef(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimestamp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.events.ReactionCreateEventWithRef.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.events.ReactionCreateEventWithRef.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.events.ReactionCreateEventWithRef} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.events.ReactionCreateEventWithRef.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getUserKid();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getDelegate();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getReaction();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getPublicationRef();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
};


/**
 * optional int32 kid = 1;
 * @return {number}
 */
proto.events.ReactionCreateEventWithRef.prototype.getKid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.events.ReactionCreateEventWithRef} returns this
 */
proto.events.ReactionCreateEventWithRef.prototype.setKid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 user_kid = 2;
 * @return {number}
 */
proto.events.ReactionCreateEventWithRef.prototype.getUserKid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.events.ReactionCreateEventWithRef} returns this
 */
proto.events.ReactionCreateEventWithRef.prototype.setUserKid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string delegate = 3;
 * @return {string}
 */
proto.events.ReactionCreateEventWithRef.prototype.getDelegate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.events.ReactionCreateEventWithRef} returns this
 */
proto.events.ReactionCreateEventWithRef.prototype.setDelegate = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 reaction = 4;
 * @return {number}
 */
proto.events.ReactionCreateEventWithRef.prototype.getReaction = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.events.ReactionCreateEventWithRef} returns this
 */
proto.events.ReactionCreateEventWithRef.prototype.setReaction = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string publication_ref = 5;
 * @return {string}
 */
proto.events.ReactionCreateEventWithRef.prototype.getPublicationRef = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.events.ReactionCreateEventWithRef} returns this
 */
proto.events.ReactionCreateEventWithRef.prototype.setPublicationRef = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional int64 timestamp = 6;
 * @return {number}
 */
proto.events.ReactionCreateEventWithRef.prototype.getTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.events.ReactionCreateEventWithRef} returns this
 */
proto.events.ReactionCreateEventWithRef.prototype.setTimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.events.ReactionRemoveEventWithRef.prototype.toObject = function(opt_includeInstance) {
  return proto.events.ReactionRemoveEventWithRef.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.events.ReactionRemoveEventWithRef} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.events.ReactionRemoveEventWithRef.toObject = function(includeInstance, msg) {
  var f, obj = {
    userKid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    delegate: jspb.Message.getFieldWithDefault(msg, 2, ""),
    timestamp: jspb.Message.getFieldWithDefault(msg, 3, 0),
    ref: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.events.ReactionRemoveEventWithRef}
 */
proto.events.ReactionRemoveEventWithRef.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.events.ReactionRemoveEventWithRef;
  return proto.events.ReactionRemoveEventWithRef.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.events.ReactionRemoveEventWithRef} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.events.ReactionRemoveEventWithRef}
 */
proto.events.ReactionRemoveEventWithRef.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUserKid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDelegate(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimestamp(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setRef(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.events.ReactionRemoveEventWithRef.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.events.ReactionRemoveEventWithRef.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.events.ReactionRemoveEventWithRef} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.events.ReactionRemoveEventWithRef.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserKid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getDelegate();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getRef();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional int32 user_kid = 1;
 * @return {number}
 */
proto.events.ReactionRemoveEventWithRef.prototype.getUserKid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.events.ReactionRemoveEventWithRef} returns this
 */
proto.events.ReactionRemoveEventWithRef.prototype.setUserKid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string delegate = 2;
 * @return {string}
 */
proto.events.ReactionRemoveEventWithRef.prototype.getDelegate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.events.ReactionRemoveEventWithRef} returns this
 */
proto.events.ReactionRemoveEventWithRef.prototype.setDelegate = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int64 timestamp = 3;
 * @return {number}
 */
proto.events.ReactionRemoveEventWithRef.prototype.getTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.events.ReactionRemoveEventWithRef} returns this
 */
proto.events.ReactionRemoveEventWithRef.prototype.setTimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string ref = 4;
 * @return {string}
 */
proto.events.ReactionRemoveEventWithRef.prototype.getRef = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.events.ReactionRemoveEventWithRef} returns this
 */
proto.events.ReactionRemoveEventWithRef.prototype.setRef = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.events.PublicationCreateEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.events.PublicationCreateEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.events.PublicationCreateEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.events.PublicationCreateEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    kid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    payload: jspb.Message.getFieldWithDefault(msg, 2, ""),
    userKid: jspb.Message.getFieldWithDefault(msg, 3, 0),
    delegate: jspb.Message.getFieldWithDefault(msg, 4, ""),
    timestamp: jspb.Message.getFieldWithDefault(msg, 5, 0),
    type: jspb.Message.getFieldWithDefault(msg, 6, 0),
    referenceKid: jspb.Message.getFieldWithDefault(msg, 7, 0),
    publicationRef: jspb.Message.getFieldWithDefault(msg, 8, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.events.PublicationCreateEvent}
 */
proto.events.PublicationCreateEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.events.PublicationCreateEvent;
  return proto.events.PublicationCreateEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.events.PublicationCreateEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.events.PublicationCreateEvent}
 */
proto.events.PublicationCreateEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setKid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPayload(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUserKid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDelegate(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimestamp(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setType(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setReferenceKid(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setPublicationRef(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.events.PublicationCreateEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.events.PublicationCreateEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.events.PublicationCreateEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.events.PublicationCreateEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getPayload();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getUserKid();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getDelegate();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getType();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getReferenceKid();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getPublicationRef();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * optional int32 kid = 1;
 * @return {number}
 */
proto.events.PublicationCreateEvent.prototype.getKid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.events.PublicationCreateEvent} returns this
 */
proto.events.PublicationCreateEvent.prototype.setKid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string payload = 2;
 * @return {string}
 */
proto.events.PublicationCreateEvent.prototype.getPayload = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.events.PublicationCreateEvent} returns this
 */
proto.events.PublicationCreateEvent.prototype.setPayload = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 user_kid = 3;
 * @return {number}
 */
proto.events.PublicationCreateEvent.prototype.getUserKid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.events.PublicationCreateEvent} returns this
 */
proto.events.PublicationCreateEvent.prototype.setUserKid = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string delegate = 4;
 * @return {string}
 */
proto.events.PublicationCreateEvent.prototype.getDelegate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.events.PublicationCreateEvent} returns this
 */
proto.events.PublicationCreateEvent.prototype.setDelegate = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int64 timestamp = 5;
 * @return {number}
 */
proto.events.PublicationCreateEvent.prototype.getTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.events.PublicationCreateEvent} returns this
 */
proto.events.PublicationCreateEvent.prototype.setTimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int32 type = 6;
 * @return {number}
 */
proto.events.PublicationCreateEvent.prototype.getType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.events.PublicationCreateEvent} returns this
 */
proto.events.PublicationCreateEvent.prototype.setType = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int32 reference_kid = 7;
 * @return {number}
 */
proto.events.PublicationCreateEvent.prototype.getReferenceKid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.events.PublicationCreateEvent} returns this
 */
proto.events.PublicationCreateEvent.prototype.setReferenceKid = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional string publication_ref = 8;
 * @return {string}
 */
proto.events.PublicationCreateEvent.prototype.getPublicationRef = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.events.PublicationCreateEvent} returns this
 */
proto.events.PublicationCreateEvent.prototype.setPublicationRef = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.events.PublicationRemoveEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.events.PublicationRemoveEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.events.PublicationRemoveEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.events.PublicationRemoveEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    kid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    userKid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    delegate: jspb.Message.getFieldWithDefault(msg, 3, ""),
    timestamp: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.events.PublicationRemoveEvent}
 */
proto.events.PublicationRemoveEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.events.PublicationRemoveEvent;
  return proto.events.PublicationRemoveEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.events.PublicationRemoveEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.events.PublicationRemoveEvent}
 */
proto.events.PublicationRemoveEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setKid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUserKid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDelegate(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimestamp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.events.PublicationRemoveEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.events.PublicationRemoveEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.events.PublicationRemoveEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.events.PublicationRemoveEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getUserKid();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getDelegate();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
};


/**
 * optional int32 kid = 1;
 * @return {number}
 */
proto.events.PublicationRemoveEvent.prototype.getKid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.events.PublicationRemoveEvent} returns this
 */
proto.events.PublicationRemoveEvent.prototype.setKid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 user_kid = 2;
 * @return {number}
 */
proto.events.PublicationRemoveEvent.prototype.getUserKid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.events.PublicationRemoveEvent} returns this
 */
proto.events.PublicationRemoveEvent.prototype.setUserKid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string delegate = 3;
 * @return {string}
 */
proto.events.PublicationRemoveEvent.prototype.getDelegate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.events.PublicationRemoveEvent} returns this
 */
proto.events.PublicationRemoveEvent.prototype.setDelegate = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int64 timestamp = 4;
 * @return {number}
 */
proto.events.PublicationRemoveEvent.prototype.getTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.events.PublicationRemoveEvent} returns this
 */
proto.events.PublicationRemoveEvent.prototype.setTimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.events.PublicationCreateWithRefEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.events.PublicationCreateWithRefEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.events.PublicationCreateWithRefEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.events.PublicationCreateWithRefEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    kid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    payload: jspb.Message.getFieldWithDefault(msg, 2, ""),
    userKid: jspb.Message.getFieldWithDefault(msg, 3, 0),
    delegate: jspb.Message.getFieldWithDefault(msg, 4, ""),
    timestamp: jspb.Message.getFieldWithDefault(msg, 5, 0),
    type: jspb.Message.getFieldWithDefault(msg, 6, 0),
    publicationRef: jspb.Message.getFieldWithDefault(msg, 7, ""),
    parentRef: jspb.Message.getFieldWithDefault(msg, 8, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.events.PublicationCreateWithRefEvent}
 */
proto.events.PublicationCreateWithRefEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.events.PublicationCreateWithRefEvent;
  return proto.events.PublicationCreateWithRefEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.events.PublicationCreateWithRefEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.events.PublicationCreateWithRefEvent}
 */
proto.events.PublicationCreateWithRefEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setKid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPayload(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUserKid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDelegate(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimestamp(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setType(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setPublicationRef(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setParentRef(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.events.PublicationCreateWithRefEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.events.PublicationCreateWithRefEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.events.PublicationCreateWithRefEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.events.PublicationCreateWithRefEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getPayload();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getUserKid();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getDelegate();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getType();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getPublicationRef();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getParentRef();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * optional int32 kid = 1;
 * @return {number}
 */
proto.events.PublicationCreateWithRefEvent.prototype.getKid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.events.PublicationCreateWithRefEvent} returns this
 */
proto.events.PublicationCreateWithRefEvent.prototype.setKid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string payload = 2;
 * @return {string}
 */
proto.events.PublicationCreateWithRefEvent.prototype.getPayload = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.events.PublicationCreateWithRefEvent} returns this
 */
proto.events.PublicationCreateWithRefEvent.prototype.setPayload = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 user_kid = 3;
 * @return {number}
 */
proto.events.PublicationCreateWithRefEvent.prototype.getUserKid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.events.PublicationCreateWithRefEvent} returns this
 */
proto.events.PublicationCreateWithRefEvent.prototype.setUserKid = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string delegate = 4;
 * @return {string}
 */
proto.events.PublicationCreateWithRefEvent.prototype.getDelegate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.events.PublicationCreateWithRefEvent} returns this
 */
proto.events.PublicationCreateWithRefEvent.prototype.setDelegate = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int64 timestamp = 5;
 * @return {number}
 */
proto.events.PublicationCreateWithRefEvent.prototype.getTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.events.PublicationCreateWithRefEvent} returns this
 */
proto.events.PublicationCreateWithRefEvent.prototype.setTimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int32 type = 6;
 * @return {number}
 */
proto.events.PublicationCreateWithRefEvent.prototype.getType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.events.PublicationCreateWithRefEvent} returns this
 */
proto.events.PublicationCreateWithRefEvent.prototype.setType = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional string publication_ref = 7;
 * @return {string}
 */
proto.events.PublicationCreateWithRefEvent.prototype.getPublicationRef = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.events.PublicationCreateWithRefEvent} returns this
 */
proto.events.PublicationCreateWithRefEvent.prototype.setPublicationRef = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string parent_ref = 8;
 * @return {string}
 */
proto.events.PublicationCreateWithRefEvent.prototype.getParentRef = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.events.PublicationCreateWithRefEvent} returns this
 */
proto.events.PublicationCreateWithRefEvent.prototype.setParentRef = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.events.PublicationRemoveWithRefEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.events.PublicationRemoveWithRefEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.events.PublicationRemoveWithRefEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.events.PublicationRemoveWithRefEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    userKid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    delegate: jspb.Message.getFieldWithDefault(msg, 2, ""),
    timestamp: jspb.Message.getFieldWithDefault(msg, 3, 0),
    ref: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.events.PublicationRemoveWithRefEvent}
 */
proto.events.PublicationRemoveWithRefEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.events.PublicationRemoveWithRefEvent;
  return proto.events.PublicationRemoveWithRefEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.events.PublicationRemoveWithRefEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.events.PublicationRemoveWithRefEvent}
 */
proto.events.PublicationRemoveWithRefEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUserKid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDelegate(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimestamp(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setRef(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.events.PublicationRemoveWithRefEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.events.PublicationRemoveWithRefEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.events.PublicationRemoveWithRefEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.events.PublicationRemoveWithRefEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserKid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getDelegate();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getRef();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional int32 user_kid = 1;
 * @return {number}
 */
proto.events.PublicationRemoveWithRefEvent.prototype.getUserKid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.events.PublicationRemoveWithRefEvent} returns this
 */
proto.events.PublicationRemoveWithRefEvent.prototype.setUserKid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string delegate = 2;
 * @return {string}
 */
proto.events.PublicationRemoveWithRefEvent.prototype.getDelegate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.events.PublicationRemoveWithRefEvent} returns this
 */
proto.events.PublicationRemoveWithRefEvent.prototype.setDelegate = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int64 timestamp = 3;
 * @return {number}
 */
proto.events.PublicationRemoveWithRefEvent.prototype.getTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.events.PublicationRemoveWithRefEvent} returns this
 */
proto.events.PublicationRemoveWithRefEvent.prototype.setTimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string ref = 4;
 * @return {string}
 */
proto.events.PublicationRemoveWithRefEvent.prototype.getRef = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.events.PublicationRemoveWithRefEvent} returns this
 */
proto.events.PublicationRemoveWithRefEvent.prototype.setRef = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.events.AccountFollowEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.events.AccountFollowEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.events.AccountFollowEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.events.AccountFollowEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    followerKid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    followingKid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    follower: jspb.Message.getFieldWithDefault(msg, 3, ""),
    following: jspb.Message.getFieldWithDefault(msg, 4, ""),
    kid: jspb.Message.getFieldWithDefault(msg, 5, 0),
    delegate: jspb.Message.getFieldWithDefault(msg, 6, ""),
    userKid: jspb.Message.getFieldWithDefault(msg, 7, 0),
    timestamp: jspb.Message.getFieldWithDefault(msg, 8, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.events.AccountFollowEvent}
 */
proto.events.AccountFollowEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.events.AccountFollowEvent;
  return proto.events.AccountFollowEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.events.AccountFollowEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.events.AccountFollowEvent}
 */
proto.events.AccountFollowEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFollowerKid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFollowingKid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setFollower(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setFollowing(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setKid(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setDelegate(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUserKid(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimestamp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.events.AccountFollowEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.events.AccountFollowEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.events.AccountFollowEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.events.AccountFollowEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFollowerKid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getFollowingKid();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getFollower();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getFollowing();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getKid();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getDelegate();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getUserKid();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      8,
      f
    );
  }
};


/**
 * optional int32 follower_kid = 1;
 * @return {number}
 */
proto.events.AccountFollowEvent.prototype.getFollowerKid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.events.AccountFollowEvent} returns this
 */
proto.events.AccountFollowEvent.prototype.setFollowerKid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 following_kid = 2;
 * @return {number}
 */
proto.events.AccountFollowEvent.prototype.getFollowingKid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.events.AccountFollowEvent} returns this
 */
proto.events.AccountFollowEvent.prototype.setFollowingKid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string follower = 3;
 * @return {string}
 */
proto.events.AccountFollowEvent.prototype.getFollower = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.events.AccountFollowEvent} returns this
 */
proto.events.AccountFollowEvent.prototype.setFollower = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string following = 4;
 * @return {string}
 */
proto.events.AccountFollowEvent.prototype.getFollowing = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.events.AccountFollowEvent} returns this
 */
proto.events.AccountFollowEvent.prototype.setFollowing = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int32 kid = 5;
 * @return {number}
 */
proto.events.AccountFollowEvent.prototype.getKid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.events.AccountFollowEvent} returns this
 */
proto.events.AccountFollowEvent.prototype.setKid = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string delegate = 6;
 * @return {string}
 */
proto.events.AccountFollowEvent.prototype.getDelegate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.events.AccountFollowEvent} returns this
 */
proto.events.AccountFollowEvent.prototype.setDelegate = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional int32 user_kid = 7;
 * @return {number}
 */
proto.events.AccountFollowEvent.prototype.getUserKid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.events.AccountFollowEvent} returns this
 */
proto.events.AccountFollowEvent.prototype.setUserKid = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int64 timestamp = 8;
 * @return {number}
 */
proto.events.AccountFollowEvent.prototype.getTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.events.AccountFollowEvent} returns this
 */
proto.events.AccountFollowEvent.prototype.setTimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.events.AccountUnfollowEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.events.AccountUnfollowEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.events.AccountUnfollowEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.events.AccountUnfollowEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    userKid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    unfollowingKid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    delegate: jspb.Message.getFieldWithDefault(msg, 3, ""),
    timestamp: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.events.AccountUnfollowEvent}
 */
proto.events.AccountUnfollowEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.events.AccountUnfollowEvent;
  return proto.events.AccountUnfollowEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.events.AccountUnfollowEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.events.AccountUnfollowEvent}
 */
proto.events.AccountUnfollowEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUserKid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUnfollowingKid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDelegate(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimestamp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.events.AccountUnfollowEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.events.AccountUnfollowEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.events.AccountUnfollowEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.events.AccountUnfollowEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserKid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getUnfollowingKid();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getDelegate();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
};


/**
 * optional int32 user_kid = 1;
 * @return {number}
 */
proto.events.AccountUnfollowEvent.prototype.getUserKid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.events.AccountUnfollowEvent} returns this
 */
proto.events.AccountUnfollowEvent.prototype.setUserKid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 unfollowing_kid = 2;
 * @return {number}
 */
proto.events.AccountUnfollowEvent.prototype.getUnfollowingKid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.events.AccountUnfollowEvent} returns this
 */
proto.events.AccountUnfollowEvent.prototype.setUnfollowingKid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string delegate = 3;
 * @return {string}
 */
proto.events.AccountUnfollowEvent.prototype.getDelegate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.events.AccountUnfollowEvent} returns this
 */
proto.events.AccountUnfollowEvent.prototype.setDelegate = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int64 timestamp = 4;
 * @return {number}
 */
proto.events.AccountUnfollowEvent.prototype.getTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.events.AccountUnfollowEvent} returns this
 */
proto.events.AccountUnfollowEvent.prototype.setTimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.events.UsernameRegistrationEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.events.UsernameRegistrationEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.events.UsernameRegistrationEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.events.UsernameRegistrationEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    username: jspb.Message.getFieldWithDefault(msg, 1, ""),
    ownerAddress: jspb.Message.getFieldWithDefault(msg, 2, ""),
    tokenAddress: jspb.Message.getFieldWithDefault(msg, 3, ""),
    timestamp: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.events.UsernameRegistrationEvent}
 */
proto.events.UsernameRegistrationEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.events.UsernameRegistrationEvent;
  return proto.events.UsernameRegistrationEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.events.UsernameRegistrationEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.events.UsernameRegistrationEvent}
 */
proto.events.UsernameRegistrationEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setOwnerAddress(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTokenAddress(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimestamp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.events.UsernameRegistrationEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.events.UsernameRegistrationEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.events.UsernameRegistrationEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.events.UsernameRegistrationEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUsername();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOwnerAddress();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTokenAddress();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
};


/**
 * optional string username = 1;
 * @return {string}
 */
proto.events.UsernameRegistrationEvent.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.events.UsernameRegistrationEvent} returns this
 */
proto.events.UsernameRegistrationEvent.prototype.setUsername = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string owner_address = 2;
 * @return {string}
 */
proto.events.UsernameRegistrationEvent.prototype.getOwnerAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.events.UsernameRegistrationEvent} returns this
 */
proto.events.UsernameRegistrationEvent.prototype.setOwnerAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string token_address = 3;
 * @return {string}
 */
proto.events.UsernameRegistrationEvent.prototype.getTokenAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.events.UsernameRegistrationEvent} returns this
 */
proto.events.UsernameRegistrationEvent.prototype.setTokenAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int64 timestamp = 4;
 * @return {number}
 */
proto.events.UsernameRegistrationEvent.prototype.getTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.events.UsernameRegistrationEvent} returns this
 */
proto.events.UsernameRegistrationEvent.prototype.setTimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.events.ProfileUpdateEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.events.ProfileUpdateEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.events.ProfileUpdateEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.events.ProfileUpdateEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    userKid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    delegate: jspb.Message.getFieldWithDefault(msg, 2, ""),
    timestamp: jspb.Message.getFieldWithDefault(msg, 3, 0),
    pfp: jspb.Message.getFieldWithDefault(msg, 4, ""),
    bio: jspb.Message.getFieldWithDefault(msg, 5, ""),
    displayName: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.events.ProfileUpdateEvent}
 */
proto.events.ProfileUpdateEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.events.ProfileUpdateEvent;
  return proto.events.ProfileUpdateEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.events.ProfileUpdateEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.events.ProfileUpdateEvent}
 */
proto.events.ProfileUpdateEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUserKid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDelegate(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimestamp(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPfp(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setBio(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setDisplayName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.events.ProfileUpdateEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.events.ProfileUpdateEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.events.ProfileUpdateEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.events.ProfileUpdateEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserKid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getDelegate();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getPfp();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getBio();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getDisplayName();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional int32 user_kid = 1;
 * @return {number}
 */
proto.events.ProfileUpdateEvent.prototype.getUserKid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.events.ProfileUpdateEvent} returns this
 */
proto.events.ProfileUpdateEvent.prototype.setUserKid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string delegate = 2;
 * @return {string}
 */
proto.events.ProfileUpdateEvent.prototype.getDelegate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.events.ProfileUpdateEvent} returns this
 */
proto.events.ProfileUpdateEvent.prototype.setDelegate = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int64 timestamp = 3;
 * @return {number}
 */
proto.events.ProfileUpdateEvent.prototype.getTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.events.ProfileUpdateEvent} returns this
 */
proto.events.ProfileUpdateEvent.prototype.setTimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string pfp = 4;
 * @return {string}
 */
proto.events.ProfileUpdateEvent.prototype.getPfp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.events.ProfileUpdateEvent} returns this
 */
proto.events.ProfileUpdateEvent.prototype.setPfp = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string bio = 5;
 * @return {string}
 */
proto.events.ProfileUpdateEvent.prototype.getBio = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.events.ProfileUpdateEvent} returns this
 */
proto.events.ProfileUpdateEvent.prototype.setBio = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string display_name = 6;
 * @return {string}
 */
proto.events.ProfileUpdateEvent.prototype.getDisplayName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.events.ProfileUpdateEvent} returns this
 */
proto.events.ProfileUpdateEvent.prototype.setDisplayName = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.events.CommunityRegisteredEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.events.CommunityRegisteredEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.events.CommunityRegisteredEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.events.CommunityRegisteredEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    description: jspb.Message.getFieldWithDefault(msg, 2, ""),
    image: jspb.Message.getFieldWithDefault(msg, 3, ""),
    creator: jspb.Message.getFieldWithDefault(msg, 4, ""),
    bid: jspb.Message.getFieldWithDefault(msg, 5, 0),
    userKid: jspb.Message.getFieldWithDefault(msg, 6, 0),
    timestamp: jspb.Message.getFieldWithDefault(msg, 7, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.events.CommunityRegisteredEvent}
 */
proto.events.CommunityRegisteredEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.events.CommunityRegisteredEvent;
  return proto.events.CommunityRegisteredEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.events.CommunityRegisteredEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.events.CommunityRegisteredEvent}
 */
proto.events.CommunityRegisteredEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setImage(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreator(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBid(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUserKid(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimestamp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.events.CommunityRegisteredEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.events.CommunityRegisteredEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.events.CommunityRegisteredEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.events.CommunityRegisteredEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getImage();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCreator();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getBid();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getUserKid();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.events.CommunityRegisteredEvent.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.events.CommunityRegisteredEvent} returns this
 */
proto.events.CommunityRegisteredEvent.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.events.CommunityRegisteredEvent.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.events.CommunityRegisteredEvent} returns this
 */
proto.events.CommunityRegisteredEvent.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string image = 3;
 * @return {string}
 */
proto.events.CommunityRegisteredEvent.prototype.getImage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.events.CommunityRegisteredEvent} returns this
 */
proto.events.CommunityRegisteredEvent.prototype.setImage = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string creator = 4;
 * @return {string}
 */
proto.events.CommunityRegisteredEvent.prototype.getCreator = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.events.CommunityRegisteredEvent} returns this
 */
proto.events.CommunityRegisteredEvent.prototype.setCreator = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int32 bid = 5;
 * @return {number}
 */
proto.events.CommunityRegisteredEvent.prototype.getBid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.events.CommunityRegisteredEvent} returns this
 */
proto.events.CommunityRegisteredEvent.prototype.setBid = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int32 user_kid = 6;
 * @return {number}
 */
proto.events.CommunityRegisteredEvent.prototype.getUserKid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.events.CommunityRegisteredEvent} returns this
 */
proto.events.CommunityRegisteredEvent.prototype.setUserKid = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int64 timestamp = 7;
 * @return {number}
 */
proto.events.CommunityRegisteredEvent.prototype.getTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.events.CommunityRegisteredEvent} returns this
 */
proto.events.CommunityRegisteredEvent.prototype.setTimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.events.MemberJoinEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.events.MemberJoinEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.events.MemberJoinEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.events.MemberJoinEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    owner: jspb.Message.getFieldWithDefault(msg, 1, ""),
    communityName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    timestamp: jspb.Message.getFieldWithDefault(msg, 3, 0),
    bid: jspb.Message.getFieldWithDefault(msg, 4, 0),
    type: jspb.Message.getFieldWithDefault(msg, 5, 0),
    userKid: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.events.MemberJoinEvent}
 */
proto.events.MemberJoinEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.events.MemberJoinEvent;
  return proto.events.MemberJoinEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.events.MemberJoinEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.events.MemberJoinEvent}
 */
proto.events.MemberJoinEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOwner(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCommunityName(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimestamp(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBid(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setType(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUserKid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.events.MemberJoinEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.events.MemberJoinEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.events.MemberJoinEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.events.MemberJoinEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOwner();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCommunityName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getBid();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getType();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getUserKid();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
};


/**
 * optional string owner = 1;
 * @return {string}
 */
proto.events.MemberJoinEvent.prototype.getOwner = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.events.MemberJoinEvent} returns this
 */
proto.events.MemberJoinEvent.prototype.setOwner = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string community_name = 2;
 * @return {string}
 */
proto.events.MemberJoinEvent.prototype.getCommunityName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.events.MemberJoinEvent} returns this
 */
proto.events.MemberJoinEvent.prototype.setCommunityName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int64 timestamp = 3;
 * @return {number}
 */
proto.events.MemberJoinEvent.prototype.getTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.events.MemberJoinEvent} returns this
 */
proto.events.MemberJoinEvent.prototype.setTimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 bid = 4;
 * @return {number}
 */
proto.events.MemberJoinEvent.prototype.getBid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.events.MemberJoinEvent} returns this
 */
proto.events.MemberJoinEvent.prototype.setBid = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 type = 5;
 * @return {number}
 */
proto.events.MemberJoinEvent.prototype.getType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.events.MemberJoinEvent} returns this
 */
proto.events.MemberJoinEvent.prototype.setType = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int32 user_kid = 6;
 * @return {number}
 */
proto.events.MemberJoinEvent.prototype.getUserKid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.events.MemberJoinEvent} returns this
 */
proto.events.MemberJoinEvent.prototype.setUserKid = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.events.MembershipChangeEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.events.MembershipChangeEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.events.MembershipChangeEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.events.MembershipChangeEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    madeBy: jspb.Message.getFieldWithDefault(msg, 2, ""),
    membershipOwner: jspb.Message.getFieldWithDefault(msg, 3, ""),
    communityName: jspb.Message.getFieldWithDefault(msg, 4, ""),
    communityId: jspb.Message.getFieldWithDefault(msg, 5, 0),
    membershipId: jspb.Message.getFieldWithDefault(msg, 6, 0),
    timestamp: jspb.Message.getFieldWithDefault(msg, 7, 0),
    userKid: jspb.Message.getFieldWithDefault(msg, 8, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.events.MembershipChangeEvent}
 */
proto.events.MembershipChangeEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.events.MembershipChangeEvent;
  return proto.events.MembershipChangeEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.events.MembershipChangeEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.events.MembershipChangeEvent}
 */
proto.events.MembershipChangeEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMadeBy(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMembershipOwner(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCommunityName(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCommunityId(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMembershipId(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimestamp(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUserKid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.events.MembershipChangeEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.events.MembershipChangeEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.events.MembershipChangeEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.events.MembershipChangeEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getMadeBy();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMembershipOwner();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCommunityName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCommunityId();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getMembershipId();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
  f = message.getUserKid();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
};


/**
 * optional int32 type = 1;
 * @return {number}
 */
proto.events.MembershipChangeEvent.prototype.getType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.events.MembershipChangeEvent} returns this
 */
proto.events.MembershipChangeEvent.prototype.setType = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string made_by = 2;
 * @return {string}
 */
proto.events.MembershipChangeEvent.prototype.getMadeBy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.events.MembershipChangeEvent} returns this
 */
proto.events.MembershipChangeEvent.prototype.setMadeBy = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string membership_owner = 3;
 * @return {string}
 */
proto.events.MembershipChangeEvent.prototype.getMembershipOwner = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.events.MembershipChangeEvent} returns this
 */
proto.events.MembershipChangeEvent.prototype.setMembershipOwner = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string community_name = 4;
 * @return {string}
 */
proto.events.MembershipChangeEvent.prototype.getCommunityName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.events.MembershipChangeEvent} returns this
 */
proto.events.MembershipChangeEvent.prototype.setCommunityName = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int32 community_id = 5;
 * @return {number}
 */
proto.events.MembershipChangeEvent.prototype.getCommunityId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.events.MembershipChangeEvent} returns this
 */
proto.events.MembershipChangeEvent.prototype.setCommunityId = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int32 membership_id = 6;
 * @return {number}
 */
proto.events.MembershipChangeEvent.prototype.getMembershipId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.events.MembershipChangeEvent} returns this
 */
proto.events.MembershipChangeEvent.prototype.setMembershipId = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int64 timestamp = 7;
 * @return {number}
 */
proto.events.MembershipChangeEvent.prototype.getTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.events.MembershipChangeEvent} returns this
 */
proto.events.MembershipChangeEvent.prototype.setTimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int32 user_kid = 8;
 * @return {number}
 */
proto.events.MembershipChangeEvent.prototype.getUserKid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.events.MembershipChangeEvent} returns this
 */
proto.events.MembershipChangeEvent.prototype.setUserKid = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.events.MembershipDeleteEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.events.MembershipDeleteEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.events.MembershipDeleteEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.events.MembershipDeleteEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    communityName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    communityId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    membershipId: jspb.Message.getFieldWithDefault(msg, 3, 0),
    userKid: jspb.Message.getFieldWithDefault(msg, 4, 0),
    timestamp: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.events.MembershipDeleteEvent}
 */
proto.events.MembershipDeleteEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.events.MembershipDeleteEvent;
  return proto.events.MembershipDeleteEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.events.MembershipDeleteEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.events.MembershipDeleteEvent}
 */
proto.events.MembershipDeleteEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCommunityName(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCommunityId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMembershipId(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUserKid(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimestamp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.events.MembershipDeleteEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.events.MembershipDeleteEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.events.MembershipDeleteEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.events.MembershipDeleteEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCommunityName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCommunityId();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getMembershipId();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getUserKid();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
};


/**
 * optional string community_name = 1;
 * @return {string}
 */
proto.events.MembershipDeleteEvent.prototype.getCommunityName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.events.MembershipDeleteEvent} returns this
 */
proto.events.MembershipDeleteEvent.prototype.setCommunityName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 community_id = 2;
 * @return {number}
 */
proto.events.MembershipDeleteEvent.prototype.getCommunityId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.events.MembershipDeleteEvent} returns this
 */
proto.events.MembershipDeleteEvent.prototype.setCommunityId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 membership_id = 3;
 * @return {number}
 */
proto.events.MembershipDeleteEvent.prototype.getMembershipId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.events.MembershipDeleteEvent} returns this
 */
proto.events.MembershipDeleteEvent.prototype.setMembershipId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 user_kid = 4;
 * @return {number}
 */
proto.events.MembershipDeleteEvent.prototype.getUserKid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.events.MembershipDeleteEvent} returns this
 */
proto.events.MembershipDeleteEvent.prototype.setUserKid = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int64 timestamp = 5;
 * @return {number}
 */
proto.events.MembershipDeleteEvent.prototype.getTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.events.MembershipDeleteEvent} returns this
 */
proto.events.MembershipDeleteEvent.prototype.setTimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.events.MembershipReclaimEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.events.MembershipReclaimEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.events.MembershipReclaimEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.events.MembershipReclaimEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    communityId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    membershipId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    userKid: jspb.Message.getFieldWithDefault(msg, 3, 0),
    timestamp: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.events.MembershipReclaimEvent}
 */
proto.events.MembershipReclaimEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.events.MembershipReclaimEvent;
  return proto.events.MembershipReclaimEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.events.MembershipReclaimEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.events.MembershipReclaimEvent}
 */
proto.events.MembershipReclaimEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCommunityId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMembershipId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUserKid(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimestamp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.events.MembershipReclaimEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.events.MembershipReclaimEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.events.MembershipReclaimEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.events.MembershipReclaimEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCommunityId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getMembershipId();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getUserKid();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
};


/**
 * optional int32 community_id = 1;
 * @return {number}
 */
proto.events.MembershipReclaimEvent.prototype.getCommunityId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.events.MembershipReclaimEvent} returns this
 */
proto.events.MembershipReclaimEvent.prototype.setCommunityId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 membership_id = 2;
 * @return {number}
 */
proto.events.MembershipReclaimEvent.prototype.getMembershipId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.events.MembershipReclaimEvent} returns this
 */
proto.events.MembershipReclaimEvent.prototype.setMembershipId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 user_kid = 3;
 * @return {number}
 */
proto.events.MembershipReclaimEvent.prototype.getUserKid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.events.MembershipReclaimEvent} returns this
 */
proto.events.MembershipReclaimEvent.prototype.setUserKid = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 timestamp = 4;
 * @return {number}
 */
proto.events.MembershipReclaimEvent.prototype.getTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.events.MembershipReclaimEvent} returns this
 */
proto.events.MembershipReclaimEvent.prototype.setTimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.events.CommunityUpdateEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.events.CommunityUpdateEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.events.CommunityUpdateEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.events.CommunityUpdateEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    description: jspb.Message.getFieldWithDefault(msg, 2, ""),
    image: jspb.Message.getFieldWithDefault(msg, 3, ""),
    displayName: jspb.Message.getFieldWithDefault(msg, 4, ""),
    bid: jspb.Message.getFieldWithDefault(msg, 5, 0),
    userKid: jspb.Message.getFieldWithDefault(msg, 6, 0),
    timestamp: jspb.Message.getFieldWithDefault(msg, 7, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.events.CommunityUpdateEvent}
 */
proto.events.CommunityUpdateEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.events.CommunityUpdateEvent;
  return proto.events.CommunityUpdateEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.events.CommunityUpdateEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.events.CommunityUpdateEvent}
 */
proto.events.CommunityUpdateEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setImage(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDisplayName(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBid(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUserKid(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimestamp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.events.CommunityUpdateEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.events.CommunityUpdateEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.events.CommunityUpdateEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.events.CommunityUpdateEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getImage();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDisplayName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getBid();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getUserKid();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.events.CommunityUpdateEvent.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.events.CommunityUpdateEvent} returns this
 */
proto.events.CommunityUpdateEvent.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.events.CommunityUpdateEvent.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.events.CommunityUpdateEvent} returns this
 */
proto.events.CommunityUpdateEvent.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string image = 3;
 * @return {string}
 */
proto.events.CommunityUpdateEvent.prototype.getImage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.events.CommunityUpdateEvent} returns this
 */
proto.events.CommunityUpdateEvent.prototype.setImage = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string display_name = 4;
 * @return {string}
 */
proto.events.CommunityUpdateEvent.prototype.getDisplayName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.events.CommunityUpdateEvent} returns this
 */
proto.events.CommunityUpdateEvent.prototype.setDisplayName = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int32 bid = 5;
 * @return {number}
 */
proto.events.CommunityUpdateEvent.prototype.getBid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.events.CommunityUpdateEvent} returns this
 */
proto.events.CommunityUpdateEvent.prototype.setBid = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int32 user_kid = 6;
 * @return {number}
 */
proto.events.CommunityUpdateEvent.prototype.getUserKid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.events.CommunityUpdateEvent} returns this
 */
proto.events.CommunityUpdateEvent.prototype.setUserKid = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int64 timestamp = 7;
 * @return {number}
 */
proto.events.CommunityUpdateEvent.prototype.getTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.events.CommunityUpdateEvent} returns this
 */
proto.events.CommunityUpdateEvent.prototype.setTimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.events.EventsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.events.EventsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.events.EventsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.events.EventsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sequenceNumber: jspb.Message.getFieldWithDefault(msg, 1, 0),
    eventType: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.events.EventsRequest}
 */
proto.events.EventsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.events.EventsRequest;
  return proto.events.EventsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.events.EventsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.events.EventsRequest}
 */
proto.events.EventsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSequenceNumber(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEventType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.events.EventsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.events.EventsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.events.EventsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.events.EventsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSequenceNumber();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getEventType();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional int64 sequence_number = 1;
 * @return {number}
 */
proto.events.EventsRequest.prototype.getSequenceNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.events.EventsRequest} returns this
 */
proto.events.EventsRequest.prototype.setSequenceNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string event_type = 2;
 * @return {string}
 */
proto.events.EventsRequest.prototype.getEventType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.events.EventsRequest} returns this
 */
proto.events.EventsRequest.prototype.setEventType = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.events.Event.oneofGroups_ = [[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23]];

/**
 * @enum {number}
 */
proto.events.Event.EventCase = {
  EVENT_NOT_SET: 0,
  ACCOUNT_CREATE_EVENT: 3,
  DELEGATE_CREATE_EVENT: 4,
  DELEGATE_REMOVE_EVENT: 5,
  REACTION_CREATE_EVENT: 6,
  REACTION_REMOVE_EVENT: 7,
  REACTION_CREATE_EVENT_WITH_REF: 8,
  REACTION_REMOVE_EVENT_WITH_REF: 9,
  PUBLICATION_CREATE_EVENT: 10,
  PUBLICATION_REMOVE_EVENT: 11,
  PUBLICATION_CREATE_WITH_REF_EVENT: 12,
  PUBLICATION_REMOVE_WITH_REF_EVENT: 13,
  ACCOUNT_FOLLOW_EVENT: 14,
  ACCOUNT_UNFOLLOW_EVENT: 15,
  USERNAME_REGISTRATION_EVENT: 16,
  PROFILE_UPDATE_EVENT: 17,
  COMMUNITY_REGISTERED_EVENT: 18,
  MEMBER_JOIN_EVENT: 19,
  MEMBERSHIP_CHANGE_EVENT: 20,
  MEMBERSHIP_DELETE_EVENT: 21,
  MEMBERSHIP_RECLAIM_EVENT: 22,
  COMMUNITY_UPDATE_EVENT: 23
};

/**
 * @return {proto.events.Event.EventCase}
 */
proto.events.Event.prototype.getEventCase = function() {
  return /** @type {proto.events.Event.EventCase} */(jspb.Message.computeOneofCase(this, proto.events.Event.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.events.Event.prototype.toObject = function(opt_includeInstance) {
  return proto.events.Event.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.events.Event} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.events.Event.toObject = function(includeInstance, msg) {
  var f, obj = {
    eventType: jspb.Message.getFieldWithDefault(msg, 1, ""),
    sequenceNumber: jspb.Message.getFieldWithDefault(msg, 2, 0),
    accountCreateEvent: (f = msg.getAccountCreateEvent()) && proto.events.AccountCreateEvent.toObject(includeInstance, f),
    delegateCreateEvent: (f = msg.getDelegateCreateEvent()) && proto.events.DelegateCreateEvent.toObject(includeInstance, f),
    delegateRemoveEvent: (f = msg.getDelegateRemoveEvent()) && proto.events.DelegateRemoveEvent.toObject(includeInstance, f),
    reactionCreateEvent: (f = msg.getReactionCreateEvent()) && proto.events.ReactionCreateEvent.toObject(includeInstance, f),
    reactionRemoveEvent: (f = msg.getReactionRemoveEvent()) && proto.events.ReactionRemoveEvent.toObject(includeInstance, f),
    reactionCreateEventWithRef: (f = msg.getReactionCreateEventWithRef()) && proto.events.ReactionCreateEventWithRef.toObject(includeInstance, f),
    reactionRemoveEventWithRef: (f = msg.getReactionRemoveEventWithRef()) && proto.events.ReactionRemoveEventWithRef.toObject(includeInstance, f),
    publicationCreateEvent: (f = msg.getPublicationCreateEvent()) && proto.events.PublicationCreateEvent.toObject(includeInstance, f),
    publicationRemoveEvent: (f = msg.getPublicationRemoveEvent()) && proto.events.PublicationRemoveEvent.toObject(includeInstance, f),
    publicationCreateWithRefEvent: (f = msg.getPublicationCreateWithRefEvent()) && proto.events.PublicationCreateWithRefEvent.toObject(includeInstance, f),
    publicationRemoveWithRefEvent: (f = msg.getPublicationRemoveWithRefEvent()) && proto.events.PublicationRemoveWithRefEvent.toObject(includeInstance, f),
    accountFollowEvent: (f = msg.getAccountFollowEvent()) && proto.events.AccountFollowEvent.toObject(includeInstance, f),
    accountUnfollowEvent: (f = msg.getAccountUnfollowEvent()) && proto.events.AccountUnfollowEvent.toObject(includeInstance, f),
    usernameRegistrationEvent: (f = msg.getUsernameRegistrationEvent()) && proto.events.UsernameRegistrationEvent.toObject(includeInstance, f),
    profileUpdateEvent: (f = msg.getProfileUpdateEvent()) && proto.events.ProfileUpdateEvent.toObject(includeInstance, f),
    communityRegisteredEvent: (f = msg.getCommunityRegisteredEvent()) && proto.events.CommunityRegisteredEvent.toObject(includeInstance, f),
    memberJoinEvent: (f = msg.getMemberJoinEvent()) && proto.events.MemberJoinEvent.toObject(includeInstance, f),
    membershipChangeEvent: (f = msg.getMembershipChangeEvent()) && proto.events.MembershipChangeEvent.toObject(includeInstance, f),
    membershipDeleteEvent: (f = msg.getMembershipDeleteEvent()) && proto.events.MembershipDeleteEvent.toObject(includeInstance, f),
    membershipReclaimEvent: (f = msg.getMembershipReclaimEvent()) && proto.events.MembershipReclaimEvent.toObject(includeInstance, f),
    communityUpdateEvent: (f = msg.getCommunityUpdateEvent()) && proto.events.CommunityUpdateEvent.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.events.Event}
 */
proto.events.Event.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.events.Event;
  return proto.events.Event.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.events.Event} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.events.Event}
 */
proto.events.Event.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEventType(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSequenceNumber(value);
      break;
    case 3:
      var value = new proto.events.AccountCreateEvent;
      reader.readMessage(value,proto.events.AccountCreateEvent.deserializeBinaryFromReader);
      msg.setAccountCreateEvent(value);
      break;
    case 4:
      var value = new proto.events.DelegateCreateEvent;
      reader.readMessage(value,proto.events.DelegateCreateEvent.deserializeBinaryFromReader);
      msg.setDelegateCreateEvent(value);
      break;
    case 5:
      var value = new proto.events.DelegateRemoveEvent;
      reader.readMessage(value,proto.events.DelegateRemoveEvent.deserializeBinaryFromReader);
      msg.setDelegateRemoveEvent(value);
      break;
    case 6:
      var value = new proto.events.ReactionCreateEvent;
      reader.readMessage(value,proto.events.ReactionCreateEvent.deserializeBinaryFromReader);
      msg.setReactionCreateEvent(value);
      break;
    case 7:
      var value = new proto.events.ReactionRemoveEvent;
      reader.readMessage(value,proto.events.ReactionRemoveEvent.deserializeBinaryFromReader);
      msg.setReactionRemoveEvent(value);
      break;
    case 8:
      var value = new proto.events.ReactionCreateEventWithRef;
      reader.readMessage(value,proto.events.ReactionCreateEventWithRef.deserializeBinaryFromReader);
      msg.setReactionCreateEventWithRef(value);
      break;
    case 9:
      var value = new proto.events.ReactionRemoveEventWithRef;
      reader.readMessage(value,proto.events.ReactionRemoveEventWithRef.deserializeBinaryFromReader);
      msg.setReactionRemoveEventWithRef(value);
      break;
    case 10:
      var value = new proto.events.PublicationCreateEvent;
      reader.readMessage(value,proto.events.PublicationCreateEvent.deserializeBinaryFromReader);
      msg.setPublicationCreateEvent(value);
      break;
    case 11:
      var value = new proto.events.PublicationRemoveEvent;
      reader.readMessage(value,proto.events.PublicationRemoveEvent.deserializeBinaryFromReader);
      msg.setPublicationRemoveEvent(value);
      break;
    case 12:
      var value = new proto.events.PublicationCreateWithRefEvent;
      reader.readMessage(value,proto.events.PublicationCreateWithRefEvent.deserializeBinaryFromReader);
      msg.setPublicationCreateWithRefEvent(value);
      break;
    case 13:
      var value = new proto.events.PublicationRemoveWithRefEvent;
      reader.readMessage(value,proto.events.PublicationRemoveWithRefEvent.deserializeBinaryFromReader);
      msg.setPublicationRemoveWithRefEvent(value);
      break;
    case 14:
      var value = new proto.events.AccountFollowEvent;
      reader.readMessage(value,proto.events.AccountFollowEvent.deserializeBinaryFromReader);
      msg.setAccountFollowEvent(value);
      break;
    case 15:
      var value = new proto.events.AccountUnfollowEvent;
      reader.readMessage(value,proto.events.AccountUnfollowEvent.deserializeBinaryFromReader);
      msg.setAccountUnfollowEvent(value);
      break;
    case 16:
      var value = new proto.events.UsernameRegistrationEvent;
      reader.readMessage(value,proto.events.UsernameRegistrationEvent.deserializeBinaryFromReader);
      msg.setUsernameRegistrationEvent(value);
      break;
    case 17:
      var value = new proto.events.ProfileUpdateEvent;
      reader.readMessage(value,proto.events.ProfileUpdateEvent.deserializeBinaryFromReader);
      msg.setProfileUpdateEvent(value);
      break;
    case 18:
      var value = new proto.events.CommunityRegisteredEvent;
      reader.readMessage(value,proto.events.CommunityRegisteredEvent.deserializeBinaryFromReader);
      msg.setCommunityRegisteredEvent(value);
      break;
    case 19:
      var value = new proto.events.MemberJoinEvent;
      reader.readMessage(value,proto.events.MemberJoinEvent.deserializeBinaryFromReader);
      msg.setMemberJoinEvent(value);
      break;
    case 20:
      var value = new proto.events.MembershipChangeEvent;
      reader.readMessage(value,proto.events.MembershipChangeEvent.deserializeBinaryFromReader);
      msg.setMembershipChangeEvent(value);
      break;
    case 21:
      var value = new proto.events.MembershipDeleteEvent;
      reader.readMessage(value,proto.events.MembershipDeleteEvent.deserializeBinaryFromReader);
      msg.setMembershipDeleteEvent(value);
      break;
    case 22:
      var value = new proto.events.MembershipReclaimEvent;
      reader.readMessage(value,proto.events.MembershipReclaimEvent.deserializeBinaryFromReader);
      msg.setMembershipReclaimEvent(value);
      break;
    case 23:
      var value = new proto.events.CommunityUpdateEvent;
      reader.readMessage(value,proto.events.CommunityUpdateEvent.deserializeBinaryFromReader);
      msg.setCommunityUpdateEvent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.events.Event.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.events.Event.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.events.Event} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.events.Event.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEventType();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSequenceNumber();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getAccountCreateEvent();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.events.AccountCreateEvent.serializeBinaryToWriter
    );
  }
  f = message.getDelegateCreateEvent();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.events.DelegateCreateEvent.serializeBinaryToWriter
    );
  }
  f = message.getDelegateRemoveEvent();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.events.DelegateRemoveEvent.serializeBinaryToWriter
    );
  }
  f = message.getReactionCreateEvent();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.events.ReactionCreateEvent.serializeBinaryToWriter
    );
  }
  f = message.getReactionRemoveEvent();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.events.ReactionRemoveEvent.serializeBinaryToWriter
    );
  }
  f = message.getReactionCreateEventWithRef();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.events.ReactionCreateEventWithRef.serializeBinaryToWriter
    );
  }
  f = message.getReactionRemoveEventWithRef();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.events.ReactionRemoveEventWithRef.serializeBinaryToWriter
    );
  }
  f = message.getPublicationCreateEvent();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.events.PublicationCreateEvent.serializeBinaryToWriter
    );
  }
  f = message.getPublicationRemoveEvent();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.events.PublicationRemoveEvent.serializeBinaryToWriter
    );
  }
  f = message.getPublicationCreateWithRefEvent();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.events.PublicationCreateWithRefEvent.serializeBinaryToWriter
    );
  }
  f = message.getPublicationRemoveWithRefEvent();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      proto.events.PublicationRemoveWithRefEvent.serializeBinaryToWriter
    );
  }
  f = message.getAccountFollowEvent();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      proto.events.AccountFollowEvent.serializeBinaryToWriter
    );
  }
  f = message.getAccountUnfollowEvent();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      proto.events.AccountUnfollowEvent.serializeBinaryToWriter
    );
  }
  f = message.getUsernameRegistrationEvent();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      proto.events.UsernameRegistrationEvent.serializeBinaryToWriter
    );
  }
  f = message.getProfileUpdateEvent();
  if (f != null) {
    writer.writeMessage(
      17,
      f,
      proto.events.ProfileUpdateEvent.serializeBinaryToWriter
    );
  }
  f = message.getCommunityRegisteredEvent();
  if (f != null) {
    writer.writeMessage(
      18,
      f,
      proto.events.CommunityRegisteredEvent.serializeBinaryToWriter
    );
  }
  f = message.getMemberJoinEvent();
  if (f != null) {
    writer.writeMessage(
      19,
      f,
      proto.events.MemberJoinEvent.serializeBinaryToWriter
    );
  }
  f = message.getMembershipChangeEvent();
  if (f != null) {
    writer.writeMessage(
      20,
      f,
      proto.events.MembershipChangeEvent.serializeBinaryToWriter
    );
  }
  f = message.getMembershipDeleteEvent();
  if (f != null) {
    writer.writeMessage(
      21,
      f,
      proto.events.MembershipDeleteEvent.serializeBinaryToWriter
    );
  }
  f = message.getMembershipReclaimEvent();
  if (f != null) {
    writer.writeMessage(
      22,
      f,
      proto.events.MembershipReclaimEvent.serializeBinaryToWriter
    );
  }
  f = message.getCommunityUpdateEvent();
  if (f != null) {
    writer.writeMessage(
      23,
      f,
      proto.events.CommunityUpdateEvent.serializeBinaryToWriter
    );
  }
};


/**
 * optional string event_type = 1;
 * @return {string}
 */
proto.events.Event.prototype.getEventType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.events.Event} returns this
 */
proto.events.Event.prototype.setEventType = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 sequence_number = 2;
 * @return {number}
 */
proto.events.Event.prototype.getSequenceNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.events.Event} returns this
 */
proto.events.Event.prototype.setSequenceNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional AccountCreateEvent account_create_event = 3;
 * @return {?proto.events.AccountCreateEvent}
 */
proto.events.Event.prototype.getAccountCreateEvent = function() {
  return /** @type{?proto.events.AccountCreateEvent} */ (
    jspb.Message.getWrapperField(this, proto.events.AccountCreateEvent, 3));
};


/**
 * @param {?proto.events.AccountCreateEvent|undefined} value
 * @return {!proto.events.Event} returns this
*/
proto.events.Event.prototype.setAccountCreateEvent = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.events.Event.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.events.Event} returns this
 */
proto.events.Event.prototype.clearAccountCreateEvent = function() {
  return this.setAccountCreateEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.events.Event.prototype.hasAccountCreateEvent = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional DelegateCreateEvent delegate_create_event = 4;
 * @return {?proto.events.DelegateCreateEvent}
 */
proto.events.Event.prototype.getDelegateCreateEvent = function() {
  return /** @type{?proto.events.DelegateCreateEvent} */ (
    jspb.Message.getWrapperField(this, proto.events.DelegateCreateEvent, 4));
};


/**
 * @param {?proto.events.DelegateCreateEvent|undefined} value
 * @return {!proto.events.Event} returns this
*/
proto.events.Event.prototype.setDelegateCreateEvent = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.events.Event.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.events.Event} returns this
 */
proto.events.Event.prototype.clearDelegateCreateEvent = function() {
  return this.setDelegateCreateEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.events.Event.prototype.hasDelegateCreateEvent = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional DelegateRemoveEvent delegate_remove_event = 5;
 * @return {?proto.events.DelegateRemoveEvent}
 */
proto.events.Event.prototype.getDelegateRemoveEvent = function() {
  return /** @type{?proto.events.DelegateRemoveEvent} */ (
    jspb.Message.getWrapperField(this, proto.events.DelegateRemoveEvent, 5));
};


/**
 * @param {?proto.events.DelegateRemoveEvent|undefined} value
 * @return {!proto.events.Event} returns this
*/
proto.events.Event.prototype.setDelegateRemoveEvent = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.events.Event.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.events.Event} returns this
 */
proto.events.Event.prototype.clearDelegateRemoveEvent = function() {
  return this.setDelegateRemoveEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.events.Event.prototype.hasDelegateRemoveEvent = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional ReactionCreateEvent reaction_create_event = 6;
 * @return {?proto.events.ReactionCreateEvent}
 */
proto.events.Event.prototype.getReactionCreateEvent = function() {
  return /** @type{?proto.events.ReactionCreateEvent} */ (
    jspb.Message.getWrapperField(this, proto.events.ReactionCreateEvent, 6));
};


/**
 * @param {?proto.events.ReactionCreateEvent|undefined} value
 * @return {!proto.events.Event} returns this
*/
proto.events.Event.prototype.setReactionCreateEvent = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.events.Event.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.events.Event} returns this
 */
proto.events.Event.prototype.clearReactionCreateEvent = function() {
  return this.setReactionCreateEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.events.Event.prototype.hasReactionCreateEvent = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional ReactionRemoveEvent reaction_remove_event = 7;
 * @return {?proto.events.ReactionRemoveEvent}
 */
proto.events.Event.prototype.getReactionRemoveEvent = function() {
  return /** @type{?proto.events.ReactionRemoveEvent} */ (
    jspb.Message.getWrapperField(this, proto.events.ReactionRemoveEvent, 7));
};


/**
 * @param {?proto.events.ReactionRemoveEvent|undefined} value
 * @return {!proto.events.Event} returns this
*/
proto.events.Event.prototype.setReactionRemoveEvent = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.events.Event.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.events.Event} returns this
 */
proto.events.Event.prototype.clearReactionRemoveEvent = function() {
  return this.setReactionRemoveEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.events.Event.prototype.hasReactionRemoveEvent = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional ReactionCreateEventWithRef reaction_create_event_with_ref = 8;
 * @return {?proto.events.ReactionCreateEventWithRef}
 */
proto.events.Event.prototype.getReactionCreateEventWithRef = function() {
  return /** @type{?proto.events.ReactionCreateEventWithRef} */ (
    jspb.Message.getWrapperField(this, proto.events.ReactionCreateEventWithRef, 8));
};


/**
 * @param {?proto.events.ReactionCreateEventWithRef|undefined} value
 * @return {!proto.events.Event} returns this
*/
proto.events.Event.prototype.setReactionCreateEventWithRef = function(value) {
  return jspb.Message.setOneofWrapperField(this, 8, proto.events.Event.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.events.Event} returns this
 */
proto.events.Event.prototype.clearReactionCreateEventWithRef = function() {
  return this.setReactionCreateEventWithRef(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.events.Event.prototype.hasReactionCreateEventWithRef = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional ReactionRemoveEventWithRef reaction_remove_event_with_ref = 9;
 * @return {?proto.events.ReactionRemoveEventWithRef}
 */
proto.events.Event.prototype.getReactionRemoveEventWithRef = function() {
  return /** @type{?proto.events.ReactionRemoveEventWithRef} */ (
    jspb.Message.getWrapperField(this, proto.events.ReactionRemoveEventWithRef, 9));
};


/**
 * @param {?proto.events.ReactionRemoveEventWithRef|undefined} value
 * @return {!proto.events.Event} returns this
*/
proto.events.Event.prototype.setReactionRemoveEventWithRef = function(value) {
  return jspb.Message.setOneofWrapperField(this, 9, proto.events.Event.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.events.Event} returns this
 */
proto.events.Event.prototype.clearReactionRemoveEventWithRef = function() {
  return this.setReactionRemoveEventWithRef(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.events.Event.prototype.hasReactionRemoveEventWithRef = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional PublicationCreateEvent publication_create_event = 10;
 * @return {?proto.events.PublicationCreateEvent}
 */
proto.events.Event.prototype.getPublicationCreateEvent = function() {
  return /** @type{?proto.events.PublicationCreateEvent} */ (
    jspb.Message.getWrapperField(this, proto.events.PublicationCreateEvent, 10));
};


/**
 * @param {?proto.events.PublicationCreateEvent|undefined} value
 * @return {!proto.events.Event} returns this
*/
proto.events.Event.prototype.setPublicationCreateEvent = function(value) {
  return jspb.Message.setOneofWrapperField(this, 10, proto.events.Event.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.events.Event} returns this
 */
proto.events.Event.prototype.clearPublicationCreateEvent = function() {
  return this.setPublicationCreateEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.events.Event.prototype.hasPublicationCreateEvent = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional PublicationRemoveEvent publication_remove_event = 11;
 * @return {?proto.events.PublicationRemoveEvent}
 */
proto.events.Event.prototype.getPublicationRemoveEvent = function() {
  return /** @type{?proto.events.PublicationRemoveEvent} */ (
    jspb.Message.getWrapperField(this, proto.events.PublicationRemoveEvent, 11));
};


/**
 * @param {?proto.events.PublicationRemoveEvent|undefined} value
 * @return {!proto.events.Event} returns this
*/
proto.events.Event.prototype.setPublicationRemoveEvent = function(value) {
  return jspb.Message.setOneofWrapperField(this, 11, proto.events.Event.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.events.Event} returns this
 */
proto.events.Event.prototype.clearPublicationRemoveEvent = function() {
  return this.setPublicationRemoveEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.events.Event.prototype.hasPublicationRemoveEvent = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional PublicationCreateWithRefEvent publication_create_with_ref_event = 12;
 * @return {?proto.events.PublicationCreateWithRefEvent}
 */
proto.events.Event.prototype.getPublicationCreateWithRefEvent = function() {
  return /** @type{?proto.events.PublicationCreateWithRefEvent} */ (
    jspb.Message.getWrapperField(this, proto.events.PublicationCreateWithRefEvent, 12));
};


/**
 * @param {?proto.events.PublicationCreateWithRefEvent|undefined} value
 * @return {!proto.events.Event} returns this
*/
proto.events.Event.prototype.setPublicationCreateWithRefEvent = function(value) {
  return jspb.Message.setOneofWrapperField(this, 12, proto.events.Event.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.events.Event} returns this
 */
proto.events.Event.prototype.clearPublicationCreateWithRefEvent = function() {
  return this.setPublicationCreateWithRefEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.events.Event.prototype.hasPublicationCreateWithRefEvent = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional PublicationRemoveWithRefEvent publication_remove_with_ref_event = 13;
 * @return {?proto.events.PublicationRemoveWithRefEvent}
 */
proto.events.Event.prototype.getPublicationRemoveWithRefEvent = function() {
  return /** @type{?proto.events.PublicationRemoveWithRefEvent} */ (
    jspb.Message.getWrapperField(this, proto.events.PublicationRemoveWithRefEvent, 13));
};


/**
 * @param {?proto.events.PublicationRemoveWithRefEvent|undefined} value
 * @return {!proto.events.Event} returns this
*/
proto.events.Event.prototype.setPublicationRemoveWithRefEvent = function(value) {
  return jspb.Message.setOneofWrapperField(this, 13, proto.events.Event.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.events.Event} returns this
 */
proto.events.Event.prototype.clearPublicationRemoveWithRefEvent = function() {
  return this.setPublicationRemoveWithRefEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.events.Event.prototype.hasPublicationRemoveWithRefEvent = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional AccountFollowEvent account_follow_event = 14;
 * @return {?proto.events.AccountFollowEvent}
 */
proto.events.Event.prototype.getAccountFollowEvent = function() {
  return /** @type{?proto.events.AccountFollowEvent} */ (
    jspb.Message.getWrapperField(this, proto.events.AccountFollowEvent, 14));
};


/**
 * @param {?proto.events.AccountFollowEvent|undefined} value
 * @return {!proto.events.Event} returns this
*/
proto.events.Event.prototype.setAccountFollowEvent = function(value) {
  return jspb.Message.setOneofWrapperField(this, 14, proto.events.Event.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.events.Event} returns this
 */
proto.events.Event.prototype.clearAccountFollowEvent = function() {
  return this.setAccountFollowEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.events.Event.prototype.hasAccountFollowEvent = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional AccountUnfollowEvent account_unfollow_event = 15;
 * @return {?proto.events.AccountUnfollowEvent}
 */
proto.events.Event.prototype.getAccountUnfollowEvent = function() {
  return /** @type{?proto.events.AccountUnfollowEvent} */ (
    jspb.Message.getWrapperField(this, proto.events.AccountUnfollowEvent, 15));
};


/**
 * @param {?proto.events.AccountUnfollowEvent|undefined} value
 * @return {!proto.events.Event} returns this
*/
proto.events.Event.prototype.setAccountUnfollowEvent = function(value) {
  return jspb.Message.setOneofWrapperField(this, 15, proto.events.Event.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.events.Event} returns this
 */
proto.events.Event.prototype.clearAccountUnfollowEvent = function() {
  return this.setAccountUnfollowEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.events.Event.prototype.hasAccountUnfollowEvent = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional UsernameRegistrationEvent username_registration_event = 16;
 * @return {?proto.events.UsernameRegistrationEvent}
 */
proto.events.Event.prototype.getUsernameRegistrationEvent = function() {
  return /** @type{?proto.events.UsernameRegistrationEvent} */ (
    jspb.Message.getWrapperField(this, proto.events.UsernameRegistrationEvent, 16));
};


/**
 * @param {?proto.events.UsernameRegistrationEvent|undefined} value
 * @return {!proto.events.Event} returns this
*/
proto.events.Event.prototype.setUsernameRegistrationEvent = function(value) {
  return jspb.Message.setOneofWrapperField(this, 16, proto.events.Event.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.events.Event} returns this
 */
proto.events.Event.prototype.clearUsernameRegistrationEvent = function() {
  return this.setUsernameRegistrationEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.events.Event.prototype.hasUsernameRegistrationEvent = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional ProfileUpdateEvent profile_update_event = 17;
 * @return {?proto.events.ProfileUpdateEvent}
 */
proto.events.Event.prototype.getProfileUpdateEvent = function() {
  return /** @type{?proto.events.ProfileUpdateEvent} */ (
    jspb.Message.getWrapperField(this, proto.events.ProfileUpdateEvent, 17));
};


/**
 * @param {?proto.events.ProfileUpdateEvent|undefined} value
 * @return {!proto.events.Event} returns this
*/
proto.events.Event.prototype.setProfileUpdateEvent = function(value) {
  return jspb.Message.setOneofWrapperField(this, 17, proto.events.Event.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.events.Event} returns this
 */
proto.events.Event.prototype.clearProfileUpdateEvent = function() {
  return this.setProfileUpdateEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.events.Event.prototype.hasProfileUpdateEvent = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional CommunityRegisteredEvent community_registered_event = 18;
 * @return {?proto.events.CommunityRegisteredEvent}
 */
proto.events.Event.prototype.getCommunityRegisteredEvent = function() {
  return /** @type{?proto.events.CommunityRegisteredEvent} */ (
    jspb.Message.getWrapperField(this, proto.events.CommunityRegisteredEvent, 18));
};


/**
 * @param {?proto.events.CommunityRegisteredEvent|undefined} value
 * @return {!proto.events.Event} returns this
*/
proto.events.Event.prototype.setCommunityRegisteredEvent = function(value) {
  return jspb.Message.setOneofWrapperField(this, 18, proto.events.Event.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.events.Event} returns this
 */
proto.events.Event.prototype.clearCommunityRegisteredEvent = function() {
  return this.setCommunityRegisteredEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.events.Event.prototype.hasCommunityRegisteredEvent = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional MemberJoinEvent member_join_event = 19;
 * @return {?proto.events.MemberJoinEvent}
 */
proto.events.Event.prototype.getMemberJoinEvent = function() {
  return /** @type{?proto.events.MemberJoinEvent} */ (
    jspb.Message.getWrapperField(this, proto.events.MemberJoinEvent, 19));
};


/**
 * @param {?proto.events.MemberJoinEvent|undefined} value
 * @return {!proto.events.Event} returns this
*/
proto.events.Event.prototype.setMemberJoinEvent = function(value) {
  return jspb.Message.setOneofWrapperField(this, 19, proto.events.Event.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.events.Event} returns this
 */
proto.events.Event.prototype.clearMemberJoinEvent = function() {
  return this.setMemberJoinEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.events.Event.prototype.hasMemberJoinEvent = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional MembershipChangeEvent membership_change_event = 20;
 * @return {?proto.events.MembershipChangeEvent}
 */
proto.events.Event.prototype.getMembershipChangeEvent = function() {
  return /** @type{?proto.events.MembershipChangeEvent} */ (
    jspb.Message.getWrapperField(this, proto.events.MembershipChangeEvent, 20));
};


/**
 * @param {?proto.events.MembershipChangeEvent|undefined} value
 * @return {!proto.events.Event} returns this
*/
proto.events.Event.prototype.setMembershipChangeEvent = function(value) {
  return jspb.Message.setOneofWrapperField(this, 20, proto.events.Event.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.events.Event} returns this
 */
proto.events.Event.prototype.clearMembershipChangeEvent = function() {
  return this.setMembershipChangeEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.events.Event.prototype.hasMembershipChangeEvent = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional MembershipDeleteEvent membership_delete_event = 21;
 * @return {?proto.events.MembershipDeleteEvent}
 */
proto.events.Event.prototype.getMembershipDeleteEvent = function() {
  return /** @type{?proto.events.MembershipDeleteEvent} */ (
    jspb.Message.getWrapperField(this, proto.events.MembershipDeleteEvent, 21));
};


/**
 * @param {?proto.events.MembershipDeleteEvent|undefined} value
 * @return {!proto.events.Event} returns this
*/
proto.events.Event.prototype.setMembershipDeleteEvent = function(value) {
  return jspb.Message.setOneofWrapperField(this, 21, proto.events.Event.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.events.Event} returns this
 */
proto.events.Event.prototype.clearMembershipDeleteEvent = function() {
  return this.setMembershipDeleteEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.events.Event.prototype.hasMembershipDeleteEvent = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional MembershipReclaimEvent membership_reclaim_event = 22;
 * @return {?proto.events.MembershipReclaimEvent}
 */
proto.events.Event.prototype.getMembershipReclaimEvent = function() {
  return /** @type{?proto.events.MembershipReclaimEvent} */ (
    jspb.Message.getWrapperField(this, proto.events.MembershipReclaimEvent, 22));
};


/**
 * @param {?proto.events.MembershipReclaimEvent|undefined} value
 * @return {!proto.events.Event} returns this
*/
proto.events.Event.prototype.setMembershipReclaimEvent = function(value) {
  return jspb.Message.setOneofWrapperField(this, 22, proto.events.Event.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.events.Event} returns this
 */
proto.events.Event.prototype.clearMembershipReclaimEvent = function() {
  return this.setMembershipReclaimEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.events.Event.prototype.hasMembershipReclaimEvent = function() {
  return jspb.Message.getField(this, 22) != null;
};


/**
 * optional CommunityUpdateEvent community_update_event = 23;
 * @return {?proto.events.CommunityUpdateEvent}
 */
proto.events.Event.prototype.getCommunityUpdateEvent = function() {
  return /** @type{?proto.events.CommunityUpdateEvent} */ (
    jspb.Message.getWrapperField(this, proto.events.CommunityUpdateEvent, 23));
};


/**
 * @param {?proto.events.CommunityUpdateEvent|undefined} value
 * @return {!proto.events.Event} returns this
*/
proto.events.Event.prototype.setCommunityUpdateEvent = function(value) {
  return jspb.Message.setOneofWrapperField(this, 23, proto.events.Event.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.events.Event} returns this
 */
proto.events.Event.prototype.clearCommunityUpdateEvent = function() {
  return this.setCommunityUpdateEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.events.Event.prototype.hasCommunityUpdateEvent = function() {
  return jspb.Message.getField(this, 23) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.events.EventRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.events.EventRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.events.EventRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.events.EventRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sequenceNumber: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.events.EventRequest}
 */
proto.events.EventRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.events.EventRequest;
  return proto.events.EventRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.events.EventRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.events.EventRequest}
 */
proto.events.EventRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSequenceNumber(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.events.EventRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.events.EventRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.events.EventRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.events.EventRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSequenceNumber();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * optional int64 sequence_number = 1;
 * @return {number}
 */
proto.events.EventRequest.prototype.getSequenceNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.events.EventRequest} returns this
 */
proto.events.EventRequest.prototype.setSequenceNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


goog.object.extend(exports, proto.events);
